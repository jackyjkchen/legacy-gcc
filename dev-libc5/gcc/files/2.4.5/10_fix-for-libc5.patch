diff --git a/Makefile.in b/Makefile.in
index aa76d5e..b7a8cb2 100644
--- a/Makefile.in
+++ b/Makefile.in
@@ -361,8 +361,8 @@ HOST_PRINT = $(HOST_PREFIX)print-rtl.o
 # Both . and srcdir are used, in that order,
 # so that tm.h and config.h will be found in the compilation
 # subdirectory rather than in the source directory.
-INCLUDES = -I. -I$(srcdir) -I$(srcdir)/config
-SUBDIR_INCLUDES = -I.. -I../$(srcdir) -I../$(srcdir)/config
+INCLUDES = -I. -Iinclude -I$(srcdir) -I$(srcdir)/config
+SUBDIR_INCLUDES = -I.. -I../include -I../$(srcdir) -I../$(srcdir)/config
 
 # Always use -I$(srcdir)/config when compiling.
 .c.o:
@@ -560,7 +560,7 @@ enquire.o: $(srcdir)/enquire.c $(GCC_PASSES)
 #	-if [ "$(srcdir)" != "." ]; then rm -f ./enquire.c; else true; fi
 #	-cp $(srcdir)/enquire.c . > /dev/null 2>&1
 # Breaking this line caused a problem with one version of GNU make.
-	$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(ALL_CPPFLAGS) $(ENQUIRE_CFLAGS) -I. -I$(srcdir) -c $(srcdir)/enquire.c
+	$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(ALL_CPPFLAGS) $(ENQUIRE_CFLAGS) -I. -Iinclude -I$(srcdir) -c $(srcdir)/enquire.c
 
 # Build the version of limits.h that we will install.
 xlimits.h: glimits.h limitx.h limity.h
@@ -862,7 +862,7 @@ c-common.o : c-common.c $(CONFIG_H) $(TREE_H) c-tree.h c-lex.h flags.h
 
 gcc.o: gcc.c $(CONFIG_H) gvarargs.h config.status
 	$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \
-  -DSTANDARD_STARTFILE_PREFIX=\"$(libdir)/\" \
+  -DSTANDARD_STARTFILE_PREFIX=\"$(tooldir)/lib/\" \
   -DSTANDARD_EXEC_PREFIX=\"$(libdir)/gcc-lib/\" \
   -DDEFAULT_TARGET_MACHINE=\"$(target)\" \
   -DTOOLDIR_BASE_PREFIX=\"$(exec_prefix)/\" \
diff --git a/cccp.c b/cccp.c
index 292a7e3..45179d7 100644
--- a/cccp.c
+++ b/cccp.c
@@ -39,10 +39,6 @@ typedef unsigned char U_CHAR;
 #include "config.h"
 #endif /* not EMACS */
 
-#ifndef STANDARD_INCLUDE_DIR
-#define STANDARD_INCLUDE_DIR "/usr/include"
-#endif
-
 #ifndef LOCAL_INCLUDE_DIR
 #define LOCAL_INCLUDE_DIR "/usr/local/include"
 #endif
@@ -578,7 +574,6 @@ static struct default_include { char *fname; int cplusplus; } include_defaults_a
 #ifdef SYSTEM_INCLUDE_DIR
     { SYSTEM_INCLUDE_DIR, 0},
 #endif
-    { STANDARD_INCLUDE_DIR, 0},
 #endif /* not CROSS_COMPILE */
     { 0, 0}
     };
diff --git a/g++ b/g++
index 42e9f20..9d80072 100755
--- a/g++
+++ b/g++
@@ -4,7 +4,7 @@
 
 # The compiler name might be different when doing cross-compilation
 # (this should be configured)
-gcc_name=gcc-2.4.5
+gcc_name=i586-legacy-linux-gnulibc1-gcc-2.4.5
 speclang=-xnone
 
 # replace the command name by the name of the new command
@@ -24,7 +24,7 @@ first=yes
 # More precisely, it is the option that wants an argument.
 quote=
 # $library is made empty to disable use of libg++.
-library=-lg++
+library=
 numargs=$#
 
 # ash requires the newline before `do'.
diff --git a/protoize.c b/protoize.c
index 7598ba9..1d99307 100644
--- a/protoize.c
+++ b/protoize.c
@@ -254,13 +254,6 @@ static const unexpansion unexpansions[] = {
 
 static const int hash_mask = (HASH_TABLE_SIZE - 1);
 
-/* Make a table of default system include directories
-   just as it is done in cccp.c.  */
-
-#ifndef STANDARD_INCLUDE_DIR
-#define STANDARD_INCLUDE_DIR "/usr/include"
-#endif
-
 #ifndef LOCAL_INCLUDE_DIR
 #define LOCAL_INCLUDE_DIR "/usr/local/include"
 #endif
@@ -295,7 +288,6 @@ struct default_include { const char *fname; int cplusplus; } include_defaults[]
 #ifdef SYSTEM_INCLUDE_DIR
     { SYSTEM_INCLUDE_DIR, 0},
 #endif
-    { STANDARD_INCLUDE_DIR, 0},
 #endif /* not CROSS_COMPILE */
     { 0, 0}
     };
