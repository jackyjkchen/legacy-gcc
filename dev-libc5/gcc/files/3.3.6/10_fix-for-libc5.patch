diff --git a/configure b/configure
index 808f1a9..3275f71 100755
--- a/configure
+++ b/configure
@@ -296,7 +296,7 @@ do
 	--norecursion | --no*)
 		norecursion=yes
 		;;
-	--ol*)
+	--oldincludedir | --ol*)
 		oldincludedir=$optarg
 		diroptions="$diroptions --oldincludedir=$optarg"
 		;;
diff --git a/gcc/Makefile.in b/gcc/Makefile.in
index b44777c..127efe6 100644
--- a/gcc/Makefile.in
+++ b/gcc/Makefile.in
@@ -2384,8 +2384,8 @@ specs.ready: specs
 
 FIXINCSRCDIR=$(srcdir)/fixinc
 fixinc.sh: $(FIXINCSRCDIR)/mkfixinc.sh $(FIXINCSRCDIR)/fixincl.c \
-	$(FIXINCSRCDIR)/procopen.c $(FIXINCSRCDIR)/gnu-regex.c \
-	$(FIXINCSRCDIR)/server.c $(FIXINCSRCDIR)/gnu-regex.h \
+	$(FIXINCSRCDIR)/procopen.c \
+	$(FIXINCSRCDIR)/server.c \
 	$(FIXINCSRCDIR)/server.h $(FIXINCSRCDIR)/inclhack.def specs.ready
 	(MAKE="$(MAKE)"; srcdir=`cd $(srcdir)/fixinc && ${PWD_COMMAND}` ; \
 	CC="$(HOST_CC)"; CFLAGS="$(HOST_CFLAGS)"; LDFLAGS="$(HOST_LDFLAGS)"; \
diff --git a/gcc/config/i386/linux.h b/gcc/config/i386/linux.h
index 03cb486..e50a997 100644
--- a/gcc/config/i386/linux.h
+++ b/gcc/config/i386/linux.h
@@ -236,7 +236,7 @@ Boston, MA 02111-1307, USA.  */
    signal-turned-exceptions for them.  There's also no configure-run for
    the target, so we can't check on (e.g.) HAVE_SYS_UCONTEXT_H.  Using the
    target libc1 macro should be enough.  */
-#ifndef USE_GNULIBC_1
+#if !(defined (USE_GNULIBC_1) || (__GLIBC__ == 2 && __GLIBC_MINOR__ == 0))
 #include <signal.h>
 #include <sys/ucontext.h>
 
diff --git a/gcc/cppdefault.h b/gcc/cppdefault.h
index c87e27d..ae48959 100644
--- a/gcc/cppdefault.h
+++ b/gcc/cppdefault.h
@@ -22,14 +22,6 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
 #ifndef GCC_CPPDEFAULT_H
 #define GCC_CPPDEFAULT_H
 
-/* This header contains declarations and/or #defines for all the
-   hard-wired defaults in cpp.  Note it's used by both cpplib and
-   tradcpp.  */
-
-#ifndef STANDARD_INCLUDE_DIR
-#define STANDARD_INCLUDE_DIR "/usr/include"
-#endif
-
 #ifndef STANDARD_INCLUDE_COMPONENT
 #define STANDARD_INCLUDE_COMPONENT 0
 #endif
diff --git a/gcc/fixinc/Makefile.in b/gcc/fixinc/Makefile.in
index ca29592..1fe6d6a 100644
--- a/gcc/fixinc/Makefile.in
+++ b/gcc/fixinc/Makefile.in
@@ -68,12 +68,12 @@ INCLUDES = -I. -I.. -I$(srcdir) -I$(srcdir)/.. \
 LIBERTY = ../../libiberty/libiberty.a
 
 ALLOBJ = fixincl.o fixtests.o fixfixes.o server.o procopen.o \
-      gnu-regex.o fixlib.o
+      fixlib.o
 
-TESTOBJ = fixincl.o fixlib.o fixtests.o gnu-regex.o
-FIXOBJ  = fixfixes.o fixlib.o gnu-regex.o
+TESTOBJ = fixincl.o fixlib.o fixtests.o
+FIXOBJ  = fixfixes.o fixlib.o
 
-HDR = server.h gnu-regex.h fixlib.h machname.h
+HDR = server.h fixlib.h machname.h
 FI  = fixincl@build_exeext@
 AF  = applyfix@build_exeext@
 
@@ -100,7 +100,6 @@ fixtests.o  : fixtests.c
 fixfixes.o  : fixfixes.c $(srcdir)/fixincl.x
 server.o    : server.c
 procopen.o  : procopen.c
-gnu-regex.o : gnu-regex.c
 fixlib.o    : fixlib.c
 
 #  'machname.h' is built in the build directory.
diff --git a/include/libiberty.h b/include/libiberty.h
index 676ceab..c9ca34f 100644
--- a/include/libiberty.h
+++ b/include/libiberty.h
@@ -285,14 +285,6 @@ extern int pwait PARAMS ((int, int *, int));
 extern int asprintf PARAMS ((char **, const char *, ...)) ATTRIBUTE_PRINTF_2;
 #endif
 
-#if !HAVE_DECL_VASPRINTF
-/* Like vsprintf but provides a pointer to malloc'd storage, which
-   must be freed by the caller.  */
-
-extern int vasprintf PARAMS ((char **, const char *, va_list))
-  ATTRIBUTE_PRINTF(2,0);
-#endif
-
 #define ARRAY_SIZE(a) (sizeof (a) / sizeof ((a)[0]))
 
 /* Drastically simplified alloca configurator.  If we're using GCC,
diff --git a/libstdc++-v3/config/os/gnu-linux/os_defines.h b/libstdc++-v3/config/os/gnu-linux/os_defines.h
index 21ea296..be32382 100644
--- a/libstdc++-v3/config/os/gnu-linux/os_defines.h
+++ b/libstdc++-v3/config/os/gnu-linux/os_defines.h
@@ -40,11 +40,8 @@
 
 #if !defined (__GLIBC__) || (__GLIBC__ == 2 && __GLIBC_MINOR__+ 0 == 0)
 
-// The types __off_t and __off64_t are not defined through <sys/types.h>
-// as _G_config assumes.  For libc5 and glibc 2.0 instead use
-// <gnu/types.h> and the old name for __off64_t.
 #include <gnu/types.h>
-typedef __loff_t __off64_t;
+typedef long long __off64_t;
 
 // These systems have declarations mismatching those in libio.h by
 // omitting throw qualifiers.  Cleanest way out is to not provide
