diff --git a/Makefile b/Makefile
index 588c65e..e750af1 100644
--- a/Makefile
+++ b/Makefile
@@ -384,7 +384,7 @@ new-method.o : new-method.c $(CONFIG_H) $(CPLUS_TREE_H)
 
 gcc.o: gcc.c $(CONFIG_H) gvarargs.h obstack.h
 	$(CC) $(CFLAGS) $(INCLUDES) \
-  -DSTANDARD_STARTFILE_PREFIX=\"$(libdir)/\" \
+  -DSTANDARD_STARTFILE_PREFIX=\"$(tooldir)/lib/\" \
   -DSTANDARD_EXEC_PREFIX=\"$(libsubdir)/\" \
   -c `echo $(srcdir)/gcc.c | sed 's,^\./,,'`
 
diff --git a/cccp.c b/cccp.c
index ee1b352..2947d8a 100644
--- a/cccp.c
+++ b/cccp.c
@@ -37,10 +37,6 @@ typedef unsigned char U_CHAR;
 #include "config.h"
 #endif /* not EMACS */
 
-#ifndef CC_INCLUDE_DIR
-#define CC_INCLUDE_DIR "/usr/include"
-#endif
-
 #ifndef STDC_VALUE
 #define STDC_VALUE 1
 #endif
@@ -283,7 +279,6 @@ struct file_name_list include_defaults[] =
 #ifndef VMS
     { &include_defaults[1], TOOL_INCLUDE_DIR },
     { &include_defaults[2], GCC_INCLUDE_DIR },
-    { &include_defaults[3], CC_INCLUDE_DIR },
     { 0, "/usr/local/include" }
 #else
     { &include_defaults[1], "GNU_CC_INCLUDE:" },       /* GNU includes */
@@ -302,7 +297,6 @@ struct file_name_list cplusplus_include_defaults[] =
     { &cplusplus_include_defaults[2], GPLUSPLUS_INCLUDE_DIR },
     /* Use GNU CC specific header files.  */
     { &cplusplus_include_defaults[3], GCC_INCLUDE_DIR },
-    { 0, CC_INCLUDE_DIR }
 #else
     { &cplusplus_include_defaults[1], "GNU_GXX_INCLUDE:" },
     { &cplusplus_include_defaults[2], "GNU_CC_INCLUDE:" },
diff --git a/crtstuff.c b/crtstuff.c
index 0a30340..e357f13 100644
--- a/crtstuff.c
+++ b/crtstuff.c
@@ -160,7 +160,7 @@ static void
 fini_dummy ()
 {
   asm (FINI_SECTION_ASM_OP);
-  __do_global_dtors_aux ();
+  asm ("call __do_global_dtors_aux");
 #ifdef FORCE_FINI_SECTION_ALIGN
   FORCE_FINI_SECTION_ALIGN;
 #endif
diff --git a/gcc.c b/gcc.c
index 0e2cf1e..61a407a 100644
--- a/gcc.c
+++ b/gcc.c
@@ -307,7 +307,7 @@ struct compiler compilers[] =
 		   %{v:-version} %{gg:-symout %g.sym} %{pg:-p} %{p}\
 		   %{pg:%{fomit-frame-pointer:%e-pg and -fomit-frame-pointer are incompatible}}\
 		   %{S:%W{o*}%{!o*:-o %b.s}}%{!S:-o %{|!pipe:%g.s}} |\n\
-              %{!S:i686-legacy-linux-gnu-as %{R} %{j} %{J} %{h} %{d2} %a %{gg:-G %g.sym}\
+              %{!S:i586-legacy-linux-gnulibc1-as %{R} %{j} %{J} %{h} %{d2} %a %{gg:-G %g.sym}\
 		      %{c:%W{o*}%{!o*:-o %w%b.o}}%{!c:-o %d%w%b.o}\
                       %{!pipe:%g.s}\n }}}"},
   {".cc",
@@ -322,7 +322,7 @@ struct compiler compilers[] =
 		   %{v:-version} %{gg:-symout %g.sym} %{pg:-p} %{p}\
 		   %{pg:%{fomit-frame-pointer:%e-pg and -fomit-frame-pointer are incompatible}}\
 		   %{S:%W{o*}%{!o*:-o %b.s}}%{!S:-o %{|!pipe:%g.s}} |\n\
-              %{!S:i686-legacy-linux-gnu-as %{R} %{j} %{J} %{h} %{d2} %a %{gg:-G %g.sym}\
+              %{!S:i586-legacy-linux-gnulibc1-as %{R} %{j} %{J} %{h} %{d2} %a %{gg:-G %g.sym}\
 		      %{c:%W{o*}%{!o*:-o %w%b.o}}%{!c:-o %d%w%b.o}\
                       %{!pipe:%g.s}\n }}}"},
   {".i",
@@ -330,10 +330,10 @@ struct compiler compilers[] =
 	%{g} %{O*} %{W*} %{w} %{pedantic} %{ansi} %{traditional}\
 	%{v:-version} %{gg:-symout %g.sym} %{pg:-p} %{p}\
 	%{S:%W{o*}%{!o*:-o %b.s}}%{!S:-o %{|!pipe:%g.s}} |\n\
-    %{!S:i686-legacy-linux-gnu-as %{R} %{j} %{J} %{h} %{d2} %a %{gg:-G %g.sym}\
+    %{!S:i586-legacy-linux-gnulibc1-as %{R} %{j} %{J} %{h} %{d2} %a %{gg:-G %g.sym}\
             %{c:%W{o*}%{!o*:-o %w%b.o}}%{!c:-o %d%w%b.o} %{!pipe:%g.s}\n }"},
   {".s",
-   "%{!S:i686-legacy-linux-gnu-as %{R} %{j} %{J} %{h} %{d2} %a \
+   "%{!S:i586-legacy-linux-gnulibc1-as %{R} %{j} %{J} %{h} %{d2} %a \
             %{c:%W{o*}%{!o*:-o %w%b.o}}%{!c:-o %d%w%b.o} %i\n }"},
   {".S",
    "cpp %{nostdinc} %{C} %{v} %{D*} %{U*} %{I*} %{M*} %{trigraphs} \
@@ -341,7 +341,7 @@ struct compiler compilers[] =
         %c %{O:-D__OPTIMIZE__} %{traditional} %{pedantic} %{P}\
 	%{Wcomment*} %{Wtrigraphs} %{Wall} %{w} %C\
         %i %{!M*:%{!E:%{!pipe:%g.s}}}%{E:%W{o*}}%{M*:%W{o*}} |\n\
-    %{!M*:%{!E:%{!S:i686-legacy-linux-gnu-as %{R} %{j} %{J} %{h} %{d2} %a \
+    %{!M*:%{!E:%{!S:i586-legacy-linux-gnulibc1-as %{R} %{j} %{J} %{h} %{d2} %a \
                     %{c:%W{o*}%{!o*:-o %w%b.o}}%{!c:-o %d%w%b.o}\
 		    %{!pipe:%g.s}\n }}}"},
   /* Mark end of table */
@@ -349,9 +349,9 @@ struct compiler compilers[] =
 };
 
 /* Here is the spec for running the linker, after compiling all files.  */
-char *link_spec = "%{!c:%{!M*:%{!E:%{!S:i686-legacy-linux-gnu-ld %{o*} %l\
+char *link_spec = "%{!c:%{!M*:%{!E:%{!S:i586-legacy-linux-gnulibc1-ld %{o*} %l\
  %{A} %{d} %{e*} %{N} %{n} %{r} %{s} %{S} %{T*} %{t} %{u*} %{X} %{x} %{z}\
- %{y*} %{!A:%{!nostdlib:%S}} \
+ %{y*} %{!A:%{!nostdlib:%S}} -L /usr/i586-legacy-linux-gnulibc1/lib \
  %{L*} %o %{!nostdlib:%G gnulib%s %L gnulib%s %{!A:%E}}\n }}}}";
 
 /* Accumulate a command (program name and args), and run it.  */
