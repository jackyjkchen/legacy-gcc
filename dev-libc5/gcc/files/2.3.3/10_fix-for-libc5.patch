diff --git a/Makefile.in b/Makefile.in
index 74fea79..becb3db 100644
--- a/Makefile.in
+++ b/Makefile.in
@@ -532,6 +532,8 @@ xlimits.h: glimits.h limitx.h limity.h
 	else \
 	  cat $(srcdir)/glimits.h > xlimits.h; \
 	fi
+	ln -sv xlimits.h limits.h
+	cp $(srcdir)/gsyslimits.h syslimits.h
 
 # Build libgcc.a.
 # This is done in two parts because some functions, in libgcc1.c,
@@ -828,7 +830,7 @@ c-common.o : c-common.c $(CONFIG_H) $(TREE_H) c-tree.h c-lex.h flags.h
 
 gcc.o: gcc.c $(CONFIG_H) gvarargs.h obstack.h
 	$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \
-  -DSTANDARD_STARTFILE_PREFIX=\"$(libdir)/\" \
+  -DSTANDARD_STARTFILE_PREFIX=\"$(tooldir)/lib/\" \
   -DSTANDARD_EXEC_PREFIX=\"$(libdir)/gcc-lib/\" \
   -DDEFAULT_TARGET_MACHINE=\"$(target)\" \
   -DTOOLDIR_BASE_PREFIX=\"$(exec_prefix)/\" \
diff --git a/cccp.c b/cccp.c
index 6dcc347..840fc1a 100644
--- a/cccp.c
+++ b/cccp.c
@@ -39,10 +39,6 @@ typedef unsigned char U_CHAR;
 #include "config.h"
 #endif /* not EMACS */
 
-#ifndef STANDARD_INCLUDE_DIR
-#define STANDARD_INCLUDE_DIR "/usr/include"
-#endif
-
 #ifndef LOCAL_INCLUDE_DIR
 #define LOCAL_INCLUDE_DIR "/usr/local/include"
 #endif
@@ -564,7 +560,6 @@ static struct default_include { char *fname; int cplusplus; } include_defaults_a
 #ifdef SYSTEM_INCLUDE_DIR
     { SYSTEM_INCLUDE_DIR, 0},
 #endif
-    { STANDARD_INCLUDE_DIR, 0},
 #endif /* not CROSS_COMPILE */
     { 0, 0}
     };
diff --git a/g++ b/g++
index cd41774..c070744 100755
--- a/g++
+++ b/g++
@@ -4,7 +4,7 @@
 
 # The compiler name might be different when doing cross-compilation
 # (this should be configured)
-gcc_name=gcc-2.3.3
+gcc_name=i586-legacy-linux-gnulibc1-gcc-2.3.3
 speclang=-xnone
 
 # replace the command name by the name of the new command
@@ -24,7 +24,7 @@ first=yes
 # More precisely, it is the option that wants an argument.
 quote=
 # $library is made empty to disable use of libg++.
-library=-lg++
+library=
 numargs=$#
 
 # ash requires the newline before `do'.
diff --git a/protoize.c b/protoize.c
index 97b036c..3f85909 100644
--- a/protoize.c
+++ b/protoize.c
@@ -258,13 +258,6 @@ static const unexpansion unexpansions[] = {
 
 static const int hash_mask = (HASH_TABLE_SIZE - 1);
 
-/* Make a table of default system include directories
-   just as it is done in cccp.c.  */
-
-#ifndef STANDARD_INCLUDE_DIR
-#define STANDARD_INCLUDE_DIR "/usr/include"
-#endif
-
 #ifndef LOCAL_INCLUDE_DIR
 #define LOCAL_INCLUDE_DIR "/usr/local/include"
 #endif
@@ -299,7 +292,6 @@ struct default_include { const char *fname; int cplusplus; } include_defaults[]
 #ifdef SYSTEM_INCLUDE_DIR
     { SYSTEM_INCLUDE_DIR, 0},
 #endif
-    { STANDARD_INCLUDE_DIR, 0},
 #endif /* not CROSS_COMPILE */
     { 0, 0}
     };
