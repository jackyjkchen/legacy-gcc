diff --git a/gcc/convert.c b/gcc/convert.c
index 25eec1181..16ba73841 100644
--- a/gcc/convert.c
+++ b/gcc/convert.c
@@ -520,7 +520,7 @@ convert_to_integer (tree type, tree expr)
     {
     case POINTER_TYPE:
     case REFERENCE_TYPE:
-      if (integer_zerop (expr))
+      if (integer_zerop (expr) && !TREE_OVERFLOW (expr))
 	return build_int_cst (type, 0);
 
       /* Convert to an unsigned integer of the correct width first, and from
diff --git a/gcc/testsuite/c-c++-common/pr82872.c b/gcc/testsuite/c-c++-common/pr82872.c
new file mode 100644
index 000000000..745d62255
--- /dev/null
+++ b/gcc/testsuite/c-c++-common/pr82872.c
@@ -0,0 +1,11 @@
+/* PR c++/82872 */
+/* { dg-do compile } */
+
+#include <stddef.h>
+
+struct S { int i, a[1]; };
+
+size_t foo (void)
+{
+  return offsetof (struct S, a[__PTRDIFF_MAX__]);
+}
