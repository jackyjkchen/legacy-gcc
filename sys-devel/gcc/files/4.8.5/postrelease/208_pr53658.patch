diff --git a/gcc/cp/pt.c b/gcc/cp/pt.c
index de48c5a46..b074cea76 100644
--- a/gcc/cp/pt.c
+++ b/gcc/cp/pt.c
@@ -7707,7 +7707,7 @@ lookup_template_class_1 (tree d1, tree arglist, tree in_decl, tree context,
       if (CLASS_TYPE_P (template_type) && is_dependent_type)
 	/* If the type makes use of template parameters, the
 	   code that generates debugging information will crash.  */
-	DECL_IGNORED_P (TYPE_STUB_DECL (t)) = 1;
+	DECL_IGNORED_P (TYPE_MAIN_DECL (t)) = 1;
 
       /* Possibly limit visibility based on template args.  */
       TREE_PUBLIC (type_decl) = 1;
diff --git a/gcc/testsuite/g++.dg/cpp0x/alias-decl-36.C b/gcc/testsuite/g++.dg/cpp0x/alias-decl-36.C
new file mode 100644
index 000000000..dd3a422c2
--- /dev/null
+++ b/gcc/testsuite/g++.dg/cpp0x/alias-decl-36.C
@@ -0,0 +1,6 @@
+// PR c++/53658
+// { dg-do compile { target c++11 } }
+
+struct A;
+template <typename> using Foo = const A;
+template <typename Item> Foo <Item> bar();
