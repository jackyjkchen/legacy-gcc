diff --git a/gcc/gimplify.c b/gcc/gimplify.c
index eb4c631f3..9abb24d77 100644
--- a/gcc/gimplify.c
+++ b/gcc/gimplify.c
@@ -6349,6 +6349,7 @@ gimplify_asm_expr (tree *expr_p, gimple_seq *pre_p, gimple_seq *post_p)
 	  /* Turn the in/out constraint into an output constraint.  */
 	  char *p = xstrdup (constraint);
 	  p[0] = '=';
+	  TREE_PURPOSE (link) = unshare_expr (TREE_PURPOSE (link));
 	  TREE_VALUE (TREE_PURPOSE (link)) = build_string (constraint_len, p);
 
 	  /* And add a matching input constraint.  */
diff --git a/gcc/testsuite/g++.dg/pr66279.C b/gcc/testsuite/g++.dg/pr66279.C
new file mode 100644
index 000000000..c878044a8
--- /dev/null
+++ b/gcc/testsuite/g++.dg/pr66279.C
@@ -0,0 +1,23 @@
+// { dg-do run }
+
+struct A {};
+
+struct B : public virtual A
+{
+  B();
+};
+
+B::B()
+{
+  unsigned int x = 42;
+
+  __asm__ __volatile__ ("" : "+r"(x));
+
+  if (x != 42)
+    __builtin_abort ();
+}
+
+int main()
+{
+  B b;
+}
