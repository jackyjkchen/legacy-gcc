diff --git a/gcc/cp/tree.c b/gcc/cp/tree.c
index 173c50a1..d69346a3 100644
--- a/gcc/cp/tree.c
+++ b/gcc/cp/tree.c
@@ -139,7 +139,9 @@ lvalue_p_1 (tree ref,
       break;
 
     case COND_EXPR:
-      op1_lvalue_kind = lvalue_p_1 (TREE_OPERAND (ref, 1),
+      op1_lvalue_kind = lvalue_p_1 (TREE_OPERAND (ref, 1)
+				    ? TREE_OPERAND (ref, 1)
+				    : TREE_OPERAND (ref, 0),
 				    treat_class_rvalues_as_lvalues);
       op2_lvalue_kind = lvalue_p_1 (TREE_OPERAND (ref, 2),
 				    treat_class_rvalues_as_lvalues);
diff --git a/gcc/cp/typeck.c b/gcc/cp/typeck.c
index 8d037cd8..bf32e02c 100644
--- a/gcc/cp/typeck.c
+++ b/gcc/cp/typeck.c
@@ -1409,7 +1409,9 @@ is_bitfield_expr_with_lowered_type (tree exp)
   switch (TREE_CODE (exp))
     {
     case COND_EXPR:
-      if (!is_bitfield_expr_with_lowered_type (TREE_OPERAND (exp, 1)))
+      if (!is_bitfield_expr_with_lowered_type (TREE_OPERAND (exp, 1)
+					       ? TREE_OPERAND (exp, 1)
+					       : TREE_OPERAND (exp, 0)))
 	return NULL_TREE;
       return is_bitfield_expr_with_lowered_type (TREE_OPERAND (exp, 2));
 
diff --git a/gcc/testsuite/g++.dg/template/cond7.C b/gcc/testsuite/g++.dg/template/cond7.C
new file mode 100644
index 00000000..c497a477
--- /dev/null
+++ b/gcc/testsuite/g++.dg/template/cond7.C
@@ -0,0 +1,13 @@
+// PR c++/34270
+// { dg-do compile }
+// { dg-options "" }
+
+void foo ()
+{
+  __typeof__ (0 ?: 0) x;
+}
+
+template<int> void bar ()
+{
+  __typeof__ (0 ?: 0) x;
+}
