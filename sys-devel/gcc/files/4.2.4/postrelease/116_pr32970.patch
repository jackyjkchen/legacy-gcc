diff --git a/gcc/testsuite/g++.dg/ext/altivec-14.C b/gcc/testsuite/g++.dg/ext/altivec-14.C
new file mode 100644
index 00000000..e5dd81c7
--- /dev/null
+++ b/gcc/testsuite/g++.dg/ext/altivec-14.C
@@ -0,0 +1,13 @@
+/* { dg-do compile { target powerpc*-*-* } } */
+/* { dg-require-effective-target powerpc_altivec_ok } */
+/* { dg-options "-maltivec" } */
+
+void f (__attribute__((altivec (vector__))) signed int * a,
+	__attribute__((altivec (vector__))) signed int * const b);
+
+int
+foo (void)
+{
+  __attribute__((altivec (vector__))) signed int a[1], b[1];
+  f (a, b);
+}
diff --git a/gcc/tree.c b/gcc/tree.c
index 55786403..5550d2d1 100644
--- a/gcc/tree.c
+++ b/gcc/tree.c
@@ -6872,10 +6872,7 @@ reconstruct_complex_type (tree type, tree bottom)
   else
     return bottom;
 
-  TYPE_READONLY (outer) = TYPE_READONLY (type);
-  TYPE_VOLATILE (outer) = TYPE_VOLATILE (type);
-
-  return outer;
+  return build_qualified_type (outer, TYPE_QUALS (type));
 }
 
 /* Returns a vector tree node given a mode (integer, vector, or BLKmode) and
