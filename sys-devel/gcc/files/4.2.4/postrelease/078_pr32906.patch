diff --git a/gcc/fortran/resolve.c b/gcc/fortran/resolve.c
index 722f74a5..1815ae67 100644
--- a/gcc/fortran/resolve.c
+++ b/gcc/fortran/resolve.c
@@ -6113,10 +6113,12 @@ static try
 resolve_fl_parameter (gfc_symbol *sym)
 {
   /* A parameter array's shape needs to be constant.  */
-  if (sym->as != NULL && !gfc_is_compile_time_shape (sym->as))
+  if (sym->as != NULL 
+      && (sym->as->type == AS_DEFERRED
+          || is_non_constant_shape_array (sym)))
     {
       gfc_error ("Parameter array '%s' at %L cannot be automatic "
-		 "or assumed shape", sym->name, &sym->declared_at);
+		 "or of deferred shape", sym->name, &sym->declared_at);
       return FAILURE;
     }
 
diff --git a/gcc/testsuite/gfortran.dg/parameter_array_ref_1.f90 b/gcc/testsuite/gfortran.dg/parameter_array_ref_1.f90
new file mode 100644
index 00000000..c22f3437
--- /dev/null
+++ b/gcc/testsuite/gfortran.dg/parameter_array_ref_1.f90
@@ -0,0 +1,13 @@
+! { dg-do compile }
+!
+! PR fortran/32906 - Parameter array ... cannot be automatic or assumed shape
+!
+! Testcase contributed by Florian Ladstaedter <flad AT gmx DOT at>
+!
+program test_program
+  integer, parameter :: len = 1
+  integer, parameter :: arr(max(len,1)) = (/1/)
+
+  character(len=*), dimension (1), parameter             :: specStr = (/'string'/)
+  double precision, dimension (size(specStr)), parameter :: specNum = (/99.0d0/)
+end
diff --git a/gcc/testsuite/gfortran.dg/shape_1.f90 b/gcc/testsuite/gfortran.dg/shape_1.f90
index aaf943f6..9292adb2 100644
--- a/gcc/testsuite/gfortran.dg/shape_1.f90
+++ b/gcc/testsuite/gfortran.dg/shape_1.f90
@@ -1,6 +1,6 @@
 ! { dg-do compile }
 ! PR 13201 we used to not give an error in those cases
 subroutine foo(n) 
-  integer, parameter :: a(n) = 1 ! { dg-error "cannot be automatic" "automatic shape" }
-  integer, parameter :: z(:) = (/ 1,2,3 /) ! { dg-error "cannot be automatic" "assumed shape" }
+  integer, parameter :: a(n) = 1           ! { dg-error "cannot be automatic" "automatic shape" }
+  integer, parameter :: z(:) = (/ 1,2,3 /) ! { dg-error "cannot be automatic" "deferred shape" }
 end subroutine
