diff --git a/gcc/c-parser.c b/gcc/c-parser.c
index b8700fcd..79c2970b 100644
--- a/gcc/c-parser.c
+++ b/gcc/c-parser.c
@@ -3098,6 +3098,7 @@ c_parser_braced_init (c_parser *parser, tree type, bool nested_p)
       ret.value = error_mark_node;
       ret.original_code = ERROR_MARK;
       c_parser_skip_until_found (parser, CPP_CLOSE_BRACE, "expected %<}%>");
+      pop_init_level (0);
       return ret;
     }
   c_parser_consume_token (parser);
diff --git a/gcc/testsuite/gcc.dg/init-bad-4.c b/gcc/testsuite/gcc.dg/init-bad-4.c
index 3f030029..c8c11845 100644
--- a/gcc/testsuite/gcc.dg/init-bad-4.c
+++ b/gcc/testsuite/gcc.dg/init-bad-4.c
@@ -2,4 +2,4 @@
 /* Origin: Richard Guenther <rguenth@gcc.gnu.org> */
 /* { dg-do compile } */
 
-struct A { } a = (struct A) {{ (X)0 }};  /* { dg-error "no members|extra brace|near|undeclared|constant|compound" } */
+struct A { } a = (struct A) {{ (X)0 }};  /* { dg-error "no members|extra brace|near|undeclared|constant|compound|excess" } */
diff --git a/gcc/testsuite/gcc.dg/noncompile/init-5.c b/gcc/testsuite/gcc.dg/noncompile/init-5.c
new file mode 100644
index 00000000..366397ae
--- /dev/null
+++ b/gcc/testsuite/gcc.dg/noncompile/init-5.c
@@ -0,0 +1,4 @@
+/* Test for ICE after syntax error in initializer with range
+   designator: PR 35446.  */
+
+int a[2][2] = { [0 ... 1] = { ; } }; /* { dg-error "expected expression" } */
