diff --git a/gcc/fortran/trans-array.c b/gcc/fortran/trans-array.c
index 74490bea..1dd4c565 100644
--- a/gcc/fortran/trans-array.c
+++ b/gcc/fortran/trans-array.c
@@ -727,7 +727,6 @@ gfc_conv_array_transpose (gfc_se * se, gfc_expr * expr)
   src_info = &src_ss->data.info;
   dest_info = &dest_ss->data.info;
   gcc_assert (dest_info->dimen == 2);
-  gcc_assert (src_info->dimen == 2);
 
   /* Get a descriptor for EXPR.  */
   gfc_init_se (&src_se, NULL);
diff --git a/gcc/testsuite/gfortran.dg/array_function_5.f90 b/gcc/testsuite/gfortran.dg/array_function_5.f90
new file mode 100644
index 00000000..da4873b6
--- /dev/null
+++ b/gcc/testsuite/gfortran.dg/array_function_5.f90
@@ -0,0 +1,16 @@
+! {  dg-do run )
+! PR41278 internal compiler error related to matmul and transpose
+! Test case prepared by Jerry DeLisle  <jvdelisle@gcc.gnu.org>
+program bug
+  implicit none
+  real, dimension(3,3) :: matA,matB,matC
+
+  matA(1,:)=(/1., 2., 3./)
+  matA(2,:)=(/4., 5., 6./)
+  matA(3,:)=(/7., 8., 9./)
+
+  matB=matmul(transpose(0.5*matA),matA)
+  matC = transpose(0.5*matA)
+  matC = matmul(matC, matA)
+  if (any(matB.ne.matC)) call abort()
+end program bug
