diff --git a/gcc/fold-const.c b/gcc/fold-const.c
index ad9377dcd..5129c7bc6 100644
--- a/gcc/fold-const.c
+++ b/gcc/fold-const.c
@@ -11610,8 +11610,8 @@ fold_binary_loc (location_t loc,
       /* Convert -A / -B to A / B when the type is signed and overflow is
 	 undefined.  */
       if ((!INTEGRAL_TYPE_P (type) || TYPE_OVERFLOW_UNDEFINED (type))
-	  && TREE_CODE (arg0) == NEGATE_EXPR
-	  && negate_expr_p (arg1))
+	  && TREE_CODE (op0) == NEGATE_EXPR
+	  && negate_expr_p (op1))
 	{
 	  if (INTEGRAL_TYPE_P (type))
 	    fold_overflow_warning (("assuming signed overflow does not occur "
diff --git a/gcc/testsuite/gcc.dg/torture/pr80362.c b/gcc/testsuite/gcc.dg/torture/pr80362.c
new file mode 100644
index 000000000..a4ca2ad71
--- /dev/null
+++ b/gcc/testsuite/gcc.dg/torture/pr80362.c
@@ -0,0 +1,11 @@
+/* { dg-do run } */
+/* { dg-options "-O2 -fstrict-overflow" } */
+
+int main()
+{
+  signed char var_0, var_1 = -128;
+  var_0 = (signed char)(-var_1) / 3;
+  if (var_0 > 0)
+    __builtin_abort();
+  return 0;
+}
