diff --git a/gcc/cp/typeck.c b/gcc/cp/typeck.c
index 6a009c4db..e5881a266 100644
--- a/gcc/cp/typeck.c
+++ b/gcc/cp/typeck.c
@@ -2349,6 +2349,10 @@ lookup_destructor (tree object, tree scope, tree dtor_name)
   tree dtor_type = TREE_OPERAND (dtor_name, 0);
   tree expr;
 
+  /* We've already complained about this destructor.  */
+  if (dtor_type == error_mark_node)
+    return error_mark_node;
+
   if (scope && !check_dtor_name (scope, dtor_type))
     {
       error ("qualified type %qT does not match destructor name ~%qT",
diff --git a/gcc/testsuite/g++.dg/lookup/crash8.C b/gcc/testsuite/g++.dg/lookup/crash8.C
new file mode 100644
index 000000000..7dce9cb72
--- /dev/null
+++ b/gcc/testsuite/g++.dg/lookup/crash8.C
@@ -0,0 +1,13 @@
+// PR c++/58843
+
+struct A {};
+
+template<typename T> void foo(T t)
+{
+  t.T::~X();  // { dg-error "no type" }
+}
+
+void bar()
+{
+  foo(A());
+}
