diff --git a/gcc/gimple-ssa-backprop.c b/gcc/gimple-ssa-backprop.c
index 30fb7cbc9..a8dbe5385 100644
--- a/gcc/gimple-ssa-backprop.c
+++ b/gcc/gimple-ssa-backprop.c
@@ -687,7 +687,6 @@ strip_sign_op_1 (tree rhs)
     switch (gimple_assign_rhs_code (assign))
       {
       case ABS_EXPR:
-      case ABSU_EXPR:
       case NEGATE_EXPR:
 	return gimple_assign_rhs1 (assign);
 
diff --git a/gcc/testsuite/gcc.c-torture/compile/pr110386-1.c b/gcc/testsuite/gcc.c-torture/compile/pr110386-1.c
new file mode 100644
index 000000000..4fcc977ad
--- /dev/null
+++ b/gcc/testsuite/gcc.c-torture/compile/pr110386-1.c
@@ -0,0 +1,9 @@
+
+int f(int a)
+{
+        int c = c < 0 ? c : -c;
+        c = -c;
+        unsigned b =  c;
+        unsigned t = b*a;
+        return t*t;
+}
diff --git a/gcc/testsuite/gcc.c-torture/compile/pr110386-2.c b/gcc/testsuite/gcc.c-torture/compile/pr110386-2.c
new file mode 100644
index 000000000..c60e1b699
--- /dev/null
+++ b/gcc/testsuite/gcc.c-torture/compile/pr110386-2.c
@@ -0,0 +1,11 @@
+/* { dg-do compile { target i?86-*-* x86_64-*-* } } */
+/* { dg-options "-mavx" } */
+
+#include <immintrin.h>
+
+__m128i do_stuff(__m128i XMM0) {
+	__m128i ABS0 = _mm_abs_epi32(XMM0);
+	__m128i MUL0 = _mm_mullo_epi32(ABS0, XMM0);
+	__m128i MUL1 = _mm_mullo_epi32(MUL0, MUL0);
+	return MUL1;
+}
