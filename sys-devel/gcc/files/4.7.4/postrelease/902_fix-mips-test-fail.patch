diff --git a/gcc/testsuite/g++.dg/opt/devirt2.C b/gcc/testsuite/g++.dg/opt/devirt2.C
index cf4842bd4..ffbe5bba1 100644
--- a/gcc/testsuite/g++.dg/opt/devirt2.C
+++ b/gcc/testsuite/g++.dg/opt/devirt2.C
@@ -4,7 +4,7 @@
    registers and thus getting the counts wrong.  */
 // { dg-additional-options "-mshort-calls" {target epiphany-*-*} }
 // Using -mno-abicalls avoids a R_MIPS_JALR .reloc.
-// { dg-additional-options "-mno-abicalls" { target mips*-*-* } }
+// { dg-additional-options "-mno-abicalls -fno-PIC" { target mips*-*-* } }
 // { dg-final { scan-assembler-times "xyzzy" 2 { target { ! { alpha*-*-* hppa*-*-* ia64*-*-hpux* sparc*-*-* *-*-mingw* } } } } }
 // For *-*-mingw* there is additionally one .def match
 // { dg-final { scan-assembler-times "xyzzy" 3 { target *-*-mingw* } } }
diff --git a/gcc/testsuite/gcc.target/mips/abi-eabi32-long32.c b/gcc/testsuite/gcc.target/mips/abi-eabi32-long32.c
index ebc5dd672..c05e4d891 100644
--- a/gcc/testsuite/gcc.target/mips/abi-eabi32-long32.c
+++ b/gcc/testsuite/gcc.target/mips/abi-eabi32-long32.c
@@ -1,2 +1,2 @@
-/* { dg-options "-mabi=eabi -mgp32 -mlong32 -O2" } */
+/* { dg-options "-mabi=eabi -fno-PIC -mgp32 -mlong32 -O2" } */
 #include "abi-main.h"
diff --git a/gcc/testsuite/gcc.target/mips/abi-eabi32-long64.c b/gcc/testsuite/gcc.target/mips/abi-eabi32-long64.c
index 5a776eca9..2f1de0fde 100644
--- a/gcc/testsuite/gcc.target/mips/abi-eabi32-long64.c
+++ b/gcc/testsuite/gcc.target/mips/abi-eabi32-long64.c
@@ -1,2 +1,2 @@
-/* { dg-options "-mabi=eabi -mgp32 -mlong64 -O2" } */
+/* { dg-options "-mabi=eabi -fno-PIC -mgp32 -mlong64 -O2" } */
 #include "abi-main.h"
diff --git a/gcc/testsuite/gcc.target/mips/abi-eabi64-long32.c b/gcc/testsuite/gcc.target/mips/abi-eabi64-long32.c
index 3882e48fa..fee40d0a6 100644
--- a/gcc/testsuite/gcc.target/mips/abi-eabi64-long32.c
+++ b/gcc/testsuite/gcc.target/mips/abi-eabi64-long32.c
@@ -1,2 +1,2 @@
-/* { dg-options "-mabi=eabi -mgp64 -mlong32 -O2" } */
+/* { dg-options "-mabi=eabi -fno-PIC -mgp64 -mlong32 -O2" } */
 #include "abi-main.h"
diff --git a/gcc/testsuite/gcc.target/mips/abi-eabi64-long64.c b/gcc/testsuite/gcc.target/mips/abi-eabi64-long64.c
index 5569bf521..215c42136 100644
--- a/gcc/testsuite/gcc.target/mips/abi-eabi64-long64.c
+++ b/gcc/testsuite/gcc.target/mips/abi-eabi64-long64.c
@@ -1,2 +1,2 @@
-/* { dg-options "-mabi=eabi -mgp64 -mlong64 -O2" } */
+/* { dg-options "-mabi=eabi -fno-PIC -mgp64 -mlong64 -O2" } */
 #include "abi-main.h"
diff --git a/gcc/testsuite/gcc.target/mips/abi-o64-long64.c b/gcc/testsuite/gcc.target/mips/abi-o64-long64.c
index 43078f680..e9a0cd8d7 100644
--- a/gcc/testsuite/gcc.target/mips/abi-o64-long64.c
+++ b/gcc/testsuite/gcc.target/mips/abi-o64-long64.c
@@ -1,2 +1,2 @@
-/* { dg-options "-mabi=o64 -mlong64 -mno-abicalls -O2" } */
+/* { dg-options "-mabi=o64 -mlong64 -mno-abicalls -fno-PIC -O2" } */
 #include "abi-main.h"
diff --git a/gcc/testsuite/gcc.target/mips/dspr2-MULT.c b/gcc/testsuite/gcc.target/mips/dspr2-MULT.c
index c68597489..ea670e467 100644
--- a/gcc/testsuite/gcc.target/mips/dspr2-MULT.c
+++ b/gcc/testsuite/gcc.target/mips/dspr2-MULT.c
@@ -5,7 +5,7 @@
 
 /* See PR target/51729 for the reason behind the XFAILs.  */
 /* { dg-final { scan-assembler "\tmult\t" } } */
-/* { dg-final { scan-assembler "ac1" { xfail *-*-* } } } */
+/* { dg-final { scan-assembler "ac1" } } */
 /* { dg-final { scan-assembler "ac2" { xfail *-*-* } } } */
 
 typedef long long a64;
diff --git a/gcc/testsuite/gcc.target/mips/dspr2-MULTU.c b/gcc/testsuite/gcc.target/mips/dspr2-MULTU.c
index 7f04315ef..b325f8d59 100644
--- a/gcc/testsuite/gcc.target/mips/dspr2-MULTU.c
+++ b/gcc/testsuite/gcc.target/mips/dspr2-MULTU.c
@@ -5,7 +5,7 @@
 
 /* See PR target/51729 for the reason behind the XFAILs.  */
 /* { dg-final { scan-assembler "\tmultu\t" } } */
-/* { dg-final { scan-assembler "ac1" { xfail *-*-* } } } */
+/* { dg-final { scan-assembler "ac1" } } */
 /* { dg-final { scan-assembler "ac2" { xfail *-*-* } } } */
 
 typedef unsigned long long a64;
diff --git a/gcc/testsuite/gcc.target/mips/fpr-moves-6.c b/gcc/testsuite/gcc.target/mips/fpr-moves-6.c
index f89a40a3b..6f961a643 100644
--- a/gcc/testsuite/gcc.target/mips/fpr-moves-6.c
+++ b/gcc/testsuite/gcc.target/mips/fpr-moves-6.c
@@ -1,4 +1,4 @@
-/* { dg-options "-mabi=64 -mhard-float -O2 -EB" } */
+/* { dg-options "-mabi=64 -march=mips64r2 -mhard-float -O2 -EB" } */
 /* { dg-require-effective-target mips_newabi_large_long_double } */
 
 NOMIPS16 void
diff --git a/gcc/testsuite/gcc.target/mips/long-calls-pg.c b/gcc/testsuite/gcc.target/mips/long-calls-pg.c
index 5e554c497..7f64cd76e 100644
--- a/gcc/testsuite/gcc.target/mips/long-calls-pg.c
+++ b/gcc/testsuite/gcc.target/mips/long-calls-pg.c
@@ -1,5 +1,5 @@
 /* { dg-do compile } */
-/* { dg-options "-O2 -mabi=32 -pg -mno-abicalls -mlong-calls" } */
+/* { dg-options "-O2 -mabi=32 -pg -mno-abicalls -fno-PIC -mlong-calls" } */
 /* { dg-final { scan-assembler-not "\tjal\t_mcount" } } */
 NOMIPS16 void
 foo (void)
diff --git a/gcc/testsuite/gcc.target/mips/mips.exp b/gcc/testsuite/gcc.target/mips/mips.exp
index 1be2f1e37..587368390 100644
--- a/gcc/testsuite/gcc.target/mips/mips.exp
+++ b/gcc/testsuite/gcc.target/mips/mips.exp
@@ -1080,6 +1080,7 @@ proc mips-dg-options { args } {
 	    if { $force_abi || [mips_64bit_abi_p $abi] } {
 		if { [mips_have_test_option_p options "-mlong64"] } {
 		    mips_make_test_option options "-mabi=eabi"
+	    	mips_make_test_option options "-fno-PIC"
 		    mips_make_test_option options "-mgp32"
 		} else {
 		    mips_make_test_option options "-mabi=32"
@@ -1089,6 +1090,7 @@ proc mips-dg-options { args } {
 	    if { $force_abi || [mips_32bit_abi_p $abi] } {
 		if { [mips_have_test_option_p options "-mlong64"] } {
 		    mips_make_test_option options "-mabi=eabi"
+	    	mips_make_test_option options "-fno-PIC"
 		    mips_make_test_option options "-mgp64"
 		} else {
 		    # All configurations should have an assembler that
@@ -1096,6 +1098,7 @@ proc mips-dg-options { args } {
 		    # vector as o32.  In contrast, many assembler
 		    # configurations do not have n32 or n64 support.
 		    mips_make_test_option options "-mabi=o64"
+	    	mips_make_test_option options "-fno-PIC"
 		}
 	    }
 	}
@@ -1109,6 +1112,7 @@ proc mips-dg-options { args } {
     if { $abi_test_option_p } {
 	if { $eabi_p } {
 	    mips_make_test_option options "-mno-abicalls"
+	    mips_make_test_option options "-fno-PIC"
 	    if { $gp_size == 32 } {
 		mips_make_test_option options "-mfp32"
 	    }
@@ -1164,6 +1168,7 @@ proc mips-dg-options { args } {
 	-G0 {}
 	default {
 	    mips_make_test_option options "-mno-abicalls"
+	    mips_make_test_option options "-fno-PIC"
 	}
     }
     if { [mips_have_option_p options "-mabicalls"] } {
diff --git a/gcc/testsuite/gcc.target/mips/pr33256.c b/gcc/testsuite/gcc.target/mips/pr33256.c
index ead5888cc..9cd5c7493 100644
--- a/gcc/testsuite/gcc.target/mips/pr33256.c
+++ b/gcc/testsuite/gcc.target/mips/pr33256.c
@@ -1,6 +1,6 @@
 /* GCC used to report an ICE for this test because we generated a LO_SUM
    for an illegitimate constant.  */
-/* { dg-options "-mabi=64 -msym32 -O2 -EB -mno-abicalls" } */
+/* { dg-options "-mabi=64 -msym32 -O2 -EB -mno-abicalls -fno-PIC" } */
 extern unsigned long a[];
 int b (int);
 
diff --git a/gcc/testsuite/gcc.target/mips/r10k-cache-barrier-10.c b/gcc/testsuite/gcc.target/mips/r10k-cache-barrier-10.c
index 68c4b7ef2..ca38c1990 100644
--- a/gcc/testsuite/gcc.target/mips/r10k-cache-barrier-10.c
+++ b/gcc/testsuite/gcc.target/mips/r10k-cache-barrier-10.c
@@ -1,4 +1,4 @@
-/* { dg-options "-O2 -mr10k-cache-barrier=store -mips4 -mbranch-likely -mno-abicalls" } */
+/* { dg-options "-O2 -mr10k-cache-barrier=store -mips4 -mbranch-likely -mno-abicalls -fno-PIC" } */
 int bar (int);
 
 /* Test that code after a branch-likely does not get an unnecessary
diff --git a/gcc/testsuite/gcc.target/mips/r10k-cache-barrier-11.c b/gcc/testsuite/gcc.target/mips/r10k-cache-barrier-11.c
index d1082d910..d3491e0e0 100644
--- a/gcc/testsuite/gcc.target/mips/r10k-cache-barrier-11.c
+++ b/gcc/testsuite/gcc.target/mips/r10k-cache-barrier-11.c
@@ -1,4 +1,4 @@
-/* { dg-options "-O2 -mr10k-cache-barrier=store -mno-abicalls" } */
+/* { dg-options "-O2 -mr10k-cache-barrier=store -mno-abicalls -fno-PIC" } */
 
 /* Test that loads are not unnecessarily protected.  */
 
diff --git a/gcc/testsuite/gcc.target/mips/r10k-cache-barrier-12.c b/gcc/testsuite/gcc.target/mips/r10k-cache-barrier-12.c
index d41639109..dc96075cb 100644
--- a/gcc/testsuite/gcc.target/mips/r10k-cache-barrier-12.c
+++ b/gcc/testsuite/gcc.target/mips/r10k-cache-barrier-12.c
@@ -1,4 +1,4 @@
-/* { dg-options "-O2 -mr10k-cache-barrier=load-store -mno-abicalls" } */
+/* { dg-options "-O2 -mr10k-cache-barrier=load-store -mno-abicalls -fno-PIC" } */
 
 /* Test that loads are correctly protected.  */
 
diff --git a/gcc/testsuite/gcc.target/mips/r10k-cache-barrier-3.c b/gcc/testsuite/gcc.target/mips/r10k-cache-barrier-3.c
index be2c7fbd7..7b981b7b0 100644
--- a/gcc/testsuite/gcc.target/mips/r10k-cache-barrier-3.c
+++ b/gcc/testsuite/gcc.target/mips/r10k-cache-barrier-3.c
@@ -1,4 +1,4 @@
-/* { dg-options "-O2 -mr10k-cache-barrier=store -mno-abicalls" } */
+/* { dg-options "-O2 -mr10k-cache-barrier=store -mno-abicalls -fno-PIC" } */
 
 /* Test that in-range stores to the frame are not protected by
    cache barriers.  */
diff --git a/gcc/testsuite/gcc.target/mips/r10k-cache-barrier-4.c b/gcc/testsuite/gcc.target/mips/r10k-cache-barrier-4.c
index 9dd23eafa..3605d93eb 100644
--- a/gcc/testsuite/gcc.target/mips/r10k-cache-barrier-4.c
+++ b/gcc/testsuite/gcc.target/mips/r10k-cache-barrier-4.c
@@ -1,4 +1,4 @@
-/* { dg-options "-O2 -mr10k-cache-barrier=store -mno-abicalls" } */
+/* { dg-options "-O2 -mr10k-cache-barrier=store -mno-abicalls -fno-PIC" } */
 
 void bar (int *x);
 
diff --git a/gcc/testsuite/gcc.target/mips/r10k-cache-barrier-5.c b/gcc/testsuite/gcc.target/mips/r10k-cache-barrier-5.c
index a6b53a9ea..78835fad8 100644
--- a/gcc/testsuite/gcc.target/mips/r10k-cache-barrier-5.c
+++ b/gcc/testsuite/gcc.target/mips/r10k-cache-barrier-5.c
@@ -1,4 +1,4 @@
-/* { dg-options "-O2 -mr10k-cache-barrier=store -mno-abicalls -mabi=64" } */
+/* { dg-options "-O2 -mr10k-cache-barrier=store -mno-abicalls -fno-PIC -mabi=64" } */
 
 /* Test that in-range stores to static objects do not get an unnecessary
    cache barrier.  */
diff --git a/gcc/testsuite/gcc.target/mips/r10k-cache-barrier-7.c b/gcc/testsuite/gcc.target/mips/r10k-cache-barrier-7.c
index 3f738654c..5c64f01e7 100644
--- a/gcc/testsuite/gcc.target/mips/r10k-cache-barrier-7.c
+++ b/gcc/testsuite/gcc.target/mips/r10k-cache-barrier-7.c
@@ -1,4 +1,4 @@
-/* { dg-options "-O2 -mr10k-cache-barrier=store -mno-abicalls" } */
+/* { dg-options "-O2 -mr10k-cache-barrier=store -mno-abicalls -fno-PIC" } */
 
 void bar1 (void);
 void bar2 (void);
