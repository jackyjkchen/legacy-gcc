diff --git a/config.if b/config.if
index 2655bc3b..7e629ca6 100644
--- a/config.if
+++ b/config.if
@@ -33,5 +33,17 @@ if test -z "$gcc_version"; then
   fi
   gcc_version=`echo ${gcc_version_full} | sed -e 's/\([^ ]*\) .*/\1/'`
 fi
-libstdcxx_incdir=c++/${gcc_version}
 
+# Convert name for DJGPP host
+case ${host_alias} in
+  *djgpp*)
+         libstdcxx_incdir_prefix=cxx
+	 gcc_version_convert='s:\.::2g'
+     ;;
+  *)
+         libstdcxx_incdir_prefix=c++
+	 gcc_version_convert=''
+     ;;
+esac
+
+libstdcxx_incdir=${libstdcxx_incdir_prefix}/`echo ${gcc_version} | sed -e "${gcc_version_convert}"`
diff --git a/config.sub b/config.sub
index d2e3557a..2e27af90 100755
--- a/config.sub
+++ b/config.sub
@@ -477,6 +477,10 @@ case $basic_machine in
 		basic_machine=m88k-motorola
 		os=-sysv3
 		;;
+	djgpp)
+		basic_machine=i586-pc
+		os=-msdosdjgpp
+		;;
 	dpx20 | dpx20-*)
 		basic_machine=rs6000-bull
 		os=-bosx
diff --git a/configure b/configure
index c5851431..1b109b5d 100755
--- a/configure
+++ b/configure
@@ -2660,10 +2660,10 @@ case "${with_gxx_include_dir}" in
     { echo "configure: error: --with-gxx-include-dir=[dir] requires a directory" 1>&2; exit 1; }
     ;;
   no | "")
+    . ${srcdir}/config.if
     case "${enable_version_specific_runtime_libs}" in
-      yes) gxx_include_dir='${libsubdir}/include/c++' ;;
+      yes) gxx_include_dir='${libsubdir}/include/'${libstdcxx_incdir_prefix} ;;
       *)
-        . ${srcdir}/config.if
         gxx_include_dir='${prefix}/include/'${libstdcxx_incdir} ;;
     esac ;;
   *) gxx_include_dir=${with_gxx_include_dir} ;;
diff --git a/configure.in b/configure.in
index ab8f8a5c..8f50b38d 100644
--- a/configure.in
+++ b/configure.in
@@ -1898,10 +1898,10 @@ case "${with_gxx_include_dir}" in
     AC_MSG_ERROR([--with-gxx-include-dir=[[dir]] requires a directory])
     ;;
   no | "")
+    . ${srcdir}/config.if
     case "${enable_version_specific_runtime_libs}" in
-      yes) gxx_include_dir='${libsubdir}/include/c++' ;;
+      yes) gxx_include_dir='${libsubdir}/include/'${libstdcxx_incdir_prefix} ;;
       *)
-        . ${srcdir}/config.if
         gxx_include_dir='${prefix}/include/'${libstdcxx_incdir} ;;
     esac ;;
   *) gxx_include_dir=${with_gxx_include_dir} ;;
diff --git a/gcc/Makefile.in b/gcc/Makefile.in
index 7bd26009..6a719647 100644
--- a/gcc/Makefile.in
+++ b/gcc/Makefile.in
@@ -95,7 +95,11 @@ VPATH = @srcdir@
 # pattern rule for everything.
 # This vpath could be extended within the Make-lang fragments.
 
+ifneq ($(DJGPP),)
+vpath %.texi $(docdir);$(docdir)/include
+else
 vpath %.texi $(docdir):$(docdir)/include
+endif
 
 # ----
 # Default values for variables overridden in Makefile fragments.
@@ -3362,6 +3366,8 @@ POSTSTAGE1_FLAGS_TO_PASS = \
 	OUTPUT_OPTION="-o \$$@"
 
 STAGE2_FLAGS_TO_PASS = \
+ 	libsubdir=$(libsubdir) \
+ 	gcc_version=$(gcc_version) \
 	CFLAGS="$(BOOT_CFLAGS)" \
 	WERROR="@WERROR@" \
 
@@ -3379,7 +3385,8 @@ STAGEFEEDBACK_FLAGS_TO_PASS = \
 # MAKEINFO and MAKEINFOFLAGS are explicitly passed here to make them
 # overrideable (for a bootstrap build stage1 also builds gcc.info).
 stage1_build:
-	$(MAKE) CC="$(CC)" libdir=$(libdir) LANGUAGES="$(BOOT_LANGUAGES)" \
+	$(MAKE) CC="$(CC)" libdir=$(libdir) libsubdir=$(libsubdir) \
+		gcc_version=$(gcc_version) LANGUAGES="$(BOOT_LANGUAGES)" \
 		CFLAGS="$(STAGE1_CFLAGS)" MAKEINFO="$(MAKEINFO)" \
 		MAKEINFOFLAGS="$(MAKEINFOFLAGS)" COVERAGE_FLAGS= \
 		OBJS-onestep="$(OBJS)"
diff --git a/gcc/ada/Make-lang.in b/gcc/ada/Make-lang.in
index e67caba3..b72587da 100644
--- a/gcc/ada/Make-lang.in
+++ b/gcc/ada/Make-lang.in
@@ -280,7 +280,8 @@ gnatbind$(exeext): ada/b_gnatb.o $(CONFIG_H) $(GNATBIND_OBJS)
 gnattools: $(GCC_PARTS) $(CONFIG_H) prefix.o force
 	$(MAKE) -C ada $(FLAGS_TO_PASS) $(ADA_FLAGS_TO_PASS) \
 	  ADA_INCLUDES="-I- -I../rts"\
-	  CC="../../xgcc -B../../" STAGE_PREFIX=../../  gnattools1
+	  CC="../../xgcc -B../../" STAGE_PREFIX=../../  \
+          GNATBIND=../../gnatbind$(EXEEXT) gnattools1
 	$(MAKE) -C ada $(ADA_TOOLS_FLAGS_TO_PASS) gnattools2
 	$(MAKE) -C ada $(ADA_TOOLS_FLAGS_TO_PASS) gnattools3
 
@@ -326,6 +327,7 @@ gnatlib: force
 	   GNATLIBCFLAGS="$(GNATLIBCFLAGS)" \
 	   TARGET_LIBGCC2_CFLAGS="$(TARGET_LIBGCC2_CFLAGS)" \
 	   THREAD_KIND="$(THREAD_KIND)" \
+	   STAGE_PREFIX=../../ \
 	   TRACE="$(TRACE)" \
 	   gnatlib
 
diff --git a/gcc/ada/Makefile.in b/gcc/ada/Makefile.in
index 9d060b3b..21e222dc 100644
--- a/gcc/ada/Makefile.in
+++ b/gcc/ada/Makefile.in
@@ -89,14 +89,14 @@ X_ADAFLAGS =
 T_ADAFLAGS =
 
 CC = cc
-BISON = bison
+BISON = @BISON@
 BISONFLAGS =
 ECHO = echo
 LEX = flex
 LEXFLAGS =
 CHMOD = chmod
-LN = ln
-LN_S = ln -s
+LN = @LN@
+LN_S = @LN_S@
 CP = cp -p
 MV = mv -f
 RM = rm -f
@@ -106,7 +106,7 @@ AR = ar
 AR_FLAGS = rc
 LS = ls
 # How to invoke ranlib.
-RANLIB = ranlib
+RANLIB = @RANLIB@
 # Test to use to see whether ranlib exists on the system.
 RANLIB_TEST = [ -f /usr/bin/ranlib -o -f /bin/ranlib ]
 
@@ -116,7 +116,15 @@ PWD_COMMAND = $${PWDCMD-pwd}
 INSTALL_DATA_DATE = cp -p
 MAKEINFO = makeinfo
 TEXI2DVI = texi2dvi
+ifneq ($(DJGPP),)
+ifneq ($(STAGE_PREFIX),)
+GNATBIND = /dev/env/DJDIR/bin/gnatbind
+else
+GNATBIND = $(STAGE_PREFIX)gnatbind
+endif
+else
 GNATBIND = $(STAGE_PREFIX)gnatbind
+endif
 GNATBIND_FLAGS = -static -x
 ADA_CFLAGS =
 ADAFLAGS = -W -Wall -gnatpg -gnata
@@ -1513,7 +1521,7 @@ endif
 # (see target gnattools1-re) 
 gnattools1: ../stamp-tools ../stamp-gnatlib
 	$(MAKE) -C tools -f ../Makefile $(TOOLS_FLAGS_TO_PASS) \
-	  TOOLSCASE=native \
+	  TOOLSCASE=native STAGE_PREFIX=../../ \
 	  ../../gnatmake$(exeext) ../../gnatlink$(exeext) ../../gnatbl$(exeext)
 
 # gnatmake/link can be built with recent gnatmake/link if they are available.
@@ -1598,9 +1606,9 @@ gnattools4: ../stamp-tools
 		    $(TOOLS_LIBS)
 
 ../../gnatclean$(exeext): ../stamp-tools
-	$(GNATMAKE) -c $(ADA_INCLUDES) gnatclean --GCC="$(CC) $(ALL_ADAFLAGS)"
-	$(GNATBIND) $(ADA_INCLUDES) $(GNATBIND_FLAGS) gnatclean
-	$(GNATLINK) -v gnatclean -o $@ --GCC="$(CC) $(ADA_INCLUDES)" \
+	$(GNATMAKE) -c $(ADA_INCLUDES) gnatclea --GCC="$(CC) $(ALL_ADAFLAGS)"
+	$(GNATBIND) $(ADA_INCLUDES) $(GNATBIND_FLAGS) gnatclea
+	$(GNATLINK) -v gnatclea -o $@ --GCC="$(CC) $(ADA_INCLUDES)" \
 	            $(TOOLS_LIBS)
 
 ../../gnatsym$(exeext): ../stamp-tools
diff --git a/gcc/ada/adaint.c b/gcc/ada/adaint.c
index 6c3f71a6..5402eef5 100644
--- a/gcc/ada/adaint.c
+++ b/gcc/ada/adaint.c
@@ -92,6 +92,9 @@
 #endif
 
 #if defined (__EMX__) || defined (MSDOS) || defined (_WIN32)
+
+#include <ctype.h>
+
 #elif defined (VMS)
 
 /* Header files and definitions for __gnat_set_file_time_name.  */
@@ -897,6 +900,7 @@ __gnat_file_time_fd (int fd)
   unsigned file_hour  = fs.ft_hour;
   unsigned file_min   = fs.ft_min;
   unsigned file_tsec  = fs.ft_tsec;
+  return ret;
 #endif
 
   /* Calculate the seconds since epoch from the time components. First count
@@ -958,7 +962,7 @@ __gnat_file_time_fd (int fd)
 void
 __gnat_set_file_time_name (char *name, time_t time_stamp)
 {
-#if defined (__EMX__) || defined (MSDOS) || defined (__vxworks)
+#if defined (__EMX__) || defined (__vxworks)
 
 /* Code to implement __gnat_set_file_time_name for these systems.  */
 
@@ -1190,9 +1194,10 @@ typedef struct _ile3
 void
 __gnat_set_env_value (char *name, char *value)
 {
-#ifdef MSDOS
+/* #ifdef MSDOS  */
 
-#elif defined (VMS)
+/* #elif defined (VMS)  */
+#if defined (VMS)
   struct descriptor_s name_desc;
   /* Put in JOB table for now, so that the project stuff at least works.  */
   struct descriptor_s table_desc = {7, 0, "LNM$JOB"};
@@ -1460,11 +1465,16 @@ __gnat_is_symbolic_link (char *name ATTRIBUTE_UNUSED)
   return 0;
 
 #elif defined (_AIX) || defined (unix)
+#if defined(__DJGPP__) && !defined(S_ISLNK)
+/* For DJGPP v2.03 where symbolic links are not yet implemented  */
+  return 0;
+#else
   int ret;
   struct stat statbuf;
 
   ret = lstat (name, &statbuf);
   return (!ret && S_ISLNK (statbuf.st_mode));
+#endif
 
 #else
   return 0;
@@ -1496,7 +1506,14 @@ __gnat_portable_spawn (char *args[])
   int finished ATTRIBUTE_UNUSED;
   int pid ATTRIBUTE_UNUSED;
 
-#if defined (MSDOS) || defined (_WIN32)
+#if defined (MSDOS) 
+  status = spawnvp (P_WAIT, args[0],args);
+  if (status < 0)
+    return -1;
+  else
+    return status;
+
+#elif defined (_WIN32)
   status = spawnvp (P_WAIT, args[0],(const char* const*)args);
   if (status < 0)
     return -1;
@@ -1820,6 +1837,7 @@ __gnat_waitpid (int pid)
   cwait (&status, pid, _WAIT_CHILD);
 #elif defined (__EMX__) || defined (MSDOS) || defined (__vxworks)
   /* Status is already zero, so nothing to do.  */
+  (void) pid;
 #else
   waitpid (pid, &status, 0);
   status =  WEXITSTATUS (status);
diff --git a/gcc/ada/ctrl_c.c b/gcc/ada/ctrl_c.c
index 20dd8811..e94d05a2 100644
--- a/gcc/ada/ctrl_c.c
+++ b/gcc/ada/ctrl_c.c
@@ -75,7 +75,9 @@ __gnat_install_int_handler (void (*proc) (void))
   if (sigint_intercepted == 0)
     {
       act.sa_handler = __gnat_int_handler;
+#ifdef SA_RESTART
       act.sa_flags = SA_RESTART;
+#endif
       sigemptyset (&act.sa_mask);
       sigaction (SIGINT, &act, &original_act);
     }
diff --git a/gcc/ada/gnatbl.c b/gcc/ada/gnatbl.c
index 82284286..5969a0ee 100644
--- a/gcc/ada/gnatbl.c
+++ b/gcc/ada/gnatbl.c
@@ -215,7 +215,7 @@ main (int argc, char **argv)
   int  spawn_index = 0;
 
 #if defined (__EMX__) || defined(MSDOS)
-  char *tmppathval = malloc (strlen (pathval) + 3);
+  char *tmppathval = xmalloc (strlen (pathval) + 3);
   strcpy (tmppathval, ".;");
   pathval = strcat (tmppathval, pathval);
 #endif
@@ -337,7 +337,7 @@ main (int argc, char **argv)
 	    char *ptr = strstr (argv[i], ".exe");
 
 	    arg_len = strlen (argv[i]);
-	    coff2exe_args[1] = malloc (arg_len + 1);
+	    coff2exe_args[1] = xmalloc (arg_len + 1);
 	    strcpy (coff2exe_args[1], argv[i]);
 	    if (ptr != NULL && strlen (ptr) == 4)
 	      coff2exe_args[1][arg_len-4] = 0;
@@ -380,7 +380,7 @@ main (int argc, char **argv)
 
   if (!g_present)
     {
-      del_command = malloc (strlen (coff2exe_args[1]) + 5);
+      del_command = xmalloc (strlen (coff2exe_args[1]) + 5);
       sprintf (del_command, "del %s", coff2exe_args[1]);
       retcode = system (del_command);
     }
diff --git a/gcc/ada/gnatclean.adb b/gcc/ada/gnatclea.adb
similarity index 100%
rename from gcc/ada/gnatclean.adb
rename to gcc/ada/gnatclea.adb
diff --git a/gcc/ada/init.c b/gcc/ada/init.c
index 6d0480da..cc0aa43e 100644
--- a/gcc/ada/init.c
+++ b/gcc/ada/init.c
@@ -352,6 +352,45 @@ __gnat_initialize (void)
 {
 }
 
+#elif defined (__DJGPP__)
+
+/***************************************/
+/* __gnat_initialize (DJGPP version)   */
+/*                                     */
+/* FIXME: this is only a draft version */
+/***************************************/
+
+struct timestruc_t
+{
+   time_t  tv_sec;
+   long    tv_nsec;
+};
+
+
+int
+nanosleep (struct timestruc_t *Rqtp, struct timestruc_t *Rmtp);
+
+int
+nanosleep (struct timestruc_t *Rqtp, struct timestruc_t *Rmtp)
+{
+    usleep (1000000*Rqtp->tv_sec+Rqtp->tv_nsec/1000);
+    if (Rmtp) { Rmtp->tv_sec = Rmtp->tv_nsec=0; }
+    return 0;
+}
+
+
+void
+__gnat_initialize ()
+{
+}
+
+
+void
+__gnat_install_handler ()
+{
+  __gnat_handler_installed = 1;
+}
+
 /***************************************/
 /* __gnat_initialize (RTEMS version) */
 /***************************************/
diff --git a/gcc/ada/sysdep.c b/gcc/ada/sysdep.c
index fcca318c..6f1ee90a 100644
--- a/gcc/ada/sysdep.c
+++ b/gcc/ada/sysdep.c
@@ -159,6 +159,11 @@ static const char *mode_write_binary_plus = "w+b";
 static const char *mode_append_binary_plus = "a+b";
 const char __gnat_text_translation_required = 1;
 
+#ifdef __DJGPP__
+#include <io.h>
+#define _setmode setmode
+#endif
+
 void
 __gnat_set_binary_mode (int handle)
 {
@@ -703,6 +708,26 @@ __gnat_localtime_r (const time_t *timer, struct tm *tp)
 
 /* __gnat_localtime_r is not needed on NT and VMS */
 
+#else
+#if defined (__DJGPP__)
+
+/* FIXME: this is draft version only. Fix me if that is not correct  */
+/*        or not complete (AP)                                       */
+
+extern struct tm *__gnat_localtime_r PARAMS ((const time_t *, struct tm *));
+
+struct tm *
+__gnat_localtime_r (timer, tp)
+     const time_t *timer;
+     struct tm *tp;
+{
+  struct tm *tmp;
+
+  tmp = localtime (timer);
+  memcpy (tp, tmp, sizeof (struct tm));
+  return tp;
+}
+
 #else
 
 /* All other targets provide a standard localtime_r */
@@ -717,3 +742,4 @@ __gnat_localtime_r (const time_t *timer, struct tm *tp)
 #endif
 #endif
 #endif
+#endif
diff --git a/gcc/c-common.c b/gcc/c-common.c
index edc3030d..747e483a 100644
--- a/gcc/c-common.c
+++ b/gcc/c-common.c
@@ -5357,7 +5357,8 @@ handle_nonnull_attribute (tree *node, tree name ATTRIBUTE_UNUSED,
 
       if (! get_nonnull_operand (TREE_VALUE (args), &arg_num))
 	{
-	  error ("nonnull argument has invalid operand number (arg %lu)",
+          if (!(flags & (int) ATTR_FLAG_BUILT_IN))
+	     error ("nonnull argument has invalid operand number (arg %lu)",
 		 (unsigned long) attr_arg_num);
 	  *no_add_attrs = true;
 	  return NULL_TREE;
@@ -5376,7 +5377,8 @@ handle_nonnull_attribute (tree *node, tree name ATTRIBUTE_UNUSED,
           if (! argument
 	      || TREE_CODE (TREE_VALUE (argument)) == VOID_TYPE)
 	    {
-	      error ("nonnull argument with out-of-range operand number (arg %lu, operand %lu)",
+              if (!(flags & (int) ATTR_FLAG_BUILT_IN))
+	         error ("nonnull argument with out-of-range operand number (arg %lu, operand %lu)",
 		     (unsigned long) attr_arg_num, (unsigned long) arg_num);
 	      *no_add_attrs = true;
 	      return NULL_TREE;
@@ -5384,7 +5386,8 @@ handle_nonnull_attribute (tree *node, tree name ATTRIBUTE_UNUSED,
 
           if (TREE_CODE (TREE_VALUE (argument)) != POINTER_TYPE)
 	    {
-	      error ("nonnull argument references non-pointer operand (arg %lu, operand %lu)",
+              if (!(flags & (int) ATTR_FLAG_BUILT_IN))
+	         error ("nonnull argument references non-pointer operand (arg %lu, operand %lu)",
 		   (unsigned long) attr_arg_num, (unsigned long) arg_num);
 	      *no_add_attrs = true;
 	      return NULL_TREE;
diff --git a/gcc/c-decl.c b/gcc/c-decl.c
index 9737791f..c0ea4dfd 100644
--- a/gcc/c-decl.c
+++ b/gcc/c-decl.c
@@ -980,8 +980,10 @@ diagnose_mismatched_decls (tree newdecl, tree olddecl,
 	      /* If types don't match for a built-in, throw away the
 		 built-in.  No point in calling locate_old_decl here, it
 		 won't print anything. */
+#if 0 /* for DJGPP  */
 	      warning ("%Jconflicting types for built-in function '%D'",
 		       newdecl, newdecl);
+#endif
 	      return false;
 	    }
 	}
diff --git a/gcc/config.gcc b/gcc/config.gcc
index a14e18c3..733cc2b3 100644
--- a/gcc/config.gcc
+++ b/gcc/config.gcc
@@ -1032,6 +1032,7 @@ i[34567]86-pc-msdosdjgpp*)
 	xm_file=i386/xm-djgpp.h
 	tm_file="dbxcoff.h ${tm_file} i386/unix.h i386/bsd.h i386/gas.h i386/djgpp.h"
 	tmake_file=i386/t-djgpp
+	xmake_file=i386/x-djgpp
 	gnu_ld=yes
 	gas=yes
 	;;
diff --git a/gcc/config.in b/gcc/config.in
index f7971907..057db4a2 100644
--- a/gcc/config.in
+++ b/gcc/config.in
@@ -555,11 +555,9 @@
 /* Define to `int' if <sys/types.h> doesn't define. */
 #undef gid_t
 
-/* Define to `__inline__' or `__inline' if that's what the C compiler
-   calls it, or to nothing if 'inline' is not supported under any name.  */
-#ifndef __cplusplus
+/* Define as `__inline' if that's what the C compiler calls it, or to nothing
+   if it is not supported. */
 #undef inline
-#endif
 
 /* Define to `int' if <sys/types.h> does not define. */
 #undef pid_t
diff --git a/gcc/config/i386/djgpp-x.djl b/gcc/config/i386/djgpp-x.djl
new file mode 100644
index 00000000..7540357b
--- /dev/null
+++ b/gcc/config/i386/djgpp-x.djl
@@ -0,0 +1,65 @@
+OUTPUT_FORMAT("coff-go32")
+ENTRY(start)
+SECTIONS
+{
+  .text  0x1000+SIZEOF_HEADERS : {
+    *(.text)
+    *(.text.*)
+    *(.gnu.linkonce.t*)
+    *(.const*)
+    *(.ro*)
+    *(.gnu.linkonce.r*)
+    etext  =  . ;
+    PROVIDE(_etext  =  .);
+    . = ALIGN(0x200);
+  }
+  .data  ALIGN(0x200) : {
+    djgpp_first_ctor = . ;
+    *(SORT(.ctors.*))
+    *(.ctor)
+    *(.ctors)
+    djgpp_last_ctor = . ;
+    djgpp_first_dtor = . ;
+    *(SORT(.dtors.*))
+    *(.dtor)
+    *(.dtors)
+    djgpp_last_dtor = . ;
+    __environ = . ;
+    PROVIDE(_environ = .);
+    LONG(0)
+    *(.data)
+    *(.data.*)
+    *(.gnu.linkonce.d*)
+    *(.gcc_exc*)
+    ___EH_FRAME_BEGIN__ = . ;
+    *(.eh_fram*)
+    ___EH_FRAME_END__ = . ;
+    LONG(0)
+    edata  =  . ;
+    PROVIDE(_edata  =  .);
+    . = ALIGN(0x200);
+  }
+  .bss  SIZEOF(.data) + ADDR(.data) :
+  { 					
+    _object.2 = . ;
+    . += 24 ;
+    *(.bss .bss.* .gnu.linkonce.b.*)
+    *(COMMON)
+    end = . ;
+    PROVIDE(_end = .);
+    . = ALIGN(0x200);
+  }
+  /* Stabs debugging sections.  */
+  .stab 0 : { *(.stab) }
+  .stabstr 0 : { *(.stabstr) }
+  /* DWARF 2 */
+  .debug_aranges  0 : { *(.debug_aranges) }
+  .debug_pubnames 0 : { *(.debug_pubnames) }
+  .debug_info     0 : { *(.debug_info) *(.gnu.linkonce.wi.*) }
+  .debug_abbrev   0 : { *(.debug_abbrev) }
+  .debug_line     0 : { *(.debug_line) }
+  .debug_frame    0 : { *(.debug_frame) }
+  .debug_str      0 : { *(.debug_str) }
+  .debug_loc      0 : { *(.debug_loc) }
+  .debug_macinfo  0 : { *(.debug_macinfo) }
+}
diff --git a/gcc/config/i386/djgpp.h b/gcc/config/i386/djgpp.h
index cee9480d..ba1c01ea 100644
--- a/gcc/config/i386/djgpp.h
+++ b/gcc/config/i386/djgpp.h
@@ -22,6 +22,11 @@ Boston, MA 02111-1307, USA.  */
 /* Support generation of DWARF2 debugging info.  */
 #define DWARF2_DEBUGGING_INFO 1
 
+/* Use DWARF2 debugging info by default: comment out following  */
+/* 2 lines to default to COFF debugging info  */
+#undef PREFERRED_DEBUGGING_TYPE
+#define PREFERRED_DEBUGGING_TYPE DWARF2_DEBUG
+
 /* Don't assume anything about the header files.  */
 #define NO_IMPLICIT_EXTERN_C
 
@@ -65,6 +70,8 @@ Boston, MA 02111-1307, USA.  */
 #undef STANDARD_INCLUDE_DIR
 #define STANDARD_INCLUDE_DIR "/dev/env/DJDIR/include/"
 
+#undef PREFIX_INCLUDE_DIR
+
 /* Search for as.exe and ld.exe in DJGPP's binary directory.  */ 
 #undef MD_EXEC_PREFIX
 #define MD_EXEC_PREFIX "/dev/env/DJDIR/bin/"
@@ -81,8 +88,13 @@ Boston, MA 02111-1307, USA.  */
 #define TARGET_OS_CPP_BUILTINS()		\
   do						\
     {						\
+        if (!flag_iso)                          \
+	   builtin_define_with_int_value ("DJGPP",2);  \
+	builtin_define_with_int_value ("__DJGPP",2);   \
+	builtin_define_with_int_value ("__DJGPP__",2); \
 	builtin_define_std ("MSDOS");		\
 	builtin_define_std ("GO32");		\
+	builtin_define_std ("unix");		\
 	builtin_assert ("system=msdos");	\
     }						\
   while (0)
@@ -90,7 +102,7 @@ Boston, MA 02111-1307, USA.  */
 /* Include <sys/version.h> so __DJGPP__ and __DJGPP_MINOR__ are defined.  */
 #undef CPP_SPEC
 #define CPP_SPEC "-remap %{posix:-D_POSIX_SOURCE} \
-  -imacros %s../include/sys/version.h"
+  %{!nostdinc:-imacros %sdjgpp.ver}"
 
 /* We need to override link_command_spec in gcc.c so support -Tdjgpp.djl.
    This cannot be done in LINK_SPECS as that LINK_SPECS is processed
@@ -99,17 +111,19 @@ Boston, MA 02111-1307, USA.  */
    suggested by Robert Hoehne, is to use SUBTARGET_EXTRA_SPECS instead.
 */ 
 
-#undef LINK_COMMAND_SPEC
-#define LINK_COMMAND_SPEC \
-"%{!fsyntax-only: \
-%{!c:%{!M:%{!MM:%{!E:%{!S:%(linker) %l %X %{o*} %{A} %{d} %{e*} %{m} %{N} %{n} \
-\t%{r} %{s} %{t} %{u*} %{x} %{z} %{Z}\
-\t%{!A:%{!nostdlib:%{!nostartfiles:%S}}}\
-\t%{static:} %{L*} %D %o\
-\t%{!nostdlib:%{!nodefaultlibs:%G %L %G}}\
-\t%{!A:%{!nostdlib:%{!nostartfiles:%E}}}\
-\t-Tdjgpp.djl %{T*}}}}}}}\n\
+#ifndef LINK_COMMAND_SPEC
+#define LINK_COMMAND_SPEC "\
+%{!fsyntax-only:%{!c:%{!M:%{!MM:%{!E:%{!S:\
+    %(linker) %l " LINK_PIE_SPEC "%X %{o*} %{A} %{d} %{e*} %{m} %{N} %{n} %{r}\
+    %{s} %{t} %{u*} %{x} %{z} %{Z} %{!A:%{!nostdlib:%{!nostartfiles:%S}}}\
+    %{static:} %{L*} %(link_libgcc) %o %{fprofile-arcs|fprofile-generate:-lgcov}\
+    %{!nostdlib:%{!nodefaultlibs:%(link_gcc_c_sequence)}}\
+    %{!A:%{!nostdlib:%{!nostartfiles:%E}}}\
+    %{!T*:-Tdjgpp-x.djl} %{T*} }}}}}}\n\
 %{!c:%{!M:%{!MM:%{!E:%{!S:stubify %{v} %{o*:%*} %{!o*:a.out} }}}}}"
+#endif
+
+
 
 /* Always just link in 'libc.a'.  */
 #undef LIB_SPEC
@@ -166,33 +180,20 @@ Boston, MA 02111-1307, USA.  */
 #undef PTRDIFF_TYPE
 #define PTRDIFF_TYPE "int"
 
-/* Used to be defined in xm-djgpp.h, but moved here for cross-compilers.  */
-#define LIBSTDCXX "-lstdcxx"
-
-/* -mbnu210 is now ignored and obsolete. It was used to enable support for
-   weak symbols, and .gnu.linkonce support.  */
-#undef MASK_BNU210
-#define MASK_BNU210 (0x40000000)
-
 #define TARGET_VERSION fprintf (stderr, " (80386, MS-DOS DJGPP)"); 
 
-#undef SUBTARGET_SWITCHES
-#define SUBTARGET_SWITCHES \
-  { "no-bnu210", -MASK_BNU210, "Ignored (obsolete)" }, \
-  { "bnu210", MASK_BNU210, "Ignored (obsolete)" },
-
-/* Warn that -mbnu210 is now obsolete.  */
-#undef  SUBTARGET_OVERRIDE_OPTIONS
-#define SUBTARGET_OVERRIDE_OPTIONS \
-do \
-  { \
-    if (target_flags & MASK_BNU210) \
-      {	\
-        warning ("-mbnu210 is ignored (option is obsolete)"); \
-      }	\
-  } \
-while (0)
-
 /* Support for C++ templates.  */
 #undef MAKE_DECL_ONE_ONLY
 #define MAKE_DECL_ONE_ONLY(DECL) (DECL_WEAK (DECL) = 1)
+
+#undef DBX_REGISTER_NUMBER
+#define DBX_REGISTER_NUMBER(n) svr4_dbx_register_map[n]
+
+/* Default to pcc-struct-return.  */
+#define DEFAULT_PCC_STRUCT_RETURN 1
+
+/* Copied from gcc/varasm.c.  */
+#undef ASM_DECLARE_FUNCTION_NAME
+#define ASM_DECLARE_FUNCTION_NAME(FILE, NAME, DECL)		\
+  ASM_OUTPUT_LABEL (FILE, NAME);
+
diff --git a/gcc/config/i386/t-djgpp b/gcc/config/i386/t-djgpp
index 7b54b7ba..8789bb2c 100644
--- a/gcc/config/i386/t-djgpp
+++ b/gcc/config/i386/t-djgpp
@@ -1,2 +1,13 @@
 # Location of DJGPP's header directory.
 NATIVE_SYSTEM_HEADER_DIR=$(DJDIR)/include
+
+# We should have djgpp.ver before we can compile anything
+EXTRA_PARTS += djgpp.ver djgpp-x.djl
+# djgpp.ver is needed for compilation, so we need it also here
+EXTRA_PASSES += djgpp.ver
+
+djgpp.ver:
+	echo '#include <sys/version.h>' >djgpp.ver
+
+djgpp-x.djl:
+	cp -v $(srcdir)/config/i386/djgpp-x.djl djgpp-x.djl
diff --git a/gcc/config/i386/x-djgpp b/gcc/config/i386/x-djgpp
new file mode 100644
index 00000000..260e6687
--- /dev/null
+++ b/gcc/config/i386/x-djgpp
@@ -0,0 +1,26 @@
+#-----------------------------------------------------------------------------
+# The following code is copied from config/mh-djgpp as one may 
+# want to run make in gcc build directory instead of toplevel 
+# one (for example 'make restage2' or similar which are not available
+# from top level makefile and we should have the same substitutions 
+# in this case)           
+#-----------------------------------------------------------------------------
+
+# Shorten the target alias so when it is used to set 'libsubdir'
+# the name will work in both short and long filename environments.
+ifeq ($(findstring -pc-msdosdjgpp,$(target_alias)),-pc-msdosdjgpp)
+target_alias=djgpp
+endif
+
+# The version string must be modified to contain just one dot
+# because DOS filenames can only have one dot when long filenames
+# are not available.
+__version:=$(gcc_version)
+__version:=$(subst ., ,$(__version))
+ifeq ($(words $(__version)),3)
+gcc_version=$(word 1,$(__version)).$(word 2,$(__version))$(word 3,$(__version))
+endif
+
+# on DJGPP the 'ln -s' does not work correctly
+LN = cp -p
+LN_S = cp -p
diff --git a/gcc/config/i386/xm-djgpp.h b/gcc/config/i386/xm-djgpp.h
index 9bb520da..3a3594b6 100644
--- a/gcc/config/i386/xm-djgpp.h
+++ b/gcc/config/i386/xm-djgpp.h
@@ -82,3 +82,8 @@ Boston, MA 02111-1307, USA.  */
       strcat (fixed_path, "/");			\
       (PATH) = xstrdup (fixed_path);		\
     } 
+
+/* Rename libstdc++ to libstdcxx as the first name is not valid for DOS */
+#define LIBSTDCXX "-lstdcxx"
+#define LIBSTDCXX_PROFILE "-lstdcxx"
+
diff --git a/gcc/configure b/gcc/configure
index 91f9326d..7690acb4 100755
--- a/gcc/configure
+++ b/gcc/configure
@@ -251,7 +251,11 @@ exec 6>&1
 #
 # Initializations.
 #
-ac_default_prefix=/usr/local
+if test -n "$DJDIR" && test -f /dev/env/DJDIR/djgpp.env; then
+  ac_default_prefix=/dev/env/DJDIR
+else
+  ac_default_prefix=/usr/local
+fi
 ac_config_libobj_dir=.
 cross_compiling=no
 subdirs=
@@ -1272,8 +1276,10 @@ done
 
 if test -r "$cache_file"; then
   # Some versions of bash will fail to source /dev/null (special
-  # files actually), so we avoid doing that.
-  if test -f "$cache_file"; then
+  # files actually), so we avoid doing that.  The LFN=n is needed
+  # is needed for DJGPP's bash to DTRT under Win2K/XP.  The case
+  # without LFN=n is for normal operation under DJGPP's bash.
+  if LFN=n test -f "$cache_file" || test -f "$cache_file"; then
     { echo "$as_me:$LINENO: loading cache $cache_file" >&5
 echo "$as_me: loading cache $cache_file" >&6;}
     case $cache_file in
@@ -1622,10 +1628,10 @@ esac
 fi;
 
 if test x${gcc_gxx_include_dir} = x; then
+  topsrcdir=${srcdir}/.. . ${srcdir}/../config.if
   if test x${enable_version_specific_runtime_libs} = xyes; then
-    gcc_gxx_include_dir='${libsubdir}/include/c++'
+    gcc_gxx_include_dir='${libsubdir}/include/'${libstdcxx_incdir_prefix}
   else
-    topsrcdir=${srcdir}/.. . ${srcdir}/../config.if
     gcc_gxx_include_dir="\$(libsubdir)/\$(unlibsubdir)/..\`echo \$(exec_prefix) | sed -e 's|^\$(prefix)||' -e 's|/[^/]*|/..|g'\`/include/"${libstdcxx_incdir}
   fi
 fi
diff --git a/gcc/configure.ac b/gcc/configure.ac
index 15262212..6cd6eba7 100644
--- a/gcc/configure.ac
+++ b/gcc/configure.ac
@@ -131,10 +131,10 @@ no)	;;
 esac])
 
 if test x${gcc_gxx_include_dir} = x; then
+  topsrcdir=${srcdir}/.. . ${srcdir}/../config.if
   if test x${enable_version_specific_runtime_libs} = xyes; then
-    gcc_gxx_include_dir='${libsubdir}/include/c++'
+    gcc_gxx_include_dir='${libsubdir}/include/'${libstdcxx_incdir_prefix}
   else
-    topsrcdir=${srcdir}/.. . ${srcdir}/../config.if
 changequote(<<, >>)dnl
     gcc_gxx_include_dir="\$(libsubdir)/\$(unlibsubdir)/..\`echo \$(exec_prefix) | sed -e 's|^\$(prefix)||' -e 's|/[^/]*|/..|g'\`/include/"${libstdcxx_incdir}
 changequote([, ])dnl
diff --git a/gcc/cppfiles.c b/gcc/cppfiles.c
index 04f1a166..880b2e7e 100644
--- a/gcc/cppfiles.c
+++ b/gcc/cppfiles.c
@@ -40,6 +40,7 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
 #endif
 
 #ifdef __DJGPP__
+#include <io.h>
   /* For DJGPP redirected input is opened in text mode.  */
 #  define set_stdin_to_binary_mode() \
      if (! isatty (0)) setmode (0, O_BINARY)
@@ -232,6 +233,19 @@ open_file (_cpp_file *file)
     }
   else if (errno == ENOTDIR)
     errno = ENOENT;
+#if defined(__DJGPP__)
+  /* DJGPP v2.03 library open returns errno=EACCES on
+     attempt to open directory. Therefore test on EACCES
+     whether it's an directory  */
+  else if (errno==EACCES)
+    { 
+      struct stat st;
+      if (stat(file->path,&st)==0 && S_ISDIR(st.st_mode))
+        errno = ENOENT;
+      else
+        errno = EACCES;
+    }
+#endif /* __DJGPP__   */
 
   file->err_no = errno;
 
@@ -510,6 +524,14 @@ read_file_guts (cpp_reader *pfile, _cpp_file *file)
     cpp_error (pfile, CPP_DL_WARNING,
 	       "%s is shorter than expected", file->path);
 
+#ifdef __DJGPP__
+  /* For DOS we should handle DOS EOF character (0x1A, ^Z)  */
+  do {
+     uchar * dos_eof = memchr (buf, 0x1A, total);
+     if (dos_eof) total = dos_eof - buf;
+  } while (0);
+#endif
+
   file->buffer = _cpp_convert_input (pfile, CPP_OPTION (pfile, input_charset),
 				     buf, size, total, &file->st.st_size);
   file->buffer_valid = true;
diff --git a/gcc/f/Make-lang.in b/gcc/f/Make-lang.in
index 47585b0e..d3e84fc8 100644
--- a/gcc/f/Make-lang.in
+++ b/gcc/f/Make-lang.in
@@ -209,7 +209,7 @@ g77.pod: f/invoke.texi
 INTDOC_DEPS = f/intdoc.c f/intrin.h f/intrin.def
 
 $(srcdir)/f/intdoc.texi: $(INTDOC_DEPS) f/intdoc.in
-	$(MAKE) f/intdoc$(build_exeext)
+	$(MAKE) "HOST_CC=$(HOST_CC)" f/intdoc$(build_exeext)
 	f/intdoc$(build_exeext) > $(srcdir)/f/intdoc.texi
 
 f/intdoc$(build_exeext): $(INTDOC_DEPS) f/intdoc.h0 bconfig.h \
diff --git a/gcc/gcc.c b/gcc/gcc.c
index 997c37c3..bc8f2e37 100644
--- a/gcc/gcc.c
+++ b/gcc/gcc.c
@@ -1407,15 +1407,19 @@ static const char *gcc_libexec_prefix;
 #endif
 
 static const char *const standard_exec_prefix = STANDARD_EXEC_PREFIX;
+#ifndef __DJGPP__
 static const char *const standard_exec_prefix_1 = "/usr/libexec/gcc/";
 static const char *const standard_exec_prefix_2 = "/usr/lib/gcc/";
+#endif
 static const char *md_exec_prefix = MD_EXEC_PREFIX;
 
 static const char *md_startfile_prefix = MD_STARTFILE_PREFIX;
 static const char *md_startfile_prefix_1 = MD_STARTFILE_PREFIX_1;
 static const char *const standard_startfile_prefix = STANDARD_STARTFILE_PREFIX;
+#ifndef __DJGPP__
 static const char *const standard_startfile_prefix_1 = "/lib/";
 static const char *const standard_startfile_prefix_2 = "/usr/lib/";
+#endif
 
 static const char *const tooldir_base_prefix = TOOLDIR_BASE_PREFIX;
 static const char *tooldir_prefix;
@@ -3783,16 +3787,20 @@ warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n"
 	      PREFIX_PRIORITY_LAST, 2, warn_std_ptr, 0);
   add_prefix (&exec_prefixes, standard_exec_prefix, "BINUTILS",
 	      PREFIX_PRIORITY_LAST, 2, warn_std_ptr, 0);
+#ifndef __DJGPP__
   add_prefix (&exec_prefixes, standard_exec_prefix_1, "BINUTILS",
 	      PREFIX_PRIORITY_LAST, 2, warn_std_ptr, 0);
   add_prefix (&exec_prefixes, standard_exec_prefix_2, "BINUTILS",
 	      PREFIX_PRIORITY_LAST, 2, warn_std_ptr, 0);
+#endif
 #endif
 
   add_prefix (&startfile_prefixes, standard_exec_prefix, "BINUTILS",
 	      PREFIX_PRIORITY_LAST, 1, warn_std_ptr, 0);
+#ifndef __DJGPP__
   add_prefix (&startfile_prefixes, standard_exec_prefix_2, "BINUTILS",
 	      PREFIX_PRIORITY_LAST, 1, warn_std_ptr, 0);
+#endif
 
   tooldir_prefix = concat (tooldir_base_prefix, spec_machine,
 			   dir_separator_str, NULL);
@@ -6393,10 +6401,12 @@ main (int argc, const char **argv)
 		      NULL, PREFIX_PRIORITY_LAST, 0, NULL, 1);
 	}
 
+#ifndef __DJGPP__
       add_sysrooted_prefix (&startfile_prefixes, standard_startfile_prefix_1,
 			    "BINUTILS", PREFIX_PRIORITY_LAST, 0, NULL, 1);
       add_sysrooted_prefix (&startfile_prefixes, standard_startfile_prefix_2,
 			    "BINUTILS", PREFIX_PRIORITY_LAST, 0, NULL, 1);
+#endif
 #if 0 /* Can cause surprises, and one can use -B./ instead.  */
       add_prefix (&startfile_prefixes, "./", NULL,
 		  PREFIX_PRIORITY_LAST, 1, NULL, 0);
diff --git a/gcc/gcov.c b/gcc/gcov.c
index e230e397..068ee833 100644
--- a/gcc/gcov.c
+++ b/gcc/gcov.c
@@ -1479,6 +1479,23 @@ make_gcov_file_name (const char *input_name, const char *src_name)
     }
 
   strcat (name, ".gcov");
+#ifdef __DJGPP__
+     if (!_use_lfn(name))
+       {
+           char *s1, *s2=NULL;
+           for (s1=name; *s1 && *s1!='.'; s1++);
+           if (*s1) for (s2=s1+1; *s2 && *s2!='.'; s2++);
+           if (s2 && *s2=='.')
+             {
+                 int l;
+                 s1++;  l=s2-s1;  if (l>2) l=2;
+                 s1 = s1+l;  s2++;
+                 while (*s2) { *s1++=*s2++; }
+                 *s1=0;
+             }
+       }
+#endif
+
   return name;
 }
 
diff --git a/gcc/ginclude/float.h b/gcc/ginclude/float.h
index 75fcd542..d493d117 100644
--- a/gcc/ginclude/float.h
+++ b/gcc/ginclude/float.h
@@ -28,6 +28,10 @@ Boston, MA 02111-1307, USA.  */
  * ISO C Standard:  5.2.4.2.2  Characteristics of floating types <float.h>
  */
 
+#ifdef __DJGPP__
+#include_next <float.h>
+#endif
+
 #ifndef _FLOAT_H___
 #define _FLOAT_H___
 
diff --git a/gcc/protoize.c b/gcc/protoize.c
index 0dd91e24..24518444 100644
--- a/gcc/protoize.c
+++ b/gcc/protoize.c
@@ -4161,7 +4161,7 @@ edit_file (const hash_table_entry *hp)
 #ifdef __MSDOS__
       /* MSDOS filenames are restricted to 8.3 format, so we save `foo.c'
 	 as `foo.<save_suffix>'.  */
-      new_filename[(strlen (convert_filename) - 1] = '\0';
+      new_filename[strlen (convert_filename) - 1] = '\0';
 #endif
       strcat (new_filename, save_suffix);
 
diff --git a/libf2c/Makefile.in b/libf2c/Makefile.in
index 120bd7c4..afde5841 100644
--- a/libf2c/Makefile.in
+++ b/libf2c/Makefile.in
@@ -190,7 +190,7 @@ ${srcdir}/configure: configure.in
 	cd $(srcdir) && autoconf
 
 # Dependence on Makefile serializes for parallel make.
-g2c.h: g2c.hin config.status Makefile
+g2c.h: $(top_srcdir)/g2c.hin config.status Makefile
 # Might try to avoid rebuilding everything if Makefile or configure
 # changes and g2c.h doesn't; see also the Makefile rule.  Should
 # depend on another stamp file rather than using the commented-out
diff --git a/libf2c/changes.netlib b/libf2c/changes.netlib
index 4ec0e7f5..76d99f08 100644
--- a/libf2c/changes.netlib
+++ b/libf2c/changes.netlib
@@ -2272,7 +2272,7 @@ Wed Jan 25 00:14:42 EST 1995
 to have __ appended when used as local variables).
   libf77: add s_copyow.c, an alternative to s_copy.c for handling
 (illegal) character assignments where the right- and left-hand
-sides overlap, as in a(2:4) = a(1:3).
+sides overlap, as in a(2:4) = a(1:3).
 
 Thu Jan 26 14:21:19 EST 1995
   libf77: roll s_catow.c and s_copyow.c into s_cat.c and s_copy.c,
diff --git a/libf2c/libI77/config.h.in b/libf2c/libI77/config.h.in
index 63aacb5d..3ae78d19 100644
--- a/libf2c/libI77/config.h.in
+++ b/libf2c/libI77/config.h.in
@@ -1,4 +1,4 @@
-/* config.h.in.  Generated automatically from configure.in by autoheader 2.13.  */
+/* config.h.in.  Generated automatically from configure.in by autoheader.  */
 
 /* Define to empty if the keyword does not work.  */
 #undef const
diff --git a/libf2c/libI77/configure b/libf2c/libI77/configure
index 3d3b6dcd..54dda5bb 100755
--- a/libf2c/libI77/configure
+++ b/libf2c/libI77/configure
@@ -1687,6 +1687,9 @@ echo "configure:1687: checking NON_ANSI_RW_MODES" >&5
 cat > conftest.$ac_ext <<EOF
 #line 1689 "configure"
 #include "confdefs.h"
+#ifdef __DJGPP__
+  no
+#else
 #ifdef unix
   yes
 #endif
@@ -1696,6 +1699,7 @@ cat > conftest.$ac_ext <<EOF
 #ifdef __unix__
   yes
 #endif
+#endif
 
 EOF
 if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
diff --git a/libf2c/libI77/configure.in b/libf2c/libI77/configure.in
index 71a34d42..b63d5813 100644
--- a/libf2c/libI77/configure.in
+++ b/libf2c/libI77/configure.in
@@ -179,7 +179,10 @@ fi
 # define NON_ANSI_RW_MODES on unix (can't hurt)
 AC_MSG_CHECKING(NON_ANSI_RW_MODES)
 AC_EGREP_CPP(yes,
-[#ifdef unix
+[#ifdef __DJGPP__
+  no
+#else
+#ifdef unix
   yes
 #endif
 #ifdef __unix
@@ -188,6 +191,7 @@ AC_EGREP_CPP(yes,
 #ifdef __unix__
   yes
 #endif
+#endif
 ], is_unix=yes, is_unix=no)
 # NON_ANSI_RW_MODES shouldn't be necessary on cygwin for binary mounts.
 if test $g77_cv_sys_cygwin32 = yes || test $g77_cv_sys_mingw32 = yes; then
diff --git a/libiberty/make-relative-prefix.c b/libiberty/make-relative-prefix.c
index dc4f8d52..3a6eb49c 100644
--- a/libiberty/make-relative-prefix.c
+++ b/libiberty/make-relative-prefix.c
@@ -78,6 +78,7 @@ relative prefix can be found, return @code{NULL}.
 #  define HAVE_DOS_BASED_FILE_SYSTEM
 #  define HAVE_HOST_EXECUTABLE_SUFFIX
 #  define HOST_EXECUTABLE_SUFFIX ".exe"
+#  define FILENAME_COMPARE strcasecmp
 #  ifndef DIR_SEPARATOR_2 
 #    define DIR_SEPARATOR_2 '\\'
 #  endif
@@ -93,6 +94,10 @@ relative prefix can be found, return @code{NULL}.
 	(((ch) == DIR_SEPARATOR) || ((ch) == DIR_SEPARATOR_2))
 #endif
 
+#ifndef FILENAME_COMPARE
+#  define FILENAME_COMPARE strcmp
+#endif
+
 #define DIR_UP ".."
 
 static char *save_string PARAMS ((const char *, int));
@@ -317,7 +322,7 @@ make_relative_prefix (progname, bin_prefix, prefix)
     {
       for (i = 0; i < bin_num; i++)
 	{
-	  if (strcmp (prog_dirs[i], bin_dirs[i]) != 0)
+	  if (FILENAME_COMPARE (prog_dirs[i], bin_dirs[i]) != 0)
 	    break;
 	}
 
@@ -342,7 +347,7 @@ make_relative_prefix (progname, bin_prefix, prefix)
   n = (prefix_num < bin_num) ? prefix_num : bin_num;
   for (common = 0; common < n; common++)
     {
-      if (strcmp (bin_dirs[common], prefix_dirs[common]) != 0)
+      if (FILENAME_COMPARE (bin_dirs[common], prefix_dirs[common]) != 0)
 	break;
     }
 
diff --git a/libiberty/make-temp-file.c b/libiberty/make-temp-file.c
index 88335047..592e7698 100644
--- a/libiberty/make-temp-file.c
+++ b/libiberty/make-temp-file.c
@@ -50,6 +50,29 @@ extern int mkstemps PARAMS ((char *, int));
 #define DIR_SEPARATOR '/'
 #endif
 
+#if defined (_WIN32) || defined (__MSDOS__) \
+    || defined (__DJGPP__) || defined (__OS2__)
+#  define HAVE_DOS_BASED_FILE_SYSTEM
+#  ifndef DIR_SEPARATOR_2 
+#    define DIR_SEPARATOR_2 '\\'
+#  endif
+#endif
+
+/* Define IS_DIR_SEPARATOR. VMS uses '::', ':', '[...]' and '<...>' to
+   separate the different components of a file specification.  It's a
+   bit of a stretch to call ':', ']' and '>' directory separators, so
+   just define the test to find the file name component.  */
+#ifdef VMS
+#  define IS_DIR_SEPARATOR(ch) ((ch) == ':' || (ch) == ']' || (ch) == '>')
+#else
+#  ifndef DIR_SEPARATOR_2
+#    define IS_DIR_SEPARATOR(ch) ((ch) == DIR_SEPARATOR)
+#  else
+#    define IS_DIR_SEPARATOR(ch) \
+	(((ch) == DIR_SEPARATOR) || ((ch) == DIR_SEPARATOR_2))
+#  endif
+#endif
+
 /* Name of temporary file.
    mktemp requires 6 trailing X's.  */
 #define TEMP_FILE "ccXXXXXX"
@@ -126,7 +149,8 @@ choose_tmpdir ()
   len = strlen (base);
   tmpdir = xmalloc (len + 2);
   strcpy (tmpdir, base);
-  tmpdir[len] = DIR_SEPARATOR;
+  if (len>0 && !IS_DIR_SEPARATOR(tmpdir[len-1]))   
+      tmpdir[len] = DIR_SEPARATOR;
   tmpdir[len+1] = '\0';
 
   memoized_tmpdir = tmpdir;
diff --git a/libstdc++-v3/Makefile.in b/libstdc++-v3/Makefile.in
index 9355471b..7b31bf44 100644
--- a/libstdc++-v3/Makefile.in
+++ b/libstdc++-v3/Makefile.in
@@ -1,4 +1,4 @@
-# Makefile.in generated by automake 1.7.8 from Makefile.am.
+# Makefile.in generated by automake 1.7.6 from Makefile.am.
 # @configure_input@
 
 # Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
@@ -77,6 +77,8 @@ CYGPATH_W = @CYGPATH_W@
 C_INCLUDE_DIR = @C_INCLUDE_DIR@
 DEBUG_FLAGS = @DEBUG_FLAGS@
 DEFS = @DEFS@
+DJGPP_FALSE = @DJGPP_FALSE@
+DJGPP_TRUE = @DJGPP_TRUE@
 ECHO_C = @ECHO_C@
 ECHO_N = @ECHO_N@
 ECHO_T = @ECHO_T@
@@ -291,14 +293,13 @@ RECURSIVE_TARGETS = info-recursive dvi-recursive pdf-recursive \
 	all-recursive install-data-recursive install-exec-recursive \
 	installdirs-recursive install-recursive uninstall-recursive \
 	check-recursive installcheck-recursive
-DIST_COMMON = README $(srcdir)/Makefile.in $(srcdir)/configure \
-	$(top_srcdir)/fragment.am ../ABOUT-NLS ../COPYING \
-	../COPYING.LIB ../ChangeLog ../README ../config.guess \
+DIST_COMMON = README $(top_srcdir)/fragment.am ../ABOUT-NLS ../COPYING \
+	../COPYING.LIB ../ChangeLog ../NEWS ../README ../config.guess \
 	../config.rpath ../config.sub ../configure ../configure.in \
 	../install-sh ../ltcf-c.sh ../ltcf-cxx.sh ../ltcf-gcj.sh \
 	../ltconfig ../ltmain.sh ../missing ../mkinstalldirs ../ylwrap \
-	ChangeLog Makefile.am acconfig.h acinclude.m4 aclocal.m4 \
-	config.h.in configure configure.ac
+	ChangeLog Makefile.am Makefile.in acconfig.h acinclude.m4 \
+	aclocal.m4 config.h.in configure configure.ac
 DIST_SUBDIRS = include libmath libsupc++ src po testsuite
 all: config.h
 	$(MAKE) $(AM_MAKEFLAGS) all-recursive
@@ -578,7 +579,7 @@ distcleancheck: distclean
 	       exit 1; } >&2
 check-am: all-am
 check: check-recursive
-all-am: Makefile all-multi config.h
+all-am: Makefile config.h
 installdirs: installdirs-recursive
 installdirs-am:
 
@@ -601,18 +602,17 @@ mostlyclean-generic:
 clean-generic:
 
 distclean-generic:
-	-rm -f $(CONFIG_CLEAN_FILES)
+	-rm -f Makefile $(CONFIG_CLEAN_FILES)
 
 maintainer-clean-generic:
 	@echo "This command is intended for maintainers to use"
 	@echo "it deletes files that may require special tools to rebuild."
-clean: clean-multi clean-recursive
+clean: clean-recursive
 
 clean-am: clean-generic clean-libtool mostlyclean-am
 
-distclean: distclean-multi distclean-recursive
+distclean: distclean-recursive
 	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
-	-rm -f Makefile
 distclean-am: clean-am distclean-generic distclean-hdr distclean-libtool \
 	distclean-tags
 
@@ -626,7 +626,7 @@ info-am:
 
 install-data-am:
 
-install-exec-am: install-multi
+install-exec-am:
 
 install-info: install-info-recursive
 
@@ -634,13 +634,12 @@ install-man:
 
 installcheck-am:
 
-maintainer-clean: maintainer-clean-multi maintainer-clean-recursive
+maintainer-clean: maintainer-clean-recursive
 	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
 	-rm -rf $(top_srcdir)/autom4te.cache
-	-rm -f Makefile
 maintainer-clean-am: distclean-am maintainer-clean-generic
 
-mostlyclean: mostlyclean-multi mostlyclean-recursive
+mostlyclean: mostlyclean-recursive
 
 mostlyclean-am: mostlyclean-generic mostlyclean-libtool
 
@@ -656,24 +655,23 @@ uninstall-am: uninstall-info-am
 
 uninstall-info: uninstall-info-recursive
 
-.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am all-multi check \
-	check-am clean clean-generic clean-libtool clean-multi \
-	clean-recursive ctags ctags-recursive dist dist-all dist-gzip \
-	distcheck distclean distclean-generic distclean-hdr \
-	distclean-libtool distclean-multi distclean-recursive \
-	distclean-tags distcleancheck distdir distuninstallcheck dvi \
-	dvi-am dvi-recursive info info-am info-recursive install \
-	install-am install-data install-data-am install-data-recursive \
-	install-exec install-exec-am install-exec-recursive \
-	install-info install-info-am install-info-recursive install-man \
-	install-multi install-recursive install-strip installcheck \
-	installcheck-am installdirs installdirs-am \
-	installdirs-recursive maintainer-clean maintainer-clean-generic \
-	maintainer-clean-multi maintainer-clean-recursive mostlyclean \
-	mostlyclean-generic mostlyclean-libtool mostlyclean-multi \
-	mostlyclean-recursive pdf pdf-am pdf-recursive ps ps-am \
-	ps-recursive tags tags-recursive uninstall uninstall-am \
-	uninstall-info-am uninstall-info-recursive uninstall-recursive
+.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am clean \
+	clean-generic clean-libtool clean-recursive ctags \
+	ctags-recursive dist dist-all dist-gzip distcheck distclean \
+	distclean-generic distclean-hdr distclean-libtool \
+	distclean-recursive distclean-tags distcleancheck distdir \
+	distuninstallcheck dvi dvi-am dvi-recursive info info-am \
+	info-recursive install install-am install-data install-data-am \
+	install-data-recursive install-exec install-exec-am \
+	install-exec-recursive install-info install-info-am \
+	install-info-recursive install-man install-recursive \
+	install-strip installcheck installcheck-am installdirs \
+	installdirs-am installdirs-recursive maintainer-clean \
+	maintainer-clean-generic maintainer-clean-recursive mostlyclean \
+	mostlyclean-generic mostlyclean-libtool mostlyclean-recursive \
+	pdf pdf-am pdf-recursive ps ps-am ps-recursive tags \
+	tags-recursive uninstall uninstall-am uninstall-info-am \
+	uninstall-info-recursive uninstall-recursive
 
 
 @GLIBCXX_HOSTED_TRUE@  # Possibly libmath as well...
diff --git a/libstdc++-v3/acinclude.m4 b/libstdc++-v3/acinclude.m4
index 44c75591..8eff65a3 100644
--- a/libstdc++-v3/acinclude.m4
+++ b/libstdc++-v3/acinclude.m4
@@ -775,7 +775,15 @@ AC_DEFUN([GLIBCXX_EXPORT_INSTALL_INFO], [
 
   # Default case for install directory for include files.
   if test $version_specific_libs = no && test $gxx_include_dir = no; then
-    gxx_include_dir='${prefix}'/include/c++/${gcc_version}
+    #gxx_include_dir='$(prefix)'/include/c++/${gcc_version}
+    case ${build_alias} in
+        *djgpp*)
+            gxx_include_dir='$(prefix)'/include/cxx/${gcc_version}
+            ;;
+        *)
+            gxx_include_dir='$(prefix)'/include/c++/${gcc_version}
+            ;;
+    esac
   fi
 
   # Version-specific runtime libs processing.
@@ -785,7 +793,14 @@ AC_DEFUN([GLIBCXX_EXPORT_INSTALL_INFO], [
     # is selected.  FIXME: these variables are misnamed, there are
     # no executables installed in _toolexecdir or _toolexeclibdir.
     if test x"$gxx_include_dir" = x"no"; then
-      gxx_include_dir='${libdir}/gcc/${host_alias}/'$gcc_version/include/c++
+      case ${host_alias} in
+           *djgpp*)
+             gxx_include_dir='${libdir}/gcc/${host_alias}/'$gcc_version/include/cxx
+             ;;
+           *)
+             gxx_include_dir='${libdir}/gcc/${host_alias}/'$gcc_version/include/c++
+           ;;
+      esac
     fi
     glibcxx_toolexecdir='${libdir}/gcc/${host_alias}'
     glibcxx_toolexeclibdir='${toolexecdir}/'$gcc_version'$(MULTISUBDIR)'
diff --git a/libstdc++-v3/aclocal.m4 b/libstdc++-v3/aclocal.m4
index 097990d9..ebc4a031 100644
--- a/libstdc++-v3/aclocal.m4
+++ b/libstdc++-v3/aclocal.m4
@@ -1,4 +1,4 @@
-# generated automatically by aclocal 1.7.8 -*- Autoconf -*-
+# generated automatically by aclocal 1.7.6 -*- Autoconf -*-
 
 # Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002
 # Free Software Foundation, Inc.
@@ -788,7 +788,15 @@ AC_DEFUN([GLIBCXX_EXPORT_INSTALL_INFO], [
 
   # Default case for install directory for include files.
   if test $version_specific_libs = no && test $gxx_include_dir = no; then
-    gxx_include_dir='${prefix}'/include/c++/${gcc_version}
+    #gxx_include_dir='$(prefix)'/include/c++/${gcc_version}
+    case ${build_alias} in
+        *djgpp*)
+            gxx_include_dir='$(prefix)'/include/cxx/${gcc_version}
+            ;;
+        *)
+            gxx_include_dir='$(prefix)'/include/c++/${gcc_version}
+            ;;
+    esac
   fi
 
   # Version-specific runtime libs processing.
@@ -798,7 +806,14 @@ AC_DEFUN([GLIBCXX_EXPORT_INSTALL_INFO], [
     # is selected.  FIXME: these variables are misnamed, there are
     # no executables installed in _toolexecdir or _toolexeclibdir.
     if test x"$gxx_include_dir" = x"no"; then
-      gxx_include_dir='${libdir}/gcc/${host_alias}/'$gcc_version/include/c++
+      case ${host_alias} in
+           *djgpp*)
+             gxx_include_dir='${libdir}/gcc/${host_alias}/'$gcc_version/include/cxx
+             ;;
+           *)
+             gxx_include_dir='${libdir}/gcc/${host_alias}/'$gcc_version/include/c++
+           ;;
+      esac
     fi
     glibcxx_toolexecdir='${libdir}/gcc/${host_alias}'
     glibcxx_toolexeclibdir='${toolexecdir}/'$gcc_version'$(MULTISUBDIR)'
@@ -2078,7 +2093,7 @@ AC_DEFUN([AM_AUTOMAKE_VERSION],[am__api_version="1.7"])
 # Call AM_AUTOMAKE_VERSION so it can be traced.
 # This function is AC_REQUIREd by AC_INIT_AUTOMAKE.
 AC_DEFUN([AM_SET_CURRENT_AUTOMAKE_VERSION],
-	 [AM_AUTOMAKE_VERSION([1.7.8])])
+	 [AM_AUTOMAKE_VERSION([1.7.6])])
 
 # Helper functions for option handling.                    -*- Autoconf -*-
 
diff --git a/libstdc++-v3/configure b/libstdc++-v3/configure
index b18c3003..0d260e2d 100755
--- a/libstdc++-v3/configure
+++ b/libstdc++-v3/configure
@@ -251,7 +251,11 @@ exec 6>&1
 #
 # Initializations.
 #
-ac_default_prefix=/usr/local
+if test -n "$DJDIR" && test -f /dev/env/DJDIR/djgpp.env; then
+  ac_default_prefix=/dev/env/DJDIR
+else
+  ac_default_prefix=/usr/local
+fi
 ac_config_libobj_dir=.
 cross_compiling=no
 subdirs=
@@ -309,7 +313,7 @@ ac_includes_default="\
 # include <unistd.h>
 #endif"
 
-ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS libtool_VERSION multi_basedir build build_cpu build_vendor build_os host host_cpu host_vendor host_os target target_cpu target_vendor target_os INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA CYGPATH_W PACKAGE VERSION ACLOCAL AUTOCONF AUTOMAKE AUTOHEADER MAKEINFO AMTAR install_sh STRIP ac_ct_STRIP INSTALL_STRIP_PROGRAM AWK SET_MAKE am__leading_dot glibcxx_builddir glibcxx_srcdir toplevel_srcdir CC ac_ct_CC EXEEXT OBJEXT CXX ac_ct_CXX CFLAGS CXXFLAGS LN_S AS ac_ct_AS AR ac_ct_AR RANLIB ac_ct_RANLIB MAINTAINER_MODE_TRUE MAINTAINER_MODE_FALSE MAINT LIBTOOL CXXCPP CPPFLAGS enable_shared enable_static GLIBCXX_HOSTED_TRUE GLIBCXX_HOSTED_FALSE GLIBCXX_BUILD_PCH_TRUE GLIBCXX_BUILD_PCH_FALSE glibcxx_PCHFLAGS CSTDIO_H BASIC_FILE_H BASIC_FILE_CC CPP EGREP check_msgfmt glibcxx_MOFILES glibcxx_POFILES glibcxx_localedir USE_NLS CLOCALE_H CCODECVT_H CMESSAGES_H CCODECVT_CC CCOLLATE_CC CCTYPE_CC CMESSAGES_CC CMONEY_CC CNUMERIC_CC CTIME_H CTIME_CC CLOCALE_CC CLOCALE_INTERNAL_H ALLOCATOR_H ALLOCATOR_NAME C_INCLUDE_DIR GLIBCXX_C_HEADERS_C_TRUE GLIBCXX_C_HEADERS_C_FALSE GLIBCXX_C_HEADERS_C_STD_TRUE GLIBCXX_C_HEADERS_C_STD_FALSE GLIBCXX_C_HEADERS_COMPATIBILITY_TRUE GLIBCXX_C_HEADERS_COMPATIBILITY_FALSE glibcxx_thread_h DEBUG_FLAGS GLIBCXX_BUILD_DEBUG_TRUE GLIBCXX_BUILD_DEBUG_FALSE EXTRA_CXX_FLAGS WERROR SECTION_FLAGS SECTION_LDFLAGS OPT_LDFLAGS LIBMATHOBJS SYMVER_MAP port_specific_symbol_files GLIBCXX_BUILD_VERSIONED_SHLIB_TRUE GLIBCXX_BUILD_VERSIONED_SHLIB_FALSE baseline_dir GLIBCXX_TEST_WCHAR_T_TRUE GLIBCXX_TEST_WCHAR_T_FALSE GLIBCXX_TEST_ABI_TRUE GLIBCXX_TEST_ABI_FALSE ATOMICITY_SRCDIR ATOMIC_WORD_SRCDIR OS_INC_SRCDIR glibcxx_prefixdir gxx_include_dir glibcxx_toolexecdir glibcxx_toolexeclibdir GLIBCXX_INCLUDES TOPLEVEL_INCLUDES OPTIMIZE_CXXFLAGS WARN_FLAGS LIBSUPCXX_PICFLAGS LIBOBJS LTLIBOBJS'
+ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS libtool_VERSION multi_basedir build build_cpu build_vendor build_os host host_cpu host_vendor host_os target target_cpu target_vendor target_os INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA CYGPATH_W PACKAGE VERSION ACLOCAL AUTOCONF AUTOMAKE AUTOHEADER MAKEINFO AMTAR install_sh STRIP ac_ct_STRIP INSTALL_STRIP_PROGRAM AWK SET_MAKE am__leading_dot DJGPP_TRUE DJGPP_FALSE glibcxx_builddir glibcxx_srcdir toplevel_srcdir CC ac_ct_CC EXEEXT OBJEXT CXX ac_ct_CXX CFLAGS CXXFLAGS LN_S AS ac_ct_AS AR ac_ct_AR RANLIB ac_ct_RANLIB MAINTAINER_MODE_TRUE MAINTAINER_MODE_FALSE MAINT LIBTOOL CXXCPP CPPFLAGS enable_shared enable_static GLIBCXX_HOSTED_TRUE GLIBCXX_HOSTED_FALSE GLIBCXX_BUILD_PCH_TRUE GLIBCXX_BUILD_PCH_FALSE glibcxx_PCHFLAGS CSTDIO_H BASIC_FILE_H BASIC_FILE_CC CPP EGREP check_msgfmt glibcxx_MOFILES glibcxx_POFILES glibcxx_localedir USE_NLS CLOCALE_H CCODECVT_H CMESSAGES_H CCODECVT_CC CCOLLATE_CC CCTYPE_CC CMESSAGES_CC CMONEY_CC CNUMERIC_CC CTIME_H CTIME_CC CLOCALE_CC CLOCALE_INTERNAL_H ALLOCATOR_H ALLOCATOR_NAME C_INCLUDE_DIR GLIBCXX_C_HEADERS_C_TRUE GLIBCXX_C_HEADERS_C_FALSE GLIBCXX_C_HEADERS_C_STD_TRUE GLIBCXX_C_HEADERS_C_STD_FALSE GLIBCXX_C_HEADERS_COMPATIBILITY_TRUE GLIBCXX_C_HEADERS_COMPATIBILITY_FALSE glibcxx_thread_h DEBUG_FLAGS GLIBCXX_BUILD_DEBUG_TRUE GLIBCXX_BUILD_DEBUG_FALSE EXTRA_CXX_FLAGS WERROR SECTION_FLAGS SECTION_LDFLAGS OPT_LDFLAGS LIBMATHOBJS SYMVER_MAP port_specific_symbol_files GLIBCXX_BUILD_VERSIONED_SHLIB_TRUE GLIBCXX_BUILD_VERSIONED_SHLIB_FALSE baseline_dir GLIBCXX_TEST_WCHAR_T_TRUE GLIBCXX_TEST_WCHAR_T_FALSE GLIBCXX_TEST_ABI_TRUE GLIBCXX_TEST_ABI_FALSE ATOMICITY_SRCDIR ATOMIC_WORD_SRCDIR OS_INC_SRCDIR glibcxx_prefixdir gxx_include_dir glibcxx_toolexecdir glibcxx_toolexeclibdir GLIBCXX_INCLUDES TOPLEVEL_INCLUDES OPTIMIZE_CXXFLAGS WARN_FLAGS LIBSUPCXX_PICFLAGS LIBOBJS LTLIBOBJS'
 ac_subst_files=''
 
 # Initialize some variables set by options.
@@ -1267,8 +1271,10 @@ done
 
 if test -r "$cache_file"; then
   # Some versions of bash will fail to source /dev/null (special
-  # files actually), so we avoid doing that.
-  if test -f "$cache_file"; then
+  # files actually), so we avoid doing that.  The LFN=n is needed
+  # is needed for DJGPP's bash to DTRT under Win2K/XP.  The case
+  # without LFN=n is for normal operation under DJGPP's bash.
+  if LFN=n test -f "$cache_file" || test -f "$cache_file"; then
     { echo "$as_me:$LINENO: loading cache $cache_file" >&5
 echo "$as_me: loading cache $cache_file" >&6;}
     case $cache_file in
@@ -1969,6 +1975,18 @@ INSTALL_STRIP_PROGRAM="\${SHELL} \$(install_sh) -c -s"
 
 
 
+# Add test for DJGPP
+
+
+if test `uname` = MS-DOS ; then
+  DJGPP_TRUE=
+  DJGPP_FALSE='#'
+else
+  DJGPP_TRUE='#'
+  DJGPP_FALSE=
+fi
+
+
 # Runs configure.host, finds CC, CXX, and assorted other critical bits.  Sets
 # up critical shell variables.
 
@@ -4657,8 +4675,10 @@ echo "$as_me: error: libtool configure failed" >&2;}
 # Reload cache, that may have been modified by ltconfig
 if test -r "$cache_file"; then
   # Some versions of bash will fail to source /dev/null (special
-  # files actually), so we avoid doing that.
-  if test -f "$cache_file"; then
+  # files actually), so we avoid doing that.  The LFN=n is needed
+  # is needed for DJGPP's bash to DTRT under Win2K/XP.  The case
+  # without LFN=n is for normal operation under DJGPP's bash.
+  if LFN=n test -f "$cache_file" || test -f "$cache_file"; then
     { echo "$as_me:$LINENO: loading cache $cache_file" >&5
 echo "$as_me: loading cache $cache_file" >&6;}
     case $cache_file in
@@ -94780,7 +94800,15 @@ echo "${ECHO_T}$version_specific_libs" >&6
 
   # Default case for install directory for include files.
   if test $version_specific_libs = no && test $gxx_include_dir = no; then
-    gxx_include_dir='${prefix}'/include/c++/${gcc_version}
+    #gxx_include_dir='$(prefix)'/include/c++/${gcc_version}
+    case ${build_alias} in
+        *djgpp*)
+            gxx_include_dir='$(prefix)'/include/cxx/${gcc_version}
+            ;;
+        *)
+            gxx_include_dir='$(prefix)'/include/c++/${gcc_version}
+            ;;
+    esac
   fi
 
   # Version-specific runtime libs processing.
@@ -94790,7 +94818,14 @@ echo "${ECHO_T}$version_specific_libs" >&6
     # is selected.  FIXME: these variables are misnamed, there are
     # no executables installed in _toolexecdir or _toolexeclibdir.
     if test x"$gxx_include_dir" = x"no"; then
-      gxx_include_dir='${libdir}/gcc/${host_alias}/'$gcc_version/include/c++
+      case ${host_alias} in
+           *djgpp*)
+             gxx_include_dir='${libdir}/gcc/${host_alias}/'$gcc_version/include/cxx
+             ;;
+           *)
+             gxx_include_dir='${libdir}/gcc/${host_alias}/'$gcc_version/include/c++
+           ;;
+      esac
     fi
     glibcxx_toolexecdir='${libdir}/gcc/${host_alias}'
     glibcxx_toolexeclibdir='${toolexecdir}/'$gcc_version'$(MULTISUBDIR)'
@@ -94968,6 +95003,13 @@ LIBOBJS=$ac_libobjs
 LTLIBOBJS=$ac_ltlibobjs
 
 
+if test -z "${DJGPP_TRUE}" && test -z "${DJGPP_FALSE}"; then
+  { { echo "$as_me:$LINENO: error: conditional \"DJGPP\" was never defined.
+Usually this means the macro was only invoked conditionally." >&5
+echo "$as_me: error: conditional \"DJGPP\" was never defined.
+Usually this means the macro was only invoked conditionally." >&2;}
+   { (exit 1); exit 1; }; }
+fi
 if test -z "${MAINTAINER_MODE_TRUE}" && test -z "${MAINTAINER_MODE_FALSE}"; then
   { { echo "$as_me:$LINENO: error: conditional \"MAINTAINER_MODE\" was never defined.
 Usually this means the macro was only invoked conditionally." >&5
@@ -95627,6 +95669,8 @@ s,@INSTALL_STRIP_PROGRAM@,$INSTALL_STRIP_PROGRAM,;t t
 s,@AWK@,$AWK,;t t
 s,@SET_MAKE@,$SET_MAKE,;t t
 s,@am__leading_dot@,$am__leading_dot,;t t
+s,@DJGPP_TRUE@,$DJGPP_TRUE,;t t
+s,@DJGPP_FALSE@,$DJGPP_FALSE,;t t
 s,@glibcxx_builddir@,$glibcxx_builddir,;t t
 s,@glibcxx_srcdir@,$glibcxx_srcdir,;t t
 s,@toplevel_srcdir@,$toplevel_srcdir,;t t
diff --git a/libstdc++-v3/configure.ac b/libstdc++-v3/configure.ac
index f051ddc5..86ca8455 100644
--- a/libstdc++-v3/configure.ac
+++ b/libstdc++-v3/configure.ac
@@ -60,6 +60,9 @@ fi
 #  -Wno-portability:  ...except this one, since GNU make is now required.
 AM_INIT_AUTOMAKE([1.7.6 no-define foreign no-dependencies -Wall -Wno-portability])
 
+# Add test for DJGPP
+AM_CONDITIONAL(DJGPP,test `uname` = MS-DOS )
+
 # Runs configure.host, finds CC, CXX, and assorted other critical bits.  Sets
 # up critical shell variables.
 GLIBCXX_CONFIGURE
diff --git a/libstdc++-v3/include/Makefile.in b/libstdc++-v3/include/Makefile.in
index 9d110b37..48150f86 100644
--- a/libstdc++-v3/include/Makefile.in
+++ b/libstdc++-v3/include/Makefile.in
@@ -1,4 +1,4 @@
-# Makefile.in generated by automake 1.7.8 from Makefile.am.
+# Makefile.in generated by automake 1.7.6 from Makefile.am.
 # @configure_input@
 
 # Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
@@ -77,6 +77,8 @@ CYGPATH_W = @CYGPATH_W@
 C_INCLUDE_DIR = @C_INCLUDE_DIR@
 DEBUG_FLAGS = @DEBUG_FLAGS@
 DEFS = @DEFS@
+DJGPP_FALSE = @DJGPP_FALSE@
+DJGPP_TRUE = @DJGPP_TRUE@
 ECHO_C = @ECHO_C@
 ECHO_N = @ECHO_N@
 ECHO_T = @ECHO_T@
@@ -602,8 +604,7 @@ CONFIG_CLEAN_FILES =
 depcomp =
 am__depfiles_maybe =
 DIST_SOURCES =
-DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/fragment.am \
-	Makefile.am
+DIST_COMMON = $(top_srcdir)/fragment.am Makefile.am Makefile.in
 all: all-am
 
 .SUFFIXES:
@@ -686,7 +687,7 @@ clean-generic:
 	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)
 
 distclean-generic:
-	-rm -f $(CONFIG_CLEAN_FILES)
+	-rm -f Makefile $(CONFIG_CLEAN_FILES)
 
 maintainer-clean-generic:
 	@echo "This command is intended for maintainers to use"
@@ -696,7 +697,7 @@ clean: clean-am
 clean-am: clean-generic clean-libtool mostlyclean-am
 
 distclean: distclean-am
-	-rm -f Makefile
+
 distclean-am: clean-am distclean-generic distclean-libtool
 
 dvi: dvi-am
@@ -718,7 +719,7 @@ install-man:
 installcheck-am:
 
 maintainer-clean: maintainer-clean-am
-	-rm -f Makefile
+
 maintainer-clean-am: distclean-am maintainer-clean-generic
 
 mostlyclean: mostlyclean-am
diff --git a/libstdc++-v3/libmath/Makefile.in b/libstdc++-v3/libmath/Makefile.in
index 677be699..e694f0e3 100644
--- a/libstdc++-v3/libmath/Makefile.in
+++ b/libstdc++-v3/libmath/Makefile.in
@@ -1,4 +1,4 @@
-# Makefile.in generated by automake 1.7.8 from Makefile.am.
+# Makefile.in generated by automake 1.7.6 from Makefile.am.
 # @configure_input@
 
 # Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
@@ -77,6 +77,8 @@ CYGPATH_W = @CYGPATH_W@
 C_INCLUDE_DIR = @C_INCLUDE_DIR@
 DEBUG_FLAGS = @DEBUG_FLAGS@
 DEFS = @DEFS@
+DJGPP_FALSE = @DJGPP_FALSE@
+DJGPP_TRUE = @DJGPP_TRUE@
 ECHO_C = @ECHO_C@
 ECHO_N = @ECHO_N@
 ECHO_T = @ECHO_T@
@@ -232,7 +234,7 @@ CCLD = $(CC)
 LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
 	$(AM_LDFLAGS) $(LDFLAGS) -o $@
 DIST_SOURCES = $(libmath_la_SOURCES)
-DIST_COMMON = $(srcdir)/Makefile.in Makefile.am
+DIST_COMMON = Makefile.am Makefile.in
 SOURCES = $(libmath_la_SOURCES)
 
 all: all-am
@@ -390,7 +392,7 @@ mostlyclean-generic:
 clean-generic:
 
 distclean-generic:
-	-rm -f $(CONFIG_CLEAN_FILES)
+	-rm -f Makefile $(CONFIG_CLEAN_FILES)
 
 maintainer-clean-generic:
 	@echo "This command is intended for maintainers to use"
@@ -401,7 +403,7 @@ clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
 	mostlyclean-am
 
 distclean: distclean-am
-	-rm -f Makefile
+
 distclean-am: clean-am distclean-compile distclean-generic \
 	distclean-libtool distclean-tags
 
@@ -424,7 +426,7 @@ install-man:
 installcheck-am:
 
 maintainer-clean: maintainer-clean-am
-	-rm -f Makefile
+
 maintainer-clean-am: distclean-am maintainer-clean-generic
 
 mostlyclean: mostlyclean-am
diff --git a/libstdc++-v3/libsupc++/Makefile.in b/libstdc++-v3/libsupc++/Makefile.in
index 4e2776a1..38a98243 100644
--- a/libstdc++-v3/libsupc++/Makefile.in
+++ b/libstdc++-v3/libsupc++/Makefile.in
@@ -1,4 +1,4 @@
-# Makefile.in generated by automake 1.7.8 from Makefile.am.
+# Makefile.in generated by automake 1.7.6 from Makefile.am.
 # @configure_input@
 
 # Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
@@ -77,6 +77,8 @@ CYGPATH_W = @CYGPATH_W@
 C_INCLUDE_DIR = @C_INCLUDE_DIR@
 DEBUG_FLAGS = @DEBUG_FLAGS@
 DEFS = @DEFS@
+DJGPP_FALSE = @DJGPP_FALSE@
+DJGPP_TRUE = @DJGPP_TRUE@
 ECHO_C = @ECHO_C@
 ECHO_N = @ECHO_N@
 ECHO_T = @ECHO_T@
@@ -374,8 +376,8 @@ DIST_SOURCES = $(libsupc___la_SOURCES) \
 	$(libsupc__convenience_la_SOURCES)
 HEADERS = $(glibcxxinstall_HEADERS)
 
-DIST_COMMON = $(glibcxxinstall_HEADERS) $(srcdir)/Makefile.in \
-	$(top_srcdir)/fragment.am Makefile.am
+DIST_COMMON = $(glibcxxinstall_HEADERS) $(top_srcdir)/fragment.am \
+	Makefile.am Makefile.in
 SOURCES = $(libsupc___la_SOURCES) $(libsupc__convenience_la_SOURCES)
 
 all: all-am
@@ -575,7 +577,7 @@ mostlyclean-generic:
 clean-generic:
 
 distclean-generic:
-	-rm -f $(CONFIG_CLEAN_FILES)
+	-rm -f Makefile $(CONFIG_CLEAN_FILES)
 
 maintainer-clean-generic:
 	@echo "This command is intended for maintainers to use"
@@ -586,7 +588,7 @@ clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
 	clean-toolexeclibLTLIBRARIES mostlyclean-am
 
 distclean: distclean-am
-	-rm -f Makefile
+
 distclean-am: clean-am distclean-compile distclean-generic \
 	distclean-libtool distclean-tags
 
@@ -609,7 +611,7 @@ install-man:
 installcheck-am:
 
 maintainer-clean: maintainer-clean-am
-	-rm -f Makefile
+
 maintainer-clean-am: distclean-am maintainer-clean-generic
 
 mostlyclean: mostlyclean-am
diff --git a/libstdc++-v3/po/Makefile.in b/libstdc++-v3/po/Makefile.in
index 496b2056..3646f2e4 100644
--- a/libstdc++-v3/po/Makefile.in
+++ b/libstdc++-v3/po/Makefile.in
@@ -1,4 +1,4 @@
-# Makefile.in generated by automake 1.7.8 from Makefile.am.
+# Makefile.in generated by automake 1.7.6 from Makefile.am.
 # @configure_input@
 
 # Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
@@ -77,6 +77,8 @@ CYGPATH_W = @CYGPATH_W@
 C_INCLUDE_DIR = @C_INCLUDE_DIR@
 DEBUG_FLAGS = @DEBUG_FLAGS@
 DEFS = @DEFS@
+DJGPP_FALSE = @DJGPP_FALSE@
+DJGPP_TRUE = @DJGPP_TRUE@
 ECHO_C = @ECHO_C@
 ECHO_N = @ECHO_N@
 ECHO_T = @ECHO_T@
@@ -243,8 +245,7 @@ CONFIG_CLEAN_FILES =
 depcomp =
 am__depfiles_maybe =
 DIST_SOURCES =
-DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/fragment.am \
-	Makefile.am
+DIST_COMMON = $(top_srcdir)/fragment.am Makefile.am Makefile.in
 all: all-am
 
 .SUFFIXES:
@@ -328,7 +329,7 @@ clean-generic:
 	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)
 
 distclean-generic:
-	-rm -f $(CONFIG_CLEAN_FILES)
+	-rm -f Makefile $(CONFIG_CLEAN_FILES)
 
 maintainer-clean-generic:
 	@echo "This command is intended for maintainers to use"
@@ -338,7 +339,7 @@ clean: clean-am
 clean-am: clean-generic clean-libtool mostlyclean-am
 
 distclean: distclean-am
-	-rm -f Makefile
+
 distclean-am: clean-am distclean-generic distclean-libtool
 
 dvi: dvi-am
@@ -360,7 +361,7 @@ install-man:
 installcheck-am:
 
 maintainer-clean: maintainer-clean-am
-	-rm -f Makefile
+
 maintainer-clean-am: distclean-am maintainer-clean-generic
 
 mostlyclean: mostlyclean-am
diff --git a/libstdc++-v3/scripts/create_testsuite_files b/libstdc++-v3/scripts/create_testsuite_files
index 50f2e13f..e32fca50 100755
--- a/libstdc++-v3/scripts/create_testsuite_files
+++ b/libstdc++-v3/scripts/create_testsuite_files
@@ -35,7 +35,7 @@ dlist=`echo [0-9][0-9]*`
 for d in [a-z]*; do
   test -d $d && dlist="$dlist $d"
 done
-find $dlist "(" -type f -o -type l ")" -name "*.cc" -print | sort > $tmp.1
+find $dlist "(" -type f ")" -name "*.cc" -print | sort > $tmp.1
 if test ! -s "$tmp.1"; then
   exit 1
 fi
diff --git a/libstdc++-v3/src/Makefile.am b/libstdc++-v3/src/Makefile.am
index 80534b29..7e6e6175 100644
--- a/libstdc++-v3/src/Makefile.am
+++ b/libstdc++-v3/src/Makefile.am
@@ -25,7 +25,11 @@
 include $(top_srcdir)/fragment.am
 
 # Cross compiler support.
+if DJGPP
+toolexeclib_LTLIBRARIES = libstdcxx.la
+else
 toolexeclib_LTLIBRARIES = libstdc++.la
+endif
 
 # Symbol versioning for shared libraries.
 if GLIBCXX_BUILD_VERSIONED_SHLIB
@@ -137,19 +141,41 @@ sources = \
 	${host_sources} \
 	${host_sources_extra}
 
-VPATH = $(top_srcdir)/src:$(top_srcdir)
+if DJGPP
+VPATH_VAL = $(top_srcdir)/src;$(top_srcdir)
+else
+VPATH_VAL = $(top_srcdir)/src:$(top_srcdir)
+endif
+
+VPATH = $(VPATH_VAL)
 
+if DJGPP
+libstdcxx_la_SOURCES = $(sources)
+else
 libstdc___la_SOURCES = $(sources)
+endif
 
+if DJGPP
+libstdcxx_la_LIBADD = \
+	$(top_builddir)/libmath/libmath.la \
+	$(top_builddir)/libsupc++/libsupc++convenience.la
+else
 libstdc___la_LIBADD = \
 	$(top_builddir)/libmath/libmath.la \
 	$(top_builddir)/libsupc++/libsupc++convenience.la
+endif
+
+if DJGPP
+libstdcxx_la_DEPENDENCIES = ${version_dep} $(libstdcxx_la_LIBADD)
 
+libstdcxx_la_LDFLAGS = \
+	-version-info $(libtool_VERSION) ${version_arg} -lm
+else
 libstdc___la_DEPENDENCIES = ${version_dep} $(libstdc___la_LIBADD)
 
 libstdc___la_LDFLAGS = \
 	-version-info $(libtool_VERSION) ${version_arg} -lm 
-
+endif
 
 # Use special rules for the deprecated source files so that they find
 # deprecated include files.
diff --git a/libstdc++-v3/src/Makefile.in b/libstdc++-v3/src/Makefile.in
index 88970ebc..eb7308b2 100644
--- a/libstdc++-v3/src/Makefile.in
+++ b/libstdc++-v3/src/Makefile.in
@@ -1,4 +1,4 @@
-# Makefile.in generated by automake 1.7.8 from Makefile.am.
+# Makefile.in generated by automake 1.7.6 from Makefile.am.
 # @configure_input@
 
 # Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
@@ -38,7 +38,7 @@ build_triplet = @build@
 host_triplet = @host@
 target_triplet = @target@
 
-VPATH = $(top_srcdir)/src:$(top_srcdir)
+VPATH = $(VPATH_VAL)
 ACLOCAL = @ACLOCAL@
 ALLOCATOR_H = @ALLOCATOR_H@
 ALLOCATOR_NAME = @ALLOCATOR_NAME@
@@ -78,6 +78,8 @@ CYGPATH_W = @CYGPATH_W@
 C_INCLUDE_DIR = @C_INCLUDE_DIR@
 DEBUG_FLAGS = @DEBUG_FLAGS@
 DEFS = @DEFS@
+DJGPP_FALSE = @DJGPP_FALSE@
+DJGPP_TRUE = @DJGPP_TRUE@
 ECHO_C = @ECHO_C@
 ECHO_N = @ECHO_N@
 ECHO_T = @ECHO_T@
@@ -219,9 +221,10 @@ WARN_CXXFLAGS = \
 
 # -I/-D flags to pass when compiling.
 AM_CPPFLAGS = $(GLIBCXX_INCLUDES)
+@DJGPP_FALSE@toolexeclib_LTLIBRARIES = libstdc++.la
 
 # Cross compiler support.
-toolexeclib_LTLIBRARIES = libstdc++.la
+@DJGPP_TRUE@toolexeclib_LTLIBRARIES = libstdcxx.la
 
 # Symbol versioning for shared libraries.
 @GLIBCXX_BUILD_VERSIONED_SHLIB_TRUE@version_arg = -Wl,--version-script=libstdc++-symbol.ver
@@ -294,18 +297,31 @@ sources = \
 	${host_sources} \
 	${host_sources_extra}
 
+@DJGPP_FALSE@VPATH_VAL = $(top_srcdir)/src:$(top_srcdir)
 
-libstdc___la_SOURCES = $(sources)
+@DJGPP_TRUE@VPATH_VAL = $(top_srcdir)/src;$(top_srcdir)
 
-libstdc___la_LIBADD = \
-	$(top_builddir)/libmath/libmath.la \
-	$(top_builddir)/libsupc++/libsupc++convenience.la
+@DJGPP_TRUE@libstdcxx_la_SOURCES = $(sources)
+@DJGPP_FALSE@libstdc___la_SOURCES = $(sources)
 
+@DJGPP_TRUE@libstdcxx_la_LIBADD = \
+@DJGPP_TRUE@	$(top_builddir)/libmath/libmath.la \
+@DJGPP_TRUE@	$(top_builddir)/libsupc++/libsupc++convenience.la
 
-libstdc___la_DEPENDENCIES = ${version_dep} $(libstdc___la_LIBADD)
+@DJGPP_FALSE@libstdc___la_LIBADD = \
+@DJGPP_FALSE@	$(top_builddir)/libmath/libmath.la \
+@DJGPP_FALSE@	$(top_builddir)/libsupc++/libsupc++convenience.la
 
-libstdc___la_LDFLAGS = \
-	-version-info $(libtool_VERSION) ${version_arg} -lm 
+
+@DJGPP_TRUE@libstdcxx_la_DEPENDENCIES = ${version_dep} $(libstdcxx_la_LIBADD)
+
+@DJGPP_TRUE@libstdcxx_la_LDFLAGS = \
+@DJGPP_TRUE@	-version-info $(libtool_VERSION) ${version_arg} -lm
+
+@DJGPP_FALSE@libstdc___la_DEPENDENCIES = ${version_dep} $(libstdc___la_LIBADD)
+
+@DJGPP_FALSE@libstdc___la_LDFLAGS = \
+@DJGPP_FALSE@	-version-info $(libtool_VERSION) ${version_arg} -lm 
 
 
 # Use special rules for the deprecated source files so that they find
@@ -363,6 +379,20 @@ CONFIG_HEADER = $(top_builddir)/config.h
 CONFIG_CLEAN_FILES =
 LTLIBRARIES = $(toolexeclib_LTLIBRARIES)
 
+@DJGPP_TRUE@libstdc___la_DEPENDENCIES =
+am__libstdc___la_SOURCES_DIST = allocator.cc codecvt.cc complex_io.cc \
+	ctype.cc debug.cc debug_list.cc functexcept.cc \
+	globals_locale.cc globals_io.cc ios.cc ios_failure.cc \
+	ios_init.cc ios_locale.cc limits.cc list.cc locale.cc \
+	locale_init.cc locale_facets.cc localename.cc stdexcept.cc \
+	strstream.cc tree.cc allocator-inst.cc concept-inst.cc \
+	fstream-inst.cc ext-inst.cc io-inst.cc istream-inst.cc \
+	locale-inst.cc locale-misc-inst.cc misc-inst.cc ostream-inst.cc \
+	sstream-inst.cc streambuf-inst.cc string-inst.cc \
+	valarray-inst.cc wlocale-inst.cc wstring-inst.cc atomicity.cc \
+	codecvt_members.cc collate_members.cc ctype_members.cc \
+	messages_members.cc monetary_members.cc numeric_members.cc \
+	time_members.cc basic_file.cc c++locale.cc
 am__objects_1 = atomicity.lo codecvt_members.lo collate_members.lo \
 	ctype_members.lo messages_members.lo monetary_members.lo \
 	numeric_members.lo time_members.lo
@@ -377,8 +407,24 @@ am__objects_3 = allocator.lo codecvt.lo complex_io.lo ctype.lo debug.lo \
 	ostream-inst.lo sstream-inst.lo streambuf-inst.lo \
 	string-inst.lo valarray-inst.lo wlocale-inst.lo wstring-inst.lo \
 	$(am__objects_1) $(am__objects_2)
-am_libstdc___la_OBJECTS = $(am__objects_3)
+@DJGPP_FALSE@am_libstdc___la_OBJECTS = $(am__objects_3)
 libstdc___la_OBJECTS = $(am_libstdc___la_OBJECTS)
+@DJGPP_FALSE@libstdcxx_la_DEPENDENCIES =
+am__libstdcxx_la_SOURCES_DIST = allocator.cc codecvt.cc complex_io.cc \
+	ctype.cc debug.cc debug_list.cc functexcept.cc \
+	globals_locale.cc globals_io.cc ios.cc ios_failure.cc \
+	ios_init.cc ios_locale.cc limits.cc list.cc locale.cc \
+	locale_init.cc locale_facets.cc localename.cc stdexcept.cc \
+	strstream.cc tree.cc allocator-inst.cc concept-inst.cc \
+	fstream-inst.cc ext-inst.cc io-inst.cc istream-inst.cc \
+	locale-inst.cc locale-misc-inst.cc misc-inst.cc ostream-inst.cc \
+	sstream-inst.cc streambuf-inst.cc string-inst.cc \
+	valarray-inst.cc wlocale-inst.cc wstring-inst.cc atomicity.cc \
+	codecvt_members.cc collate_members.cc ctype_members.cc \
+	messages_members.cc monetary_members.cc numeric_members.cc \
+	time_members.cc basic_file.cc c++locale.cc
+@DJGPP_TRUE@am_libstdcxx_la_OBJECTS = $(am__objects_3)
+libstdcxx_la_OBJECTS = $(am_libstdcxx_la_OBJECTS)
 
 DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
 depcomp =
@@ -386,10 +432,10 @@ am__depfiles_maybe =
 CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
 CXXLD = $(CXX)
-DIST_SOURCES = $(libstdc___la_SOURCES)
-DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/fragment.am \
-	Makefile.am
-SOURCES = $(libstdc___la_SOURCES)
+DIST_SOURCES = $(am__libstdc___la_SOURCES_DIST) \
+	$(am__libstdcxx_la_SOURCES_DIST)
+DIST_COMMON = $(top_srcdir)/fragment.am Makefile.am Makefile.in
+SOURCES = $(libstdc___la_SOURCES) $(libstdcxx_la_SOURCES)
 
 all: all-am
 
@@ -430,6 +476,8 @@ clean-toolexeclibLTLIBRARIES:
 	done
 libstdc++.la: $(libstdc___la_OBJECTS) $(libstdc___la_DEPENDENCIES) 
 	$(CXXLINK) -rpath $(toolexeclibdir) $(libstdc___la_LDFLAGS) $(libstdc___la_OBJECTS) $(libstdc___la_LIBADD) $(LIBS)
+libstdcxx.la: $(libstdcxx_la_OBJECTS) $(libstdcxx_la_DEPENDENCIES) 
+	$(CXXLINK) -rpath $(toolexeclibdir) $(libstdcxx_la_LDFLAGS) $(libstdcxx_la_OBJECTS) $(libstdcxx_la_LIBADD) $(LIBS)
 
 mostlyclean-compile:
 	-rm -f *.$(OBJEXT) core *.core
@@ -567,7 +615,7 @@ mostlyclean-generic:
 clean-generic:
 
 distclean-generic:
-	-rm -f $(CONFIG_CLEAN_FILES)
+	-rm -f Makefile $(CONFIG_CLEAN_FILES)
 
 maintainer-clean-generic:
 	@echo "This command is intended for maintainers to use"
@@ -578,7 +626,7 @@ clean-am: clean-generic clean-libtool clean-toolexeclibLTLIBRARIES \
 	mostlyclean-am
 
 distclean: distclean-am
-	-rm -f Makefile
+
 distclean-am: clean-am distclean-compile distclean-generic \
 	distclean-libtool distclean-tags
 
@@ -601,7 +649,7 @@ install-man:
 installcheck-am:
 
 maintainer-clean: maintainer-clean-am
-	-rm -f Makefile
+
 maintainer-clean-am: distclean-am maintainer-clean-generic
 
 mostlyclean: mostlyclean-am
diff --git a/libstdc++-v3/testsuite/Makefile.in b/libstdc++-v3/testsuite/Makefile.in
index 666bd749..14b90c1f 100644
--- a/libstdc++-v3/testsuite/Makefile.in
+++ b/libstdc++-v3/testsuite/Makefile.in
@@ -1,4 +1,4 @@
-# Makefile.in generated by automake 1.7.8 from Makefile.am.
+# Makefile.in generated by automake 1.7.6 from Makefile.am.
 # @configure_input@
 
 # Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
@@ -77,6 +77,8 @@ CYGPATH_W = @CYGPATH_W@
 C_INCLUDE_DIR = @C_INCLUDE_DIR@
 DEBUG_FLAGS = @DEBUG_FLAGS@
 DEFS = @DEFS@
+DJGPP_FALSE = @DJGPP_FALSE@
+DJGPP_TRUE = @DJGPP_TRUE@
 ECHO_C = @ECHO_C@
 ECHO_N = @ECHO_N@
 ECHO_T = @ECHO_T@
@@ -293,8 +295,7 @@ LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
 	$(AM_CXXFLAGS) $(CXXFLAGS)
 CXXLD = $(CXX)
 DIST_SOURCES = $(libv3test_a_SOURCES)
-DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/fragment.am \
-	Makefile.am
+DIST_COMMON = $(top_srcdir)/fragment.am Makefile.am Makefile.in
 SOURCES = $(libv3test_a_SOURCES)
 
 all: all-am
@@ -473,7 +474,7 @@ clean-generic:
 	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)
 
 distclean-generic:
-	-rm -f $(CONFIG_CLEAN_FILES)
+	-rm -f Makefile $(CONFIG_CLEAN_FILES)
 
 maintainer-clean-generic:
 	@echo "This command is intended for maintainers to use"
@@ -484,7 +485,7 @@ clean-am: clean-generic clean-libtool clean-noinstLIBRARIES \
 	mostlyclean-am
 
 distclean: distclean-am
-	-rm -f Makefile
+
 distclean-am: clean-am distclean-DEJAGNU distclean-compile \
 	distclean-generic distclean-libtool distclean-tags
 
@@ -507,7 +508,7 @@ install-man:
 installcheck-am:
 
 maintainer-clean: maintainer-clean-am
-	-rm -f Makefile
+
 maintainer-clean-am: distclean-am maintainer-clean-generic
 
 mostlyclean: mostlyclean-am
diff --git a/readme.DJGPP b/readme.DJGPP
new file mode 100644
index 00000000..98bb1a91
--- /dev/null
+++ b/readme.DJGPP
@@ -0,0 +1,293 @@
+This is the port of gcc-3.4.6 for DJGPP.
+
+
+Please read this file up to end (maybe skipping sections You don't need,
+for example You don't need to read how to build gcc-3.4.6 from sources
+if You only intend to use binary archives). Also consult DJGPP documentation
+and FAQ where needed.
+
+
+Requirements to use this binary release:
+    DJGPP-2.05 or above. Please make sure that You have latest update of
+	    djdev205.zip unless You're using a newer version (of course when
+	    such will be released).
+    binutils-2.15 or above (Earlier versions beginning with binutils-2.11
+            may work, but this is not tested, 2.9.1 or earlier will not work.
+
+Requirements to build gcc-3.4.6 from sources:
+    Long filename support. I built it in DOS session under Windows Vista (SP2).
+        Other Windows 32 bit Windows versions beginning with Win95
+        should also be OK
+    at least 128Mb of RAM for building under Win9X (Amount of available
+        DPMI memory for DOS session should be set to auto). 
+    at least DJGPP-2.03 required (Please make sure that You have latest update of
+        djdev203.zip unless You're using a newer version)
+    other GNU utilities (see below)
+
+
+Source archives
+===============
+
+Archive gcc346s2.zip contains script which modifies original gcc-3.4.6
+and sources for DJGPP. You don't need it unless You want to recreate
+GCC source archive for DJGPP. If You are using this archive and original 
+sources of gcc-3.4.6.tar.gz, then You don't need gcc346s.zip.
+    
+The source archive gcc346s.zip contains all the sources to build
+all compilers (C, C++, Objective C, GNU Fortran) and also C++
+and Fortran libraries (libstdcxx.a, libgpp.a and libg2c.a). 
+libg++ is no more supported.
+
+Most users don't need source archives at all.
+
+Binary archives
+================
+
+Binary archives are split into 5 parts:
+
+  gcc346b.zip  : The gcc.exe driver program and the C compiler.
+                 It also contains the documentation.
+
+  gpp346b.zip  : The C++ compiler and libstdcxx.a together 
+                 with needed header files. Please note that one must
+		 recompile all C++ sources built with any earlier GCC version
+
+  objc346b.zip : The Objective C compiler and libobjc.a and the needed
+                 header files.
+
+  g77346b.zip  : GNU Fortran compiler and libg2c.a and g2f.h. 
+
+  ada346b.zip  : Ada compiler (untested)
+
+
+The archive gcc346b.zip is required by all other binary packages
+
+Binary packages includes following documentation files:
+  
+  Archive gcc346b.zip:  
+	info/gcc.i* - the use and the internals of the GNU compiler
+	info/cpp.i* - documentation of the GNU C preprocessor.
+	info/cppinternals.i*  - internals of the GNU C Preprocessor.
+		(NEW: use install-info to add it to info/dir)
+  Archive gpp346b.zip:
+        gnu/gcc-3.46/libstdcxx/* - some documentation of libstdc++-v3
+		(HTML and text formats)
+  Archive g77346b.zip:
+	info/g77.i* - documentation of the GNU Fortran compiler
+
+
+Installing binaries of gcc-3.4.6
+=================================
+
+Needed archives for different programing languages
+	C 			: gcc346b.zip
+
+	C++			: gcc346b.zip, gpp346b.zip
+
+	Fortran	                : gcc346b.zip, g77346b.zip
+
+	Objective C		: gcc346b.zip, objc346b.zip
+
+	Ada			: gcc346b.zip, ada346b.zip
+
+Of course for ALL languages You also need at least binutils (bnu215b.zip
+or newer) and djdev203.zip (or newer when it will be released)
+
+Unzip all the zip files from that directory, preserving the
+directory structure.  For example:
+
+	pkunzip -d djdev203
+or
+	unzip386 djdev203
+
+
+NOTE:   For debugging GDB version 6.1 or above is recommended. 
+
+
+1. Only long filenames
+----------------------
+
+Unzip the binaries with an unzip program, which can restore the long filenames
+stored in the zip archive.
+
+2. Only short filenames
+-----------------------
+
+Unzip the binaries with an unzip program which doesn't know about long
+filenames, or if your unzipper knows about them, please follow first
+the steps described in the DJGPP FAQ in the section 
+about setting the NameNumericTail to 0 __BEFORE__!!! unzipping the archives.
+
+3. Long and short filenames at the same time
+--------------------------------------------
+
+Use an unzip program which can restore the long filenames and follow
+the instructions under 2. when the unzipper knows about long filenames.
+
+
+Note for users of C++ IO classes fstream, ifstream, ofstream
+============================================================
+
+There is a regression against earlier versions of GCC (gcc-2.95.3 and
+earlier): Member functions tellp(), tellg(), seekp() and seekg()
+are broken when stream is opened not in binary mode. If You are going
+to use any similar functions You should open stream in binary mode.
+
+Don't ask me when it will be fixed as I don't know that. I'm also 
+not sure I'll spend much time trying to fix that.
+
+
+Rebuilding gcc-3.4.6 from the sources
+======================================
+
+Requirememts
+------------
+
+-  Long filename support is required. It means You should build gcc-3.4.6
+   under Win95, Win98, WinME, Win2000 or WinXP. I myself built gcc-3.4.6
+   under WinXP.
+
+-  Much of free disk space (600Mb or more, especially if
+   You are using FAT16). 
+
+-  128Mb RAM (or more) to build gcc-3.4.6 under Win9X. DPMI memory amount 
+   for DOS session should be set to "Auto" as genattrtab requires more 
+   than 64Mb to run.	
+
+-  Many GNU packages. Please check whether You really have them:
+	bash-2.0.5b or newer
+	diffutils-2.8 
+	fileutils-4.1 or newer
+	find-4.1 or newer
+	grep-2.4 or newer
+	grep-3.1.1 or newer
+	make-3.79.1 or newer
+	sed302b.zip or newer
+	sh-utils-2.0.11 or newer
+	textutils-2.0 or newer
+	texinfo-4.6 or newer (You will not get info files with older versions)
+	tar-1.1.2
+	binutils-2.22
+	working GNU C compiler (perhaps not earlier than gcc-2.8, gcc-4.0.0 or
+                 newer may not work). 
+
+   If You modify some source files You may also need
+	autoconf-2.57 or above
+	automake-1.76 or above
+	(for some directories also old autoconf-2.13 and automake-1.5
+        may be needed)
+	
+   You need autoconf and automake also if You are using gcc346s2.zip.
+   However it's normally not needed for most users who builds gcc-3.4.6 from
+   contents of gcc346s.zip.
+
+   Usually newer versions of these packages should also work unless
+   otherwise stated above. Older versions may work in some cases, but that
+   is not tested
+
+-  INFO-ZIP binary (compiled with DJGPP v2!!!) is needed for using build.sh 
+   to create binary distrubution archives. There is no problems to compile 
+   it. See http://www.info-zip.org for additional informtion
+   about INFO-ZIP. You can find DJGPP compiled binary there. 
+
+-  Working DJGPP installation of course:
+	latest update of DJGPP-2.05
+   	binutils-2.22 or above, 
+	working gcc installation (perhaps gcc-2.95 or above, You need
+                working Ada compiler to build Ada compiler)
+
+-  You should have sh.exe in DJGPP bin directory as symbolic link to  
+   bash.exe (type 'ln -s bash.exe sh.exe' in that directory)
+
+
+Extracting the sources
+----------------------
+
+At first you should unzip the archive gcc346s.zip. The sources are _NOT_
+the complete sources like the original gcc-3.4.6 distribution. I have
+removed many files to save disk space which are not needed for the DJGPP
+port. However I left configuration of other machines in to make archives
+usable to build cross-to-DJGPP compilers and DJGPP hosted cross-compilers
+(I haven't tested it).
+
+
+Compiling gcc
+-------------
+
+Directory gnu/gcc-3.4.6 contains all sources of gcc-3.4.6
+
+Sources are NOT configured. 
+	
+Change to directory gnu/build.gcc and configure sources
+by running script djconfig.sh. 
+
+	sh djconfig.sh
+
+When this is done You can build gcc-3.4.6 by running script djmake.sh
+Under Win9X You'll have to restart it some times when it will crash 
+due to Win9X DPMI descriptor leaks. You may use redir to get output in file.
+
+	sh djmake.sh bootstrap
+
+After that build Ada tools and libraries (if Ada support is being built):
+
+	sh djmake.sh -C gcc gnatlib_and_tools
+
+When this sucessfully ends run script djinsttmp.sh which installs
+all into directory gnu/install.gcc
+
+After that change to this directory and run script makepkg.sh
+to create binary distribution packages
+	
+
+Installing newly compiled gcc
+-----------------------------
+
+It's recommended to install binary packages which are generated 
+by makepkg.sh
+
+
+
+Available resources
+===================
+
+See following URL for additional information:
+gcc:		  http://gcc.gnu.org
+
+
+
+Reporting bugs
+==============
+
+If you found a bug in gcc-3.4.6 (gcc, g77, libstdc++, etc) please report it to 
+the GCC bug adresses and _NOT_ (or at least not only) in the DJGPP news group. 
+
+But if you think you found a bug in the DJGPP related things, then please 
+report it in comp.os.msdos.djgpp (the news group) or mail it to 
+djgpp@delorie.com, which is the gateway to the news group.
+
+Some possible situations:
+  - gcc says 'Internal compiler error' (or something similar)
+       more likely it is error of gcc if it is reproducible. It would 
+       be nice to test on some other system (e.g. Linux) and also with 
+       different version of compiler if possible and submit report to 
+       gcc bug address. 
+  - gcc crashes or freezes. 
+       In this situation it's hard to guess where is the problem. It may be
+       problem with gcc itself but it may be also DJGPP specific one.
+
+Please email me directly only in rare cases, if you think it is only of
+interest to me, since I'll see the reports in DJGPP mailing list.
+
+
+Thanks to
+=========
+
+To all who have contributed new features, test results, bugfixes to GCC
+(see http://gcc.gnu.org/thanks.html) and also who helped with DJGPP port of 
+gcc-3.4.6
+
+
+Have fun with gcc
+
+Andris Pavenis <andris.pavenis@iki.fi>
