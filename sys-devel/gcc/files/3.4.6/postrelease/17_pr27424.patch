diff --git a/gcc/cp/pt.c b/gcc/cp/pt.c
index 38f5804f..8e825a7a 100644
--- a/gcc/cp/pt.c
+++ b/gcc/cp/pt.c
@@ -3658,11 +3658,8 @@ convert_template_argument (tree parm,
                            tree in_decl)
 {
   tree val;
-  tree inner_args;
   int is_type, requires_type, is_tmpl_type, requires_tmpl_type;
   
-  inner_args = INNERMOST_TEMPLATE_ARGS (args);
-
   if (TREE_CODE (arg) == TREE_LIST 
       && TREE_CODE (TREE_VALUE (arg)) == OFFSET_REF)
     {  
@@ -3750,7 +3747,7 @@ convert_template_argument (tree parm,
 
 	      if (coerce_template_template_parms (parmparm, argparm,
 						  complain, in_decl,
-						  inner_args))
+						  args))
 		{
 		  val = arg;
 		  
diff --git a/gcc/testsuite/g++.dg/template/ttp20.C b/gcc/testsuite/g++.dg/template/ttp20.C
new file mode 100644
index 00000000..0d1784c9
--- /dev/null
+++ b/gcc/testsuite/g++.dg/template/ttp20.C
@@ -0,0 +1,11 @@
+// PR c++/27424
+// Bug: failing to substitute the 'int' into C
+
+template<typename T> struct A
+{
+    template<template<T> class> struct B {};
+    template<T> struct C;
+    B<C> b;
+};
+
+A<int> a;
