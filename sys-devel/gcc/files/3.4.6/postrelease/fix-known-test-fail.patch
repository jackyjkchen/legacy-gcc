diff --git a/gcc/testsuite/g++.old-deja/g++.law/weak.C b/gcc/testsuite/g++.old-deja/g++.law/weak.C
index ea07afe4..c4173b02 100644
--- a/gcc/testsuite/g++.old-deja/g++.law/weak.C
+++ b/gcc/testsuite/g++.old-deja/g++.law/weak.C
@@ -1,5 +1,5 @@
 // { dg-do link { target i?86-*-linux* x86_64-*-linux* } }
-// { dg-options "-static" }
+// { dg-options "-static-libstdc++ -static-libgcc" }
 // Bug: g++ fails to instantiate operator<<.
 
 // libc-5.4.xx has __IO_putc in its static C library, which can conflict
diff --git a/gcc/testsuite/g++.old-deja/g++.other/init5.C b/gcc/testsuite/g++.old-deja/g++.other/init5.C
index c0706002..a510968c 100644
--- a/gcc/testsuite/g++.old-deja/g++.other/init5.C
+++ b/gcc/testsuite/g++.old-deja/g++.other/init5.C
@@ -1,4 +1,4 @@
-// { dg-do run { xfail *-*-* } }
+// { dg-do run { xfail *-*-gnulibc1 } }
 // Objects must be destructed in decreasing cnt order
 // Original test attributed to James Kanze <jkanze@otelo.ibmmail.com>
 
diff --git a/gcc/testsuite/gcc.dg/20030711-1.c b/gcc/testsuite/gcc.dg/20030711-1.c
index 25f515cb..391ca059 100644
--- a/gcc/testsuite/gcc.dg/20030711-1.c
+++ b/gcc/testsuite/gcc.dg/20030711-1.c
@@ -5,6 +5,10 @@
 #include <sys/mman.h>
 #include <stdlib.h>
 
+#ifndef MAP_FAILED
+#define MAP_FAILED ((void *) -1)
+#endif
+
 void __attribute__((noinline)) test (const char *p)
 {
   if (__builtin_strncmp (p, "abcdefghijklmnopq", 17) == 0)
diff --git a/gcc/testsuite/gcc.dg/special/gcsec-1.c b/gcc/testsuite/gcc.dg/special/gcsec-1.c
index f2a63d1b..c96e7497 100644
--- a/gcc/testsuite/gcc.dg/special/gcsec-1.c
+++ b/gcc/testsuite/gcc.dg/special/gcsec-1.c
@@ -3,8 +3,9 @@
 /* { dg-do run { xfail rs6000-*-aix* powerpc*-*-aix* } } */
 /* { dg-require-gc-sections "" } */
 
-/* { dg-options "-ffunction-sections -fdata-sections -Wl,--gc-sections -static" } */
-/* { dg-options "-ffunction-sections -fdata-sections -Wl,--gc-sections -static" { target native } } */
+/* { dg-options "-ffunction-sections -fdata-sections -Wl,--gc-sections -static-libgcc" } */
+/* { dg-options "-ffunction-sections -fdata-sections -Wl,--gc-sections -static-libgcc" { target native } } */
+/* { dg-options "-ffunction-sections -fdata-sections -Wl,--gc-sections" { target *-*-netware* } } */
 
 #include <stdlib.h>
 
diff --git a/libstdc++-v3/testsuite/22_locale/locale/cons/12658_thread.cc b/libstdc++-v3/testsuite/22_locale/locale/cons/12658_thread.cc
index 8c39b505..f3baaeb9 100644
--- a/libstdc++-v3/testsuite/22_locale/locale/cons/12658_thread.cc
+++ b/libstdc++-v3/testsuite/22_locale/locale/cons/12658_thread.cc
@@ -2,7 +2,7 @@
 // { dg-options "-pthread" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* } }
 // { dg-options "-pthreads" { target *-*-solaris* } }
 
-// Copyright (C) 2004 Free Software Foundation
+// Copyright (C) 2004, 2005 Free Software Foundation
 //
 // This file is part of the GNU ISO C++ Library.  This library is free
 // software; you can redistribute it and/or modify it under the
@@ -17,16 +17,15 @@
 
 // You should have received a copy of the GNU General Public License along
 // with this library; see the file COPYING.  If not, write to the Free
-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,
 // USA.
 
 // 22.1.1.2 locale constructors and destructors [lib.locale.cons]
 
-// { dg-do run { xfail *-*-* } }
-
 #include <locale>
 #include <pthread.h>
- 
+#include <testsuite_hooks.h>
+
 const int max_thread_count = 20;
 //const int max_loop_count = 1000000; // orig value
 const int max_loop_count = 100000;
diff --git a/libstdc++-v3/testsuite/27_io/fpos/14320-1.cc b/libstdc++-v3/testsuite/27_io/fpos/14320-1.cc
index 71a4d7a5..1e492d06 100644
--- a/libstdc++-v3/testsuite/27_io/fpos/14320-1.cc
+++ b/libstdc++-v3/testsuite/27_io/fpos/14320-1.cc
@@ -15,12 +15,12 @@
 
 // You should have received a copy of the GNU General Public License along
 // with this library; see the file COPYING.  If not, write to the Free
-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,
 // USA.
 
 // 27.4.3 fpos
 
-// { dg-do run { xfail *-*-* } }
+// { dg-do run }
 
 #include <typeinfo>
 #include <limits>
@@ -36,6 +36,11 @@ void test01()
   typedef istreambuf_iterator<char>::difference_type Distance;
 
   bool found = false;
+  // The C++ standard didn't originally have "long long", however that
+  // type will be in the C++0x standard and testing for it allows
+  // ilp32 targets to pass this test when `Distance' is 64 bits.
+  if (typeid(Distance) == typeid(long long int))
+    found = true;
   if (typeid(Distance) == typeid(long int))
     found = true;
   if (typeid(Distance) == typeid(int))
