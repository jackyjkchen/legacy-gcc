diff --git a/gcc/cp/rtti.c b/gcc/cp/rtti.c
index 337c6be9..e8d52f81 100644
--- a/gcc/cp/rtti.c
+++ b/gcc/cp/rtti.c
@@ -216,7 +216,7 @@ get_tinfo_decl_dynamic (tree exp)
   /* Peel off cv qualifiers.  */
   type = TYPE_MAIN_VARIANT (type);
   
-  if (!VOID_TYPE_P (type))
+  if (CLASS_TYPE_P (type))
     type = complete_type_or_else (type, exp);
   
   if (!type)
@@ -407,7 +407,7 @@ get_typeid (tree type)
      that is the operand of typeid are always ignored.  */
   type = TYPE_MAIN_VARIANT (type);
 
-  if (!VOID_TYPE_P (type))
+  if (CLASS_TYPE_P (type))
     type = complete_type_or_else (type, NULL_TREE);
   
   if (!type)
diff --git a/gcc/testsuite/g++.dg/rtti/typeid5.C b/gcc/testsuite/g++.dg/rtti/typeid5.C
new file mode 100644
index 00000000..ef769ce5
--- /dev/null
+++ b/gcc/testsuite/g++.dg/rtti/typeid5.C
@@ -0,0 +1,13 @@
+// PR c++/29928
+// { dg-do compile }
+
+#include <typeinfo>
+
+struct S;
+
+void f()
+{ 
+  const std::type_info& info1 = typeid(int []);
+  const std::type_info& info2 = typeid(S [3]);
+  const std::type_info& info3 = typeid(S []);
+}
