diff --git a/gcc/combine.c b/gcc/combine.c
index 72988a890..60b125c17 100644
--- a/gcc/combine.c
+++ b/gcc/combine.c
@@ -13915,6 +13915,11 @@ distribute_notes (rtx notes, rtx_insn *from_insn, rtx_insn *i3, rtx_insn *i2,
 					    NULL_RTX, NULL_RTX, NULL_RTX);
 			  distribute_links (LOG_LINKS (tem_insn));
 
+			  unsigned int regno = REGNO (XEXP (note, 0));
+			  reg_stat_type *rsp = &reg_stat[regno];
+			  if (rsp->last_set == tem_insn)
+			    record_value_for_reg (XEXP (note, 0), NULL, NULL_RTX);
+
 			  SET_INSN_DELETED (tem_insn);
 			  if (tem_insn == i2)
 			    i2 = NULL;
diff --git a/gcc/testsuite/gcc.c-torture/execute/pr79388.c b/gcc/testsuite/gcc.c-torture/execute/pr79388.c
new file mode 100644
index 000000000..07a75c9ae
--- /dev/null
+++ b/gcc/testsuite/gcc.c-torture/execute/pr79388.c
@@ -0,0 +1,23 @@
+/* PR rtl-optimization/79388 */
+/* { dg-additional-options "-fno-tree-coalesce-vars" } */
+
+unsigned int a, c;
+
+__attribute__ ((noinline, noclone)) unsigned int
+foo (unsigned int p)
+{
+  p |= 1;
+  p &= 0xfffe;
+  p %= 0xffff;
+  c = p;
+  return a + p;
+}
+
+int
+main (void)
+{
+  int x = foo (6);
+  if (x != 6)
+    __builtin_abort();
+  return 0;
+}
diff --git a/gcc/testsuite/gcc.c-torture/execute/pr79450.c b/gcc/testsuite/gcc.c-torture/execute/pr79450.c
new file mode 100644
index 000000000..5ba710166
--- /dev/null
+++ b/gcc/testsuite/gcc.c-torture/execute/pr79450.c
@@ -0,0 +1,22 @@
+/* PR rtl-optimization/79450 */
+
+unsigned int
+foo (unsigned char x, unsigned long long y)
+{
+  do
+    {
+      x &= !y;
+      x %= 24;
+    }
+  while (x < y);
+  return x + y;
+}
+
+int
+main (void)
+{
+  unsigned int x = foo (1, 0);
+  if (x != 1)
+    __builtin_abort ();
+  return 0;
+}
