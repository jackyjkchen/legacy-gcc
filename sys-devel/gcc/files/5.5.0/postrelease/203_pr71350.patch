diff --git a/gcc/cp/decl.c b/gcc/cp/decl.c
index bb9433718..e94377c2b 100644
--- a/gcc/cp/decl.c
+++ b/gcc/cp/decl.c
@@ -5770,8 +5770,10 @@ reshape_init_r (tree type, reshape_iter *d, bool first_initializer_p,
 	    }
 	}
 
-      warning (OPT_Wmissing_braces, "missing braces around initializer for %qT",
-	       type);
+      if (complain & tf_warning)
+	warning (OPT_Wmissing_braces,
+		 "missing braces around initializer for %qT",
+		 type);
     }
 
   /* Dispatch to specialized routines.  */
diff --git a/gcc/testsuite/g++.dg/cpp0x/decltype66.C b/gcc/testsuite/g++.dg/cpp0x/decltype66.C
new file mode 100644
index 000000000..76ff1e2e7
--- /dev/null
+++ b/gcc/testsuite/g++.dg/cpp0x/decltype66.C
@@ -0,0 +1,19 @@
+// PR c++/71350
+// { dg-do compile { target c++11 } }
+
+template<typename T, unsigned int N>
+struct Array
+{
+    T data[N];
+};
+
+template<typename T>
+struct Foo
+{
+    int operator[](const Array<int, 2>& i) const { return 0; }
+    auto bar() -> decltype((*this)[{1,2}] * 0) {
+      return *this;		// { dg-error "cannot convert" }
+    }
+};
+
+template struct Foo<int>;
