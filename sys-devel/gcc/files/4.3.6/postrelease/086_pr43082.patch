diff --git a/gcc/c-typeck.c b/gcc/c-typeck.c
index 5c88d311..ff58223a 100644
--- a/gcc/c-typeck.c
+++ b/gcc/c-typeck.c
@@ -8653,6 +8653,10 @@ c_objc_common_truthvalue_conversion (tree expr)
       error ("used union type value where scalar is required");
       return error_mark_node;
 
+    case VOID_TYPE:
+      error ("void value not ignored as it ought to be");
+      return error_mark_node;
+
     case FUNCTION_TYPE:
       gcc_unreachable ();
 
diff --git a/gcc/testsuite/gcc.dg/pr43082.c b/gcc/testsuite/gcc.dg/pr43082.c
new file mode 100644
index 00000000..a6e00461
--- /dev/null
+++ b/gcc/testsuite/gcc.dg/pr43082.c
@@ -0,0 +1,10 @@
+/* Test that the compiler does not crash when void expressions are
+   found inside conditional expressions.  PR c/43082.  */
+/* { dg-do compile } */
+
+void
+foo (int x)
+{
+  if (x ? (void)(0) : (void)(1)) /* { dg-error "void value not ignored as it ought to be" } */
+    ;
+}
