diff --git a/gcc/fortran/trans-intrinsic.c b/gcc/fortran/trans-intrinsic.c
index 8e899897..219e0f2b 100644
--- a/gcc/fortran/trans-intrinsic.c
+++ b/gcc/fortran/trans-intrinsic.c
@@ -954,6 +954,8 @@ gfc_conv_intrinsic_bound (gfc_se * se, gfc_expr * expr, int upper)
 	  size = fold_build2 (MINUS_EXPR, gfc_array_index_type, ubound, lbound);
 	  se->expr = fold_build2 (PLUS_EXPR, gfc_array_index_type, size,
 				  gfc_index_one_node);
+	  se->expr = fold_build2 (MAX_EXPR, gfc_array_index_type, se->expr,
+				  gfc_index_zero_node);
 	}
       else
 	se->expr = gfc_index_one_node;
diff --git a/gcc/testsuite/gfortran.dg/bound_3.f90 b/gcc/testsuite/gfortran.dg/bound_3.f90
new file mode 100644
index 00000000..7b1696d0
--- /dev/null
+++ b/gcc/testsuite/gfortran.dg/bound_3.f90
@@ -0,0 +1,20 @@
+! { dg-do run }
+!
+  call s(1,0)
+  call s(2,0)
+  call s(3,0)
+  call s(4,0)
+  call s(5,1)
+  call s(6,2)
+  call s(7,3)
+contains
+  subroutine s(n,m)
+    implicit none
+    integer n, m
+    real x(10)
+    if (any (lbound(x(5:n)) /= 1)) call abort
+    if (lbound(x(5:n),1) /= 1) call abort
+    if (any (ubound(x(5:n)) /= m)) call abort
+    if (ubound(x(5:n),1) /= m) call abort
+  end subroutine
+end program
