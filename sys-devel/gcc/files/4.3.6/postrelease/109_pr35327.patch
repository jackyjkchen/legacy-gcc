diff --git a/gcc/cp/decl.c b/gcc/cp/decl.c
index ebe24ade..bfda60a7 100644
--- a/gcc/cp/decl.c
+++ b/gcc/cp/decl.c
@@ -8101,17 +8101,17 @@ grokdeclarator (const cp_declarator *declarator,
 		set_no_warning = true;
 	      }
 
-	    /* Warn about some types functions can't return.  */
+	    /* Error about some types functions can't return.  */
 
 	    if (TREE_CODE (type) == FUNCTION_TYPE)
 	      {
 		error ("%qs declared as function returning a function", name);
-		type = integer_type_node;
+		return error_mark_node;
 	      }
 	    if (TREE_CODE (type) == ARRAY_TYPE)
 	      {
 		error ("%qs declared as function returning an array", name);
-		type = integer_type_node;
+		return error_mark_node;
 	      }
 
 	    /* Pick up type qualifiers which should be applied to `this'.  */
diff --git a/gcc/testsuite/g++.dg/parse/pr35327.C b/gcc/testsuite/g++.dg/parse/pr35327.C
new file mode 100644
index 00000000..746dbbca
--- /dev/null
+++ b/gcc/testsuite/g++.dg/parse/pr35327.C
@@ -0,0 +1,8 @@
+// PR c++/35327
+
+struct A
+{
+  A(int)(); // { dg-error "declared" }
+};
+
+template<int> void foo(bool b, A a) { b ? a : 0; } // { dg-error "no match" }
