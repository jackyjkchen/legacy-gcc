diff --git a/gcc/cp/tree.c b/gcc/cp/tree.c
index ea1b81e0..8d802a1e 100644
--- a/gcc/cp/tree.c
+++ b/gcc/cp/tree.c
@@ -75,7 +75,8 @@ lvalue_p_1 (tree ref,
     return lvalue_p_1 (TREE_OPERAND (ref, 0),
                        treat_class_rvalues_as_lvalues);
 
-  if (TREE_CODE (TREE_TYPE (ref)) == REFERENCE_TYPE)
+  if (TREE_TYPE (ref)
+      && TREE_CODE (TREE_TYPE (ref)) == REFERENCE_TYPE)
     {
       /* unnamed rvalue references are rvalues */
       if (TYPE_REF_IS_RVALUE (TREE_TYPE (ref))
diff --git a/gcc/testsuite/g++.dg/pr47589.C b/gcc/testsuite/g++.dg/pr47589.C
new file mode 100644
index 00000000..6bc3c803
--- /dev/null
+++ b/gcc/testsuite/g++.dg/pr47589.C
@@ -0,0 +1,26 @@
+// PR c++/47589
+// { dg-do compile }
+
+struct F
+{
+    typedef void(*Cb)();
+
+    F(Cb);
+};
+
+struct C
+{
+    template<class D> static void f();
+};
+
+template<class D>
+struct TF : F
+{
+    TF() : F(C::f<D>) { }
+};
+
+struct DTC : TF<DTC>
+{
+    DTC() { }
+};
+
