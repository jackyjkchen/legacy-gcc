diff --git a/gcc/cp/pt.c b/gcc/cp/pt.c
index ad4e06a4..938b32d0 100644
--- a/gcc/cp/pt.c
+++ b/gcc/cp/pt.c
@@ -5162,7 +5162,12 @@ coerce_template_parameter_pack (tree parms,
             TREE_VEC_ELT (packed_types, arg_idx - parm_idx);
         }
 
-      if (arg != error_mark_node)
+      if (arg == error_mark_node)
+	{
+	  if (complain & tf_error)
+	    error ("template argument %d is invalid", arg_idx + 1);
+	}
+      else
 	arg = convert_template_argument (actual_parm, 
 					 arg, new_args, complain, parm_idx,
 					 in_decl);
diff --git a/gcc/testsuite/g++.dg/cpp0x/pr39639.C b/gcc/testsuite/g++.dg/cpp0x/pr39639.C
index abd3bcf0..2622f5c2 100644
--- a/gcc/testsuite/g++.dg/cpp0x/pr39639.C
+++ b/gcc/testsuite/g++.dg/cpp0x/pr39639.C
@@ -2,6 +2,7 @@
 // Origin: PR c++/39639
 // { dg-options "-std=c++0x" }
 // { dg-do "compile" }
+// { dg-prune-output "template argument 1 is invalid" }
 
 template <class... Types>
 struct S
diff --git a/gcc/testsuite/g++.dg/cpp0x/variadic126.C b/gcc/testsuite/g++.dg/cpp0x/variadic126.C
new file mode 100644
index 00000000..3b52d088
--- /dev/null
+++ b/gcc/testsuite/g++.dg/cpp0x/variadic126.C
@@ -0,0 +1,9 @@
+// PR c++/47220
+// { dg-do compile }
+// { dg-options "-std=c++0x" }
+
+template < typename ... > struct A;
+
+struct B : A <			// { dg-error "invalid" }
+{
+};
