diff --git a/gcc/cp/parser.c b/gcc/cp/parser.c
index 5fc93f5f..2e305774 100644
--- a/gcc/cp/parser.c
+++ b/gcc/cp/parser.c
@@ -7600,6 +7600,10 @@ cp_parser_already_scoped_statement (cp_parser* parser)
       /* Avoid calling cp_parser_compound_statement, so that we
 	 don't create a new scope.  Do everything else by hand.  */
       cp_parser_require (parser, CPP_OPEN_BRACE, "`{'");
+      /* If the next keyword is `__label__' we have a label declaration.  */
+      while (cp_lexer_next_token_is_keyword (parser->lexer, RID_LABEL))
+	cp_parser_label_declaration (parser);
+      /* Parse an (optional) statement-seq.  */
       cp_parser_statement_seq_opt (parser, NULL_TREE);
       cp_parser_require (parser, CPP_CLOSE_BRACE, "`}'");
     }
diff --git a/gcc/testsuite/g++.dg/ext/label12.C b/gcc/testsuite/g++.dg/ext/label12.C
new file mode 100644
index 00000000..2585318b
--- /dev/null
+++ b/gcc/testsuite/g++.dg/ext/label12.C
@@ -0,0 +1,39 @@
+// PR c++/39028
+// { dg-do compile }
+// Origin: Stephan Springl <springl@bfw-online.de>
+
+void
+f ()
+{
+  int i;
+  for (i = 0; i < 2; i++)
+    {
+      __label__ l;
+      goto l;
+      l:;
+    }
+  while (i++ < 5)
+    {
+      __label__ l;
+      goto l;
+      l:;
+    }
+  do
+    {
+      __label__ l;
+      goto l;
+      l:;
+    }
+  while (i++ < 8);
+  if (1)
+    {
+      __label__ l;
+      goto l;
+      l:;
+    }
+  {
+    __label__ l;
+    goto l;
+    l:;
+  }
+}
