diff --git a/gcc/Makefile.in b/gcc/Makefile.in
index b63bd7f..c64a207 100644
--- a/gcc/Makefile.in
+++ b/gcc/Makefile.in
@@ -65,9 +65,9 @@ BOOT_LANGUAGES = c @all_boot_languages@
 # TCFLAGS is used for compilations with the GCC just built.
 XCFLAGS =
 TCFLAGS =
-CFLAGS = -g
-STAGE1_CFLAGS = -g @stage1_cflags@
-BOOT_CFLAGS = -g -O2
+CFLAGS =
+STAGE1_CFLAGS = @stage1_cflags@
+BOOT_CFLAGS = -O2
 
 # Flags to determine code coverage. When coverage is disabled, this will
 # contain the optimization flags, as you normally want code coverage
diff --git a/gcc/ada/5wsystem.ads b/gcc/ada/5wsystem.ads
index f828e41..a02adda 100644
--- a/gcc/ada/5wsystem.ads
+++ b/gcc/ada/5wsystem.ads
@@ -187,7 +187,7 @@ private
 
       Interrupt_Priority         => 15);
 
-   pragma Linker_Options ("-Wl,--stack=0x2000000");
+   pragma Link_With ("-Xlinker --stack=0x2000000");
    --  This is used to change the default stack (32 MB) size for non tasking
    --  programs. We change this value for GNAT on Windows here because the
    --  binutils on this platform have switched to a too low value for Ada
diff --git a/gcc/ada/Makefile.in b/gcc/ada/Makefile.in
index f710552..4057a7e 100644
--- a/gcc/ada/Makefile.in
+++ b/gcc/ada/Makefile.in
@@ -1610,7 +1610,8 @@ gnattools2: ../stamp-tools
 	  ../../gnatchop$(exeext) ../../gnat$(exeext) ../../gnatkr$(exeext) \
 	  ../../gnatls$(exeext) ../../gnatprep$(exeext) \
 	  ../../gnatpsta$(exeext) ../../gnatxref$(exeext) \
-          ../../gnatfind$(exeext) ../../gnatname$(exeext)
+          ../../gnatfind$(exeext) ../../gnatname$(exeext) \
+	  ../../gnatdll$(exeext)
 
 # These tools are only built for the native version.
 gnattools3: ../stamp-tools
@@ -2069,15 +2070,18 @@ a-except.o  : a-except.adb a-except.ads
 s-assert.o  : s-assert.adb s-assert.ads a-except.ads
 	$(ADAC) -c $(ALL_ADAFLAGS) $(FORCE_DEBUG_ADAFLAGS) -O2 \
 	 $(ADA_INCLUDES) $<
+# -O2 triggers an error in verify_flow_info (when checks enabled)
+g-spipat.o : g-spipat.adb g-spipat.ads
+	$(CC) -c $(ALL_ADAFLAGS) -O1 $(ADA_INCLUDES) $<
 
 mdll.o : mdll.adb mdll.ads mdll-file.ads mdll-utl.ads
-	$(CC) -c $(ALL_ADAFLAGS) -O2 $(ADA_INCLUDES) $< 
+	$(CC) -c $(ALL_ADAFLAGS) -O2 $(ADA_INCLUDES) $<
 
 mdll-fil.o : mdll-fil.adb mdll.ads mdll-fil.ads
-	$(CC) -c $(ALL_ADAFLAGS) -O2 $(ADA_INCLUDES) $< 
+	$(CC) -c $(ALL_ADAFLAGS) -O2 $(ADA_INCLUDES) $<
 
 mdll-utl.o : mdll-utl.adb mdll.ads mdll-utl.ads sdefault.ads types.ads
-	$(CC) -c $(ALL_ADAFLAGS) -O2 $(ADA_INCLUDES) $< 
+	$(CC) -c $(ALL_ADAFLAGS) -O2 $(ADA_INCLUDES) $<
   
 # force debugging information and no optimization on s-memory.o so that it 
 # is always possible to set breakpoint on __gnat_malloc and __gnat_free
diff --git a/gcc/ada/adadecode.c b/gcc/ada/adadecode.c
index 4e79513..9d768e7 100644
--- a/gcc/ada/adadecode.c
+++ b/gcc/ada/adadecode.c
@@ -7,7 +7,7 @@
  *                                                                          *
  *                          C Implementation File                           *
  *                                                                          *
- *           Copyright (C) 2001-2002, Free Software Foundation, Inc.        *
+ *           Copyright (C) 2001-2003, Free Software Foundation, Inc.        *
  *                                                                          *
  * GNAT is free software;  you can  redistribute it  and/or modify it under *
  * terms of the  GNU General Public License as published  by the Free Soft- *
@@ -43,8 +43,12 @@
 #include "adadecode.h"
 
 static void add_verbose	PARAMS ((const char *, char *));
-static int has_prefix	PARAMS ((char *, const char *));
-static int has_suffix	PARAMS ((char *, const char *));
+static int has_prefix	PARAMS ((const char *, const char *));
+static int has_suffix	PARAMS ((const char *, const char *));
+
+/* This is a safe version of strcpy that can be used with overlapped
+   pointers. Does nothing if s2 <= s1.  */
+static void ostrcpy (char *s1, char *s2);
 
 /* Set to nonzero if we have written any verbose info.  */
 static int verbose_info;
@@ -66,7 +70,7 @@ static void add_verbose (text, ada_name)
 
 static int
 has_prefix (name, prefix)
-     char *name;
+     const char *name;
      const char *prefix;
 {
   return strncmp (name, prefix, strlen (prefix)) == 0;
@@ -76,7 +80,7 @@ has_prefix (name, prefix)
 
 static int
 has_suffix (name, suffix)
-     char *name;
+     const char *name;
      const char *suffix;
 {
   int nlen = strlen (name);
@@ -85,6 +89,18 @@ has_suffix (name, suffix)
   return nlen > slen && strncmp (name + nlen - slen, suffix, slen) == 0;
 }
 
+/* Safe overlapped pointers version of strcpy.  */
+
+static void
+ostrcpy (char *s1, char *s2)
+{
+  if (s2 > s1)
+    {
+      while (*s2) *s1++ = *s2++;
+      *s1 = '\0';
+    }
+}
+
 /* This function will return the Ada name from the encoded form.
    The Ada coding is done in exp_dbug.ads and this is the inverse function.
    see exp_dbug.ads for full encoding rules, a short description is added
@@ -143,16 +159,14 @@ __gnat_decode (coded_name, ada_name, verbose)
   int in_task = 0;
   int body_nested = 0;
 
-  /* Copy the coded name into the ada name string, the rest of the code will
-     just replace or add characters into the ada_name.  */
-  strcpy (ada_name, coded_name);
-
   /* Check for library level subprogram.  */
-  if (has_prefix (ada_name, "_ada_"))
+  if (has_prefix (coded_name, "_ada_"))
     {
-      strcpy (ada_name, ada_name + 5);
+      strcpy (ada_name, coded_name + 5);
       lib_subprog = 1;
     }
+  else
+    strcpy (ada_name, coded_name);
 
   /* Check for task body.  */
   if (has_suffix (ada_name, "TKB"))
@@ -192,7 +206,7 @@ __gnat_decode (coded_name, ada_name, verbose)
 
     while ((tktoken = (char *) strstr (ada_name, "TK__")) != NULL)
       {
-	strcpy (tktoken, tktoken + 2);
+	ostrcpy (tktoken, tktoken + 2);
 	in_task = 1;
       }
   }
@@ -230,7 +244,7 @@ __gnat_decode (coded_name, ada_name, verbose)
 	if (ada_name[k] == '_' && ada_name[k+1] == '_')
 	  {
 	    ada_name[k] = '.';
-	    strcpy (ada_name + k + 1, ada_name + k + 2);
+	    ostrcpy (ada_name + k + 1, ada_name + k + 2);
 	    len = len - 1;
 	  }
 	k++;
@@ -260,7 +274,7 @@ __gnat_decode (coded_name, ada_name, verbose)
 
 	    if (codedlen > oplen)
 	      /* We shrink the space.  */
-	      strcpy (optoken, optoken + codedlen - oplen);
+	      ostrcpy (optoken, optoken + codedlen - oplen);
 	    else if (oplen > codedlen)
 	      {
 		/* We need more space.  */
@@ -286,7 +300,7 @@ __gnat_decode (coded_name, ada_name, verbose)
   }
 
   /* If verbose mode is on, we add some information to the Ada name.  */
-  if (verbose) 
+  if (verbose)
     {
       if (overloaded)
 	add_verbose ("overloaded", ada_name);
diff --git a/gcc/ada/adaint.c b/gcc/ada/adaint.c
index 874f091..fd5ed6d 100644
--- a/gcc/ada/adaint.c
+++ b/gcc/ada/adaint.c
@@ -65,9 +65,17 @@
 #include "config.h"
 #include "system.h"
 #endif
+
+#if !defined __MINGW32__
 #include <sys/wait.h>
+#endif
 
 #if defined (__EMX__) || defined (MSDOS) || defined (_WIN32)
+#include <process.h>
+#include <ctype.h> /* for isalpha() */ 
+#ifndef HAVE_DOS_BASED_FILE_SYSTEM
+#define HAVE_DOS_BASED_FILE_SYSTEM 1
+#endif
 #elif defined (VMS)
 
 /* Header files and definitions for __gnat_set_file_time_name.  */
@@ -116,13 +124,17 @@ struct vstring
 #include <utime.h>
 #endif
 
-#if defined (__EMX__) || defined (MSDOS) || defined (_WIN32)
-#include <process.h>
-#endif
-
 #if defined (_WIN32)
 #include <dir.h>
 #include <windows.h>
+static time_t win32_filetime		PARAMS ((HANDLE));
+static int win32_no_block_spawn 	PARAMS ((char *, char **));
+static int win32_wait			PARAMS ((int *));
+static void remove_handle 		PARAMS ((HANDLE));
+static void add_handle 			PARAMS ((HANDLE));
+static void plist_enter 		PARAMS ((void));
+static void plist_leave			PARAMS ((void));
+
 #endif
 
 #include "adaint.h"
@@ -165,6 +177,16 @@ struct vstring
 #define DIR_SEPARATOR '/'
 #endif
 
+/* Define IS_DIR_SEPARATOR.  */
+#ifndef IS_DIR_SEPARATOR
+# ifndef DIR_SEPARATOR_2
+#  define IS_DIR_SEPARATOR(CH) ((CH) == DIR_SEPARATOR)
+# else /* DIR_SEPARATOR_2 */
+#  define IS_DIR_SEPARATOR(CH) \
+	(((CH) == DIR_SEPARATOR) || ((CH) == DIR_SEPARATOR_2))
+# endif /* DIR_SEPARATOR_2 */
+#endif /* IS_DIR_SEPARATOR */
+
 char __gnat_dir_separator = DIR_SEPARATOR;
 
 char __gnat_path_separator = PATH_SEPARATOR;
@@ -216,7 +238,7 @@ const int __gnat_vmsp = 0;
 /* This variable is used to export the maximum length of a path name to
    Ada code.  */
 
-#ifdef __EMX__
+#if defined (__EMX__) || defined (__MINGW32__)
 int __gnat_max_path_len = _MAX_PATH;
 
 #elif defined (VMS)
@@ -267,7 +289,7 @@ __gnat_to_gm_time (p_time, p_year, p_month, p_day, p_hours, p_mins, p_secs)
 /* Place the contents of the symbolic link named PATH in the buffer BUF,
    which has size BUFSIZ.  If PATH is a symbolic link, then return the number
    of characters of its content in BUF.  Otherwise, return -1.  For Windows,
-   OS/2 and vxworks, always return -1.  */
+   OS/2 and vxworks, always return -1.  CYGWIN supports symlinks.  */
 
 int    
 __gnat_readlink (path, buf, bufsiz)
@@ -275,7 +297,7 @@ __gnat_readlink (path, buf, bufsiz)
      char *buf;
      size_t bufsiz;
 {
-#if defined (MSDOS) || defined (_WIN32) || defined (__EMX__)
+#if defined (HAVE_DOS_BASED_FILE_SYSTEM) && !defined (__CYGWIN__)
   return -1;
 #elif defined (__INTERIX) || defined (VMS)
   return -1;
@@ -295,7 +317,7 @@ __gnat_symlink (oldpath, newpath)
      char *oldpath;
      char *newpath;
 {
-#if defined (MSDOS) || defined (_WIN32) || defined (__EMX__)
+#if defined (HAVE_DOS_BASED_FILE_SYSTEM) && !defined (__CYGWIN__)
   return -1;
 #elif defined (__INTERIX) || defined (VMS)
   return -1;
@@ -308,8 +330,9 @@ __gnat_symlink (oldpath, newpath)
 
 /* Try to lock a file, return 1 if success.  */
 
-#if defined (__vxworks) || defined (MSDOS) || defined (_WIN32)
-
+#if defined (HAVE_DOS_BASED_FILE_SYSTEM) \
+  || defined (__vxworks) || defined (VMS)
+             
 /* Version that does not use link. */
 
 int
@@ -329,28 +352,6 @@ __gnat_try_lock (dir, file)
   return 1;
 }
 
-#elif defined (__EMX__) || defined (VMS)
-
-/* More cases that do not use link; identical code, to solve too long
-   line problem ??? */
-
-int
-__gnat_try_lock (dir, file)
-     char *dir;
-     char *file;
-{
-  char full_path[256];
-  int fd;
-
-  sprintf (full_path, "%s%c%s", dir, DIR_SEPARATOR, file);
-  fd = open (full_path, O_CREAT | O_EXCL, 0600);
-  if (fd < 0)
-    return 0;
-
-  close (fd);
-  return 1;
-}
-
 #else
 
 /* Version using link(), more secure over NFS.  */
@@ -408,7 +409,7 @@ __gnat_get_maximum_file_name_length ()
 int
 __gnat_get_file_names_case_sensitive ()
 {
-#if defined (__EMX__) || defined (MSDOS) || defined (VMS) || defined (WINNT)
+#if defined (HAVE_DOS_BASED_FILE_SYSTEM) || defined (VMS)
   return 0;
 #else
   return 1;
@@ -418,7 +419,7 @@ __gnat_get_file_names_case_sensitive ()
 char
 __gnat_get_default_identifier_character_set ()
 {
-#if defined (__EMX__) || defined (MSDOS)
+#if defined (__EMX__) || defined (MSDOS) || defined (_WIN32)
   return 'p';
 #else
   return '1';
@@ -526,7 +527,7 @@ __gnat_open_read (path, fmode)
   return fd < 0 ? -1 : fd;
 }
 
-#if defined (__EMX__)
+#if defined (__EMX__) || defined (__MINGW32__)
 #define PERM (S_IREAD | S_IWRITE)
 #else
 #define PERM (S_IRUSR | S_IWUSR | S_IRGRP | S_IWGRP | S_IROTH | S_IWOTH)
@@ -765,31 +766,27 @@ __gnat_readdir_is_thread_safe ()
    use fstat for this purpose as the DST modify the st_mtime field of the
    stat structure.  */
 
+ /* Number of seconds between <Jan 1st 1601> and <Jan 1st 1970>.  */
+static const unsigned long long w32_epoch_offset = 11644473600ULL;
+
 static time_t
 win32_filetime (h)
      HANDLE h;
 {
-  BOOL res;
-  FILETIME t_create;
-  FILETIME t_access;
-  FILETIME t_write;
-  unsigned long long timestamp;
-
-  /* Number of seconds between <Jan 1st 1601> and <Jan 1st 1970>.  */
-  unsigned long long offset = 11644473600;
+  union
+  {
+    FILETIME ft_time;
+    unsigned long long ull_time;
+  } t_write;
 
   /* GetFileTime returns FILETIME data which are the number of 100 nanosecs
      since <Jan 1st 1601>. This function must return the number of seconds
      since <Jan 1st 1970>.  */
 
-  res = GetFileTime (h, &t_create, &t_access, &t_write);
-
-  timestamp = (((long long) t_write.dwHighDateTime << 32) 
-	       + t_write.dwLowDateTime);
-
-  timestamp = timestamp / 10000000 - offset;
-
-  return (time_t) timestamp;
+  if (GetFileTime (h, NULL, NULL, &t_write.ft_time))
+    return (time_t) (t_write.ull_time / 10000000ULL
+		     - w32_epoch_offset);
+  return (time_t) 0;
 }
 #endif
 
@@ -808,10 +805,14 @@ __gnat_file_time_name (name)
   return ret;
 
 #elif defined (_WIN32)
+  time_t ret = 0;
   HANDLE h = CreateFile (name, GENERIC_READ, FILE_SHARE_READ, 0,
 			 OPEN_EXISTING, FILE_FLAG_BACKUP_SEMANTICS, 0);
-  time_t ret = win32_filetime (h);
-  CloseHandle (h);
+  if (h != INVALID_HANDLE_VALUE)
+    {
+      ret = win32_filetime (h);
+      CloseHandle (h);
+    }
   return ret;
 #else
 
@@ -924,11 +925,31 @@ __gnat_set_file_time_name (name, time_stamp)
      char *name;
      time_t time_stamp;
 {
-#if defined (__EMX__) || defined (MSDOS) || defined (_WIN32) \
-    || defined (__vxworks)
+#if defined (__EMX__) || defined (MSDOS)  || defined (__vxworks)
 
 /* Code to implement __gnat_set_file_time_name for these systems.  */
 
+#elif defined (_WIN32)
+  union
+  {
+    FILETIME ft_time;
+    unsigned long long ull_time;
+  } time_u;
+  
+  HANDLE h  = CreateFile (name, GENERIC_WRITE, FILE_SHARE_WRITE, NULL,
+			  OPEN_EXISTING, FILE_FLAG_BACKUP_SEMANTICS,
+			  NULL);
+  if (h == INVALID_HANDLE_VALUE)
+    return;	
+  /* Add number of seconds between <Jan 1st 1601> and <Jan 1st 1970> */
+  time_u.ull_time = ((unsigned long long)time_stamp + w32_epoch_offset);
+  /*  Convert to 100 nanosecond units  */
+  time_u.ull_time *= 10000000ULL;
+
+  SetFileTime(h, NULL, NULL, &time_u.ft_time);
+  CloseHandle (h);
+  return;
+
 #elif defined (VMS)
   struct FAB fab;
   struct NAM nam;
@@ -1216,10 +1237,6 @@ __gnat_set_env_value (name, value)
 #endif
 }
 
-#ifdef _WIN32
-#include <windows.h>
-#endif
-
 /* Get the list of installed standard libraries from the
    HKEY_LOCAL_MACHINE\SOFTWARE\Ada Core Technologies\GNAT\Standard Libraries
    key.  */
@@ -1323,9 +1340,9 @@ int
 __gnat_is_absolute_path (name)
      char *name;
 {
-  return (*name == '/' || *name == DIR_SEPARATOR
-#if defined (__EMX__) || defined (MSDOS) || defined (WINNT)
-      || strlen (name) > 1 && isalpha (name[0]) && name[1] == ':'
+   return ((*name == '/') || IS_DIR_SEPARATOR (*name)
+#if defined(HAVE_DOS_BASED_FILE_SYSTEM)
+       || (strlen (name) > 1 && isalpha (name [0]) && name [1] == ':')
 #endif
 	  );
 }
@@ -1387,7 +1404,7 @@ __gnat_portable_spawn (args)
   int pid;
 
 #if defined (MSDOS) || defined (_WIN32)
-  status = spawnvp (P_WAIT, args[0], args);
+  status = spawnvp (P_WAIT, args[0], (const char* const*)args);
   if (status < 0)
     return -1;
   else
@@ -1487,7 +1504,8 @@ add_handle (h)
   plist_leave();
 }
 
-void remove_handle (h)
+static void
+remove_handle (h)
      HANDLE h;
 {
   Process_List *pl, *prev;
@@ -1746,12 +1764,13 @@ __gnat_locate_regular_file (file_name, path_val)
   char *ptr;
 
   /* Handle absolute pathnames.  */
-  for (ptr = file_name; *ptr && *ptr != '/' && *ptr != DIR_SEPARATOR; ptr++)
+  for (ptr = file_name;
+       *ptr && *ptr != '/' && !IS_DIR_SEPARATOR (*ptr); ptr++)
     ;
 
   if (*ptr != 0
-#if defined (__EMX__) || defined (MSDOS) || defined (WINNT)
-      || isalpha (file_name[0]) && file_name[1] == ':'
+#if defined (HAVE_DOS_BASED_FILE_SYSTEM)
+      || (isalpha (file_name [0]) && file_name [1] == ':')
 #endif
      )
     {
@@ -1780,7 +1799,7 @@ __gnat_locate_regular_file (file_name, path_val)
         *ptr++ = *path_val++;
 
       ptr--;
-      if (*ptr != '/' && *ptr != DIR_SEPARATOR)
+      if (*ptr != '/'  &&  !IS_DIR_SEPARATOR (*ptr))
         *++ptr = DIR_SEPARATOR;
 
       strcpy (++ptr, file_name);
diff --git a/gcc/ada/adaint.h b/gcc/ada/adaint.h
index 59389c6..a6c0153 100644
--- a/gcc/ada/adaint.h
+++ b/gcc/ada/adaint.h
@@ -142,3 +142,7 @@ extern char   *__gnat_ttyname			   PARAMS ((int));
 /* Portable definition of strdup, which is not available on all systems.  */
 #define xstrdup(S)  strcpy ((char *) malloc (strlen (S) + 1), S)
 #endif
+
+#ifdef _WIN32
+extern void 	__gnat_plist_init		  PARAMS ((void));
+#endif
diff --git a/gcc/ada/cstreams.c b/gcc/ada/cstreams.c
index 281ad73..18957b7 100644
--- a/gcc/ada/cstreams.c
+++ b/gcc/ada/cstreams.c
@@ -67,7 +67,8 @@
 #endif
 #endif
 
-/* The _IONBF value in CYGNUS or MINGW32 stdio.h is wrong.  */
+/* The _IONBF value in CYGNUS or MINGW32 stdio.h is wrong in
+   in old releases.  */
 #if defined (WINNT) || defined (_WINNT)
 #undef _IONBF
 #define _IONBF 0004
@@ -204,8 +205,6 @@ __gnat_full_name (nam, buffer)
       strcpy (buffer, __gnat_to_host_file_spec (buffer));
     }
 
-  return buffer;
-
 #else
   if (nam[0] != '/')
     {
@@ -226,6 +225,8 @@ __gnat_full_name (nam, buffer)
   else
     strcpy (buffer, nam);
 
-  return buffer;
 #endif
+
+  return buffer;
+
 }
diff --git a/gcc/ada/expect.c b/gcc/ada/expect.c
index 175a7e0..6585612 100644
--- a/gcc/ada/expect.c
+++ b/gcc/ada/expect.c
@@ -88,8 +88,8 @@ __gnat_pipe (fd)
   HANDLE read, write;
 
   CreatePipe (&read, &write, NULL, 0);
-  fd[0]=_open_osfhandle (read, 0);
-  fd[1]=_open_osfhandle (write, 0);
+  fd[0]=_open_osfhandle ((long)read, 0);
+  fd[1]=_open_osfhandle ((long)write, 0);
   return 0;  /* always success */
 }
 
diff --git a/gcc/ada/init.c b/gcc/ada/init.c
index 105df0d..ea7e147 100644
--- a/gcc/ada/init.c
+++ b/gcc/ada/init.c
@@ -685,17 +685,17 @@ __gnat_initialize ()
 #elif defined (__MINGW32__)
 #include <windows.h>
 
-static LONG __gnat_error_handler PARAMS ((PEXCEPTION_POINTERS));
+static LONG  CALLBACK __gnat_error_handler PARAMS ((PEXCEPTION_POINTERS));
 
 /* __gnat_initialize (mingw32).  */
 
-static LONG
+static LONG  CALLBACK
 __gnat_error_handler (info)
      PEXCEPTION_POINTERS info;
 {
   static int recurse;
   struct Exception_Data *exception;
-  char *msg;
+  const char *msg;
 
   switch (info->ExceptionRecord->ExceptionCode)
     {
@@ -802,6 +802,7 @@ __gnat_error_handler (info)
 
   recurse = 0;
   Raise_From_Signal_Handler (exception, msg);
+  return 0; /*  Never reached. */
 }
 
 void
diff --git a/gcc/ada/raise.c b/gcc/ada/raise.c
index a984174..d64fe68 100644
--- a/gcc/ada/raise.c
+++ b/gcc/ada/raise.c
@@ -607,7 +607,10 @@ __gnat_eh_personality (version, actions, exception_class, ue_header, context)
 }
 
 
-/* Stubs for the libgcc unwinding interface, to be imported by a-except.  */ 
+/* If the underlying GCC scheme for exception handling is SJLJ, the standard
+   propagation routine (_Unwind_RaiseException) is actually renamed using a
+   #define directive (see unwing-sjlj.c). We need a consistently named
+   interface to import from a-except, so stubs are defined here.  */
 
 #ifdef __USING_SJLJ_EXCEPTIONS__
 
diff --git a/gcc/ada/sysdep.c b/gcc/ada/sysdep.c
index d40e84d..7132ce9 100644
--- a/gcc/ada/sysdep.c
+++ b/gcc/ada/sysdep.c
@@ -173,6 +173,7 @@ __gnat_set_text_mode (handle)
 
 #ifdef __MINGW32__
 #include <windows.h>
+#include <conio.h>  /* for getch(), kbhit() */
 
 /* Return the name of the tty.   Under windows there is no name for
    the tty, so this function, if connected to a tty, returns the generic name
@@ -292,7 +293,7 @@ __gnat_ttyname (filedes)
 #endif
 
 #if defined (linux) || defined (sun) || defined (sgi) || defined (__EMX__) \
-  || (defined (__osf__) && ! defined (__alpha_vxworks)) || defined (WINNT) \
+  || (defined (__osf__) && ! defined (__alpha_vxworks)) \
   || defined (__MACHTEN__) || defined (hpux) || defined (_AIX) \
   || (defined (__svr4__) && defined (i386)) || defined (__Lynx__) \
   || defined (__CYGWIN__)
@@ -615,7 +616,7 @@ int   rts_get_nShowCmd      PARAMS ((void));
 char *
 rts_get_hInstance () 
 { 
-  return GetModuleHandleA (0); 
+  return (char *) GetModuleHandleA (0); 
 }
 
 char *
diff --git a/gcc/config.gcc b/gcc/config.gcc
index a5e659a..90f380a 100644
--- a/gcc/config.gcc
+++ b/gcc/config.gcc
@@ -1342,22 +1342,29 @@ i[34567]86-*-win32)
 	exeext=.exe
 	;;
 i[34567]86-*-pe | i[34567]86-*-cygwin*)
+	tm_file="i386/cygming.h i386/cygwin.h"
 	xm_defines=POSIX
 	xm_file=i386/xm-cygwin.h
-	tmake_file=i386/t-cygwin
-	tm_file=i386/cygwin.h
+	tmake_file="i386/t-cygming i386/t-cygwin i386/t-crtstuff"
 	extra_objs=winnt.o
+	c_target_objs=cygwin2.o
+	cxx_target_objs=cygwin2.o
+	extra_parts="crtbegin.o crtend.o"
+	target_cpu_default=TARGET_CPU_DEFAULT_pentiumpro
 	if test x$enable_threads = xyes; then
-		thread_file='win32'
+		thread_file='posix'
 	fi
 	exeext=.exe
 	;;
 i[34567]86-*-mingw32*)
-	tm_file=i386/mingw32.h
+	tm_file="i386/cygming.h i386/mingw32.h"
 	xm_defines=POSIX
 	xm_file=i386/xm-mingw32.h
-	tmake_file="i386/t-cygwin i386/t-mingw32"
+	xmake_file=i386/x-mingw32
+	tmake_file="i386/t-cygming i386/t-mingw32 i386/t-crtstuff"
 	extra_objs=winnt.o
+	extra_parts="crtbegin.o crtend.o"
+	target_cpu_default=TARGET_CPU_DEFAULT_pentiumpro
 	if test x$enable_threads = xyes; then
 		thread_file='win32'
 	fi
@@ -1366,7 +1373,7 @@ i[34567]86-*-mingw32*)
 		*mingw32crt*)
 			tm_file="${tm_file} i386/crtdll.h"
 			;;
-		*minwg32msv* | *mingw32*)
+		*mingw32msv* | *mingw32*)
 			;;
 	esac
 	;;
diff --git a/gcc/config/i386/crtdll.h b/gcc/config/i386/crtdll.h
index dab60c1..4ad2541 100644
--- a/gcc/config/i386/crtdll.h
+++ b/gcc/config/i386/crtdll.h
@@ -20,9 +20,17 @@ along with GNU CC; see the file COPYING.  If not, write to
 the Free Software Foundation, 59 Temple Place - Suite 330,
 Boston, MA 02111-1307, USA.  */
 
-#undef EXTRA_OS_CPP_BUILTINS
-#define EXTRA_OS_CPP_BUILTINS() \
-  do { builtin_define ("__MINGW32__=0.2"); } while (0)
+
+#define EXTRA_OS_CPP_BUILTINS()					\
+  do								\
+    {								\
+      builtin_define ("__CRTDLL__");				\
+      builtin_define ("__MINGW32__");			   	\
+      builtin_define ("_WIN32");				\
+      builtin_define_std ("WIN32");				\
+      builtin_define_std ("WINNT");				\
+    }								\
+  while (0)
 
 #undef LIBGCC_SPEC
 #define LIBGCC_SPEC \
diff --git a/gcc/config/i386/cygming.h b/gcc/config/i386/cygming.h
new file mode 100644
index 0000000..aac1b20
--- /dev/null
+++ b/gcc/config/i386/cygming.h
@@ -0,0 +1,399 @@
+/* Operating system specific defines to be used when targeting GCC for
+   hosting on Windows32, using a Unix style C library and tools.
+   Copyright (C) 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
+   Free Software Foundation, Inc.
+
+This file is part of GNU CC.
+
+GNU CC is free software; you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation; either version 2, or (at your option)
+any later version.
+
+GNU CC is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with GNU CC; see the file COPYING.  If not, write to
+the Free Software Foundation, 59 Temple Place - Suite 330,
+Boston, MA 02111-1307, USA.  */
+
+#define DBX_DEBUGGING_INFO 1
+#define SDB_DEBUGGING_INFO 1
+#define PREFERRED_DEBUGGING_TYPE DBX_DEBUG
+
+#define TARGET_EXECUTABLE_SUFFIX ".exe"
+
+#include <stdio.h>
+#include "i386/i386.h"
+#include "i386/unix.h"
+#include "i386/bsd.h"
+#include "i386/gas.h"
+#include "dbxcoff.h"
+
+#define MAYBE_UWIN_CPP_BUILTINS() /* Nothing.  */
+#define TARGET_OS_CPP_BUILTINS()					\
+  do									\
+    {									\
+	builtin_define ("_X86_=1");					\
+	builtin_define ("__stdcall=__attribute__((__stdcall__))");	\
+	builtin_define ("__fastcall=__attribute__((__fastcall__))");	\
+	builtin_define ("__cdecl=__attribute__((__cdecl__))");		\
+	builtin_define ("__declspec(x)=__attribute__((x))");		\
+	if (!flag_iso)							\
+	  {								\
+	    builtin_define ("_stdcall=__attribute__((__stdcall__))");	\
+	    builtin_define ("_fastcall=__attribute__((__fastcall__))");	\
+	    builtin_define ("_cdecl=__attribute__((__cdecl__))");	\
+	  }								\
+	MAYBE_UWIN_CPP_BUILTINS();					\
+	EXTRA_OS_CPP_BUILTINS ();					\
+	builtin_assert ("system=winnt");				\
+    }									\
+  while (0)
+
+/* Masks for subtarget switches used by other files.  */
+#define MASK_NOP_FUN_DLLIMPORT 0x08000000 /* Ignore dllimport for functions */
+#define MASK_MS_BITFIELD_LAYOUT 0x10000000 /* Use MS bitfield layout */
+
+/* Used in winnt.c.  */
+#define TARGET_NOP_FUN_DLLIMPORT (target_flags & MASK_NOP_FUN_DLLIMPORT)
+/* Tell i386.c to put a target-specific specialization of
+   ms_bitfield_layout_p in struct gcc_target targetm.  */
+#define TARGET_USE_MS_BITFIELD_LAYOUT  \
+  (target_flags & MASK_MS_BITFIELD_LAYOUT)	
+
+#undef  SUBTARGET_SWITCHES
+#define SUBTARGET_SWITCHES \
+{ "cygwin",		  0, N_("Use the Cygwin interface") },	\
+{ "no-cygwin",		  0, N_("Use the Mingw32 interface") },	\
+{ "windows",		  0, N_("Create GUI application") },	\
+{ "no-win32",		  0, N_("Don't set Windows defines") },	\
+{ "win32",		  0, N_("Set Windows defines") },	\
+{ "console",		  0, N_("Create console application") },\
+{ "dll",		  0, N_("Generate code for a DLL") },	\
+{ "nop-fun-dllimport",	  MASK_NOP_FUN_DLLIMPORT,		\
+  N_("Ignore dllimport for functions") }, 			\
+{ "no-nop-fun-dllimport", -MASK_NOP_FUN_DLLIMPORT, "" },	\
+{ "threads",		  0, N_("Use Mingw-specific thread support") },	\
+{ "ms-bitfields",	  MASK_MS_BITFIELD_LAYOUT, 		\
+  N_("Use MS bitfield layout") },				\
+{ "no-ms-bitfields",	  -MASK_MS_BITFIELD_LAYOUT,		\
+  N_("Don't use MS bitfield layout") },
+
+/* Get tree.c to declare a target-specific specialization of
+   merge_decl_attributes.  */
+#define TARGET_DLLIMPORT_DECL_ATTRIBUTES
+
+#undef ENDFILE_SPEC
+#define ENDFILE_SPEC "crtend%O%s"
+
+/* This macro defines names of additional specifications to put in the specs
+   that can be used in various specifications like CC1_SPEC.  Its definition
+   is an initializer with a subgrouping for each command option.
+
+   Each subgrouping contains a string constant, that defines the
+   specification name, and a string constant that used by the GNU CC driver
+   program.
+
+   Do not define this macro if it does not need to do anything.  */
+
+#undef  SUBTARGET_EXTRA_SPECS
+#define SUBTARGET_EXTRA_SPECS 						\
+  { "mingw_include_path", DEFAULT_TARGET_MACHINE }
+
+/* We have to dynamic link to get to the system DLLs.  All of libc, libm and
+   the Unix stuff is in cygwin.dll.  The import library is called
+   'libcygwin.a'.  For Windows applications, include more libraries, but
+   always include kernel32.  We'd like to specific subsystem windows to
+   ld, but that doesn't work just yet.  */
+#undef MATH_LIBRARY
+#define MATH_LIBRARY ""
+
+#define SIZE_TYPE "unsigned int"
+#define PTRDIFF_TYPE "int"
+#define WCHAR_TYPE_SIZE 16
+#define WCHAR_TYPE "short unsigned int"
+
+
+/* Enable parsing of #pragma pack(push,<n>) and #pragma pack(pop).  */
+#define HANDLE_PRAGMA_PACK_PUSH_POP 1
+
+union tree_node;
+#define TREE union tree_node *
+
+#undef EXTRA_SECTIONS
+#define EXTRA_SECTIONS in_drectve
+
+#undef EXTRA_SECTION_FUNCTIONS
+#define EXTRA_SECTION_FUNCTIONS					\
+  DRECTVE_SECTION_FUNCTION					\
+  SWITCH_TO_SECTION_FUNCTION
+
+#define DRECTVE_SECTION_FUNCTION \
+void									\
+drectve_section ()							\
+{									\
+  if (in_section != in_drectve)						\
+    {									\
+      fprintf (asm_out_file, "%s\n", "\t.section .drectve\n");		\
+      in_section = in_drectve;						\
+    }									\
+}
+void drectve_section PARAMS ((void));
+
+/* Older versions of gas don't handle 'r' as data.
+   Explicitly set data flag with 'd'.  */  
+#define READONLY_DATA_SECTION_ASM_OP "\t.section .rdata,\"dr\""
+
+/* Switch to SECTION (an `enum in_section').
+
+   ??? This facility should be provided by GCC proper.
+   The problem is that we want to temporarily switch sections in
+   ASM_DECLARE_OBJECT_NAME and then switch back to the original section
+   afterwards.  */
+#define SWITCH_TO_SECTION_FUNCTION				\
+void switch_to_section (enum in_section, tree);			\
+void								\
+switch_to_section (enum in_section section, tree decl)		\
+{								\
+  switch (section)						\
+    {								\
+      case in_text: text_section (); break;			\
+      case in_data: data_section (); break;			\
+      case in_readonly_data: readonly_data_section (); break;	\
+      case in_named: named_section (decl, NULL, 0); break;	\
+      case in_drectve: drectve_section (); break;		\
+      default: abort (); break;					\
+    }								\
+}
+
+/* Don't allow flag_pic to propagate since gas may produce invalid code
+   otherwise.  */
+
+#undef  SUBTARGET_OVERRIDE_OPTIONS
+#define SUBTARGET_OVERRIDE_OPTIONS					\
+do {									\
+  if (flag_pic)								\
+    {									\
+      warning ("-f%s ignored for target (all code is position independent)",\
+	       (flag_pic > 1) ? "PIC" : "pic");				\
+      flag_pic = 0;							\
+    }									\
+} while (0)								\
+
+/* Define this macro if references to a symbol must be treated
+   differently depending on something about the variable or
+   function named by the symbol (such as what section it is in).
+
+   On i386 running Windows NT, modify the assembler name with a suffix 
+   consisting of an atsign (@) followed by string of digits that represents
+   the number of bytes of arguments passed to the function, if it has the 
+   attribute STDCALL.
+
+   In addition, we must mark dll symbols specially. Definitions of 
+   dllexport'd objects install some info in the .drectve section.  
+   References to dllimport'd objects are fetched indirectly via
+   _imp__.  If both are declared, dllexport overrides.  This is also 
+   needed to implement one-only vtables: they go into their own
+   section and we need to set DECL_SECTION_NAME so we do that here.
+   Note that we can be called twice on the same decl.  */
+
+#undef TARGET_ENCODE_SECTION_INFO
+#define TARGET_ENCODE_SECTION_INFO  i386_pe_encode_section_info
+#undef  TARGET_STRIP_NAME_ENCODING
+#define TARGET_STRIP_NAME_ENCODING  i386_pe_strip_name_encoding_full
+
+/* Output a reference to a label.  */
+#undef ASM_OUTPUT_LABELREF
+#define ASM_OUTPUT_LABELREF  i386_pe_output_labelref
+
+/* Output a common block.  */
+#undef ASM_OUTPUT_COMMON
+#define ASM_OUTPUT_COMMON(STREAM, NAME, SIZE, ROUNDED)	\
+do {							\
+  if (i386_pe_dllexport_name_p (NAME))			\
+    i386_pe_record_exported_symbol (NAME, 1);		\
+  if (! i386_pe_dllimport_name_p (NAME))		\
+    {							\
+      fprintf ((STREAM), "\t.comm\t"); 			\
+      assemble_name ((STREAM), (NAME));			\
+      fprintf ((STREAM), ", %d\t%s %d\n",		\
+	       (ROUNDED), ASM_COMMENT_START, (SIZE));	\
+    }							\
+} while (0)
+
+/* Output the label for an initialized variable.  */
+#undef ASM_DECLARE_OBJECT_NAME
+#define ASM_DECLARE_OBJECT_NAME(STREAM, NAME, DECL) 	\
+do {							\
+  if (i386_pe_dllexport_name_p (NAME))			\
+    i386_pe_record_exported_symbol (NAME, 1);		\
+  ASM_OUTPUT_LABEL ((STREAM), (NAME));			\
+} while (0)
+
+
+/* Emit code to check the stack when allocating more that 4000
+   bytes in one go.  */
+
+#define CHECK_STACK_LIMIT 4000
+
+/* By default, target has a 80387, uses IEEE compatible arithmetic,
+   and returns float values in the 387 and needs stack probes
+   We also align doubles to 64-bits for MSVC default compatibility. */
+#undef TARGET_SUBTARGET_DEFAULT
+#define TARGET_SUBTARGET_DEFAULT \
+   (MASK_80387 | MASK_IEEE_FP | MASK_FLOAT_RETURNS | \
+    MASK_STACK_PROBE | MASK_ALIGN_DOUBLE)
+
+/* This is how to output an assembler line
+   that says to advance the location counter
+   to a multiple of 2**LOG bytes.  */
+
+#undef ASM_OUTPUT_ALIGN
+#define ASM_OUTPUT_ALIGN(FILE,LOG)	\
+    if ((LOG)!=0) fprintf ((FILE), "\t.align %d\n", 1<<(LOG))
+
+/* Define this macro if in some cases global symbols from one translation
+   unit may not be bound to undefined symbols in another translation unit
+   without user intervention.  For instance, under Microsoft Windows
+   symbols must be explicitly imported from shared libraries (DLLs).  */
+#define MULTIPLE_SYMBOL_SPACES
+
+extern void i386_pe_unique_section PARAMS ((TREE, int));
+#define TARGET_ASM_UNIQUE_SECTION i386_pe_unique_section
+
+#define SUPPORTS_ONE_ONLY 1
+
+/* Switch into a generic section.  */
+#define TARGET_ASM_NAMED_SECTION  i386_pe_asm_named_section
+
+/* Select attributes for named sections.  */
+#define TARGET_SECTION_TYPE_FLAGS  i386_pe_section_type_flags
+
+/* Write the extra assembler code needed to declare a function
+   properly.  If we are generating SDB debugging information, this
+   will happen automatically, so we only need to handle other cases.  */
+#undef ASM_DECLARE_FUNCTION_NAME
+#define ASM_DECLARE_FUNCTION_NAME(FILE, NAME, DECL)			\
+  do									\
+    {									\
+      if (i386_pe_dllexport_name_p (NAME))				\
+	i386_pe_record_exported_symbol (NAME, 0);			\
+      if (write_symbols != SDB_DEBUG)					\
+	i386_pe_declare_function_type (FILE, NAME, TREE_PUBLIC (DECL));	\
+      ASM_OUTPUT_LABEL (FILE, NAME);					\
+    }									\
+  while (0)
+
+/* Add an external function to the list of functions to be declared at
+   the end of the file.  */
+#define ASM_OUTPUT_EXTERNAL(FILE, DECL, NAME)				\
+  do									\
+    {									\
+      if (TREE_CODE (DECL) == FUNCTION_DECL)				\
+	i386_pe_record_external_function (NAME);			\
+    }									\
+  while (0)
+
+/* Declare the type properly for any external libcall.  */
+#define ASM_OUTPUT_EXTERNAL_LIBCALL(FILE, FUN) \
+  i386_pe_declare_function_type (FILE, XSTR (FUN, 0), 1)
+
+/* This says out to put a global symbol in the BSS section.  */
+#undef ASM_OUTPUT_ALIGNED_BSS
+#define ASM_OUTPUT_ALIGNED_BSS(FILE, DECL, NAME, SIZE, ALIGN) \
+  asm_output_aligned_bss ((FILE), (DECL), (NAME), (SIZE), (ALIGN))
+
+/* Output function declarations at the end of the file.  */
+#undef ASM_FILE_END
+#define ASM_FILE_END(FILE) \
+  i386_pe_asm_file_end (FILE)
+
+#undef ASM_COMMENT_START
+#define ASM_COMMENT_START " #"
+
+/* Maybe use Dwarf2 EH handling.  */ 
+#undef DWARF2_UNWIND_INFO
+#define DWARF2_UNWIND_INFO 1
+
+/* Don't assume anything about the header files.  */
+#define NO_IMPLICIT_EXTERN_C
+
+#undef PROFILE_HOOK
+#define PROFILE_HOOK(LABEL)						\
+  if (MAIN_NAME_P (DECL_NAME (current_function_decl)))			\
+    {									\
+      emit_call_insn (gen_rtx (CALL, VOIDmode,				\
+	gen_rtx_MEM (FUNCTION_MODE,					\
+		     gen_rtx_SYMBOL_REF (Pmode, "_monstartup")),	\
+	const0_rtx));							\
+    }
+
+/* Java Native Interface (JNI) methods on Win32 are invoked using the
+   stdcall calling convention.  */
+#undef MODIFY_JNI_METHOD_CALL
+#define MODIFY_JNI_METHOD_CALL(MDECL)					      \
+  build_type_attribute_variant ((MDECL),				      \
+			       build_tree_list (get_identifier ("stdcall"),   \
+						NULL))
+
+/* External function declarations.  */
+
+extern void i386_pe_record_external_function PARAMS ((const char *));
+extern void i386_pe_declare_function_type PARAMS ((FILE *, const char *, int));
+extern void i386_pe_record_exported_symbol PARAMS ((const char *, int));
+extern void i386_pe_asm_file_end PARAMS ((FILE *));
+extern int i386_pe_dllexport_name_p PARAMS ((const char *));
+extern int i386_pe_dllimport_name_p PARAMS ((const char *));
+
+/* For Win32 ABI compatibility */
+#undef DEFAULT_PCC_STRUCT_RETURN
+#define DEFAULT_PCC_STRUCT_RETURN 0
+
+/* MSVC returns aggregate types of up to 8 bytes via registers.
+   See i386.c:ix86_return_in_memory.  */
+#undef MS_AGGREGATE_RETURN
+#define MS_AGGREGATE_RETURN 1
+
+/* No data type wants to be aligned rounder than this.  */
+#undef	BIGGEST_ALIGNMENT
+#define BIGGEST_ALIGNMENT 128
+
+/* Native complier aligns internal doubles in structures on dword boundaries.  */
+#undef	BIGGEST_FIELD_ALIGNMENT
+#define BIGGEST_FIELD_ALIGNMENT 64
+
+/* A bit-field declared as `int' forces `int' alignment for the struct.  */
+#undef PCC_BITFIELD_TYPE_MATTERS
+#define PCC_BITFIELD_TYPE_MATTERS 1
+
+/* Enable alias attribute support.  */
+#ifndef SET_ASM_OP
+#define SET_ASM_OP "\t.set\t"
+#endif
+
+/* This implements the `alias' attribute, keeping any stdcall or
+   fastcall decoration.  */
+#undef	ASM_OUTPUT_DEF_FROM_DECLS
+#define	ASM_OUTPUT_DEF_FROM_DECLS(STREAM, DECL, TARGET) 		\
+  do									\
+    {									\
+      const char *alias;						\
+      rtx rtlname = XEXP (DECL_RTL (DECL), 0);				\
+      if (GET_CODE (rtlname) == SYMBOL_REF)				\
+	alias = XSTR (rtlname, 0);					\
+      else								\
+	abort ();							\
+      if (TREE_CODE (DECL) == FUNCTION_DECL && TREE_PUBLIC (DECL))	\
+	i386_pe_declare_function_type (STREAM, alias, 1);		\
+      ASM_OUTPUT_DEF (STREAM, alias, IDENTIFIER_POINTER (TARGET));	\
+    } while (0)
+
+#undef TREE
+
+#ifndef BUFSIZ
+# undef FILE
+#endif
diff --git a/gcc/config/i386/cygwin.h b/gcc/config/i386/cygwin.h
index 03e372e..993423f 100644
--- a/gcc/config/i386/cygwin.h
+++ b/gcc/config/i386/cygwin.h
@@ -20,136 +20,35 @@ along with GNU CC; see the file COPYING.  If not, write to
 the Free Software Foundation, 59 Temple Place - Suite 330,
 Boston, MA 02111-1307, USA.  */
 
-#define DBX_DEBUGGING_INFO 1
-#define SDB_DEBUGGING_INFO 1
-#define PREFERRED_DEBUGGING_TYPE DBX_DEBUG
-
 #define TARGET_VERSION fprintf (stderr, " (x86 Cygwin)"); 
-#define TARGET_EXECUTABLE_SUFFIX ".exe"
-
-#include <stdio.h>
-#include "i386/i386.h"
-#include "i386/unix.h"
-#include "i386/bsd.h"
-#include "i386/gas.h"
-#include "dbxcoff.h"
-
-/* Masks for subtarget switches used by other files.  */
-#define MASK_NOP_FUN_DLLIMPORT 0x08000000 /* Ignore dllimport for functions */
-
-/* Used in winnt.c.  */
-#define TARGET_NOP_FUN_DLLIMPORT (target_flags & MASK_NOP_FUN_DLLIMPORT)
-
-#undef  SUBTARGET_SWITCHES
-#define SUBTARGET_SWITCHES \
-{ "cygwin",		  0, N_("Use the Cygwin interface") },	\
-{ "no-cygwin",		  0, N_("Use the Mingw32 interface") },	\
-{ "windows",		  0, N_("Create GUI application") },	\
-{ "no-win32",		  0, N_("Don't set Windows defines") },	\
-{ "win32",		  0, N_("Set Windows defines") },	\
-{ "console",		  0, N_("Create console application") },\
-{ "dll",		  0, N_("Generate code for a DLL") },	\
-{ "nop-fun-dllimport",	  MASK_NOP_FUN_DLLIMPORT,		\
-  N_("Ignore dllimport for functions") }, 			\
-{ "no-nop-fun-dllimport", -MASK_NOP_FUN_DLLIMPORT, "" },	\
-{ "threads",		  0, N_("Use Mingw-specific thread support") },
-
-#define MAYBE_UWIN_CPP_BUILTINS() /* Nothing.  */
-#define TARGET_OS_CPP_BUILTINS()					\
-  do									\
-    {									\
-	builtin_define ("_X86_=1");					\
-	builtin_assert ("system=winnt");				\
-	builtin_define ("__stdcall=__attribute__((__stdcall__))");	\
-	builtin_define ("__cdecl=__attribute__((__cdecl__))");		\
-	builtin_define ("__declspec(x)=__attribute__((x))");		\
-	if (!flag_iso)							\
-	  {								\
-	    builtin_define ("_stdcall=__attribute__((__stdcall__))");	\
-	    builtin_define ("_cdecl=__attribute__((__cdecl__))");	\
-	  }								\
-	MAYBE_UWIN_CPP_BUILTINS ();					\
-    }									\
-  while (0)
-
-#ifdef CROSS_COMPILE
-#define CYGWIN_INCLUDES "%{!nostdinc:-idirafter " CYGWIN_CROSS_DIR "/include}"
-#define W32API_INC "%{!nostdinc:-idirafter " CYGWIN_CROSS_DIR "/include/w32api}"
-#define W32API_LIB "-L" CYGWIN_CROSS_DIR "/lib/w32api/"
-#define CYGWIN_LIB CYGWIN_CROSS_DIR "/lib"
-#define MINGW_LIBS "-L" CYGWIN_CROSS_DIR "/lib/mingw"
-#define MINGW_INCLUDES "%{!nostdinc:-isystem " CYGWIN_CROSS_DIR "/include/mingw/g++-3 "\
-		       "-isystem " CYGWIN_CROSS_DIR "/include/mingw/g++ "\
-		       "-idirafter " CYGWIN_CROSS_DIR "/include/mingw}"
-#else
-#define CYGWIN_INCLUDES "%{!nostdinc:-isystem /usr/local/include "\
-		           "-idirafter " CYGWIN_CROSS_DIR "/include "\
-		           "-idirafter /usr/include}"
-#define W32API_INC "%{!nostdinc:"\
-		      "-idirafter " CYGWIN_CROSS_DIR "/include/w32api "\
-		      "-idirafter /usr/include/w32api}"
-#define W32API_LIB "-L" CYGWIN_CROSS_DIR "/lib/w32api/ -L/usr/lib/w32api/"
-#define CYGWIN_LIB "/usr/lib"
-#define MINGW_LIBS "-L/usr/local/lib/mingw -L/usr/lib/mingw"
-#define MINGW_INCLUDES "%{!nostdinc:-isystem /usr/include/mingw/g++-3 "\
-		       "-isystem /usr/include/mingw/g++ "\
-		       "-isystem /usr/local/include/mingw "\
-		       "-idirafter " CYGWIN_CROSS_DIR "/include/mingw "\
-		       "-idirafter /usr/include/mingw}"
-#endif
 
-/* Get tree.c to declare a target-specific specialization of
-   merge_decl_attributes.  */
-#define TARGET_DLLIMPORT_DECL_ATTRIBUTES
-
-/* Support the __declspec keyword by turning them into attributes.
-   We currently only support: dllimport and dllexport.
-   Note that the current way we do this may result in a collision with
-   predefined attributes later on.  This can be solved by using one attribute,
-   say __declspec__, and passing args to it.  The problem with that approach
-   is that args are not accumulated: each new appearance would clobber any
-   existing args.  */
+#define EXTRA_OS_CPP_BUILTINS()  /* Nothing.  */
 
 #undef CPP_SPEC
-#define CPP_SPEC "%{posix:-D_POSIX_SOURCE} \
+#define CPP_SPEC "%(cpp_cpu) %{posix:-D_POSIX_SOURCE} \
   %{mno-win32:%{mno-cygwin: %emno-cygwin and mno-win32 are not compatible}} \
-  %{mno-cygwin:-D__MSVCRT__ -D__MINGW32__ %{mthreads:-D_MT} "\
-    MINGW_INCLUDES "} \
-  %{!mno-cygwin:-D__CYGWIN32__ -D__CYGWIN__ %{!ansi:-Dunix} -D__unix__ -D__unix "\
-    CYGWIN_INCLUDES "}\
+  %{mno-cygwin:-D__MSVCRT__ -D__MINGW32__ %{!ansi:%{mthreads:-D_MT}}}\
+  %{!mno-cygwin:-D__CYGWIN32__ -D__CYGWIN__ %{!ansi:-Dunix} -D__unix__ -D__unix }\
   %{mwin32|mno-cygwin:-DWIN32 -D_WIN32 -D__WIN32 -D__WIN32__ %{!ansi:-DWINNT}}\
-  %{!mno-win32:" W32API_INC "}\
+  %{!nostdinc:%{!mno-win32|mno-cygwin:-idirafter ../include/w32api%s -idirafter ../../include/w32api%s}}\
 "
 
 #undef STARTFILE_SPEC
 #define STARTFILE_SPEC "\
-  %{shared|mdll: %{mno-cygwin:" MINGW_LIBS " dllcrt2%O%s}}\
-  %{!shared: %{!mdll: %{!mno-cygwin:crt0%O%s} %{mno-cygwin:" MINGW_LIBS " crt2%O%s}\
+  %{shared|mdll: %{mno-cygwin:dllcrt2%O%s}}\
+  %{!shared: %{!mdll: %{!mno-cygwin:crt0%O%s} %{mno-cygwin:crt2%O%s}\
   %{pg:gcrt0%O%s}}}\
 "
 
 /* Normally, -lgcc is not needed since everything in it is in the DLL, but we
    want to allow things to be added to it when installing new versions of
    GCC without making a new CYGWIN.DLL, so we leave it.  Profiling is handled
-   by calling the init function from the prologue.  */
+   by calling the init function from main.  */
 
 #undef LIBGCC_SPEC
-#define LIBGCC_SPEC "%{mno-cygwin: %{mthreads:-lmingwthrd} -lmingw32}	\
-  -lgcc %{mno-cygwin:-lmoldname -lmingwex -lmsvcrt}"
-
-/* This macro defines names of additional specifications to put in the specs
-   that can be used in various specifications like CC1_SPEC.  Its definition
-   is an initializer with a subgrouping for each command option.
-
-   Each subgrouping contains a string constant, that defines the
-   specification name, and a string constant that used by the GNU CC driver
-   program.
-
-   Do not define this macro if it does not need to do anything.  */
-
-#undef  SUBTARGET_EXTRA_SPECS
-#define SUBTARGET_EXTRA_SPECS 						\
-  { "mingw_include_path", DEFAULT_TARGET_MACHINE }
+#define LIBGCC_SPEC \
+  "%{mno-cygwin: %{mthreads:-lmingwthrd} -lmingw32} -lgcc	\
+   %{mno-cygwin:-lmoldname -lmingwex -lmsvcrt}"
 
 /* We have to dynamic link to get to the system DLLs.  All of libc, libm and
    the Unix stuff is in cygwin.dll.  The import library is called
@@ -165,7 +64,7 @@ Boston, MA 02111-1307, USA.  */
   %{mwindows:-lgdi32 -lcomdlg32} \
   -luser32 -lkernel32 -ladvapi32 -lshell32"
 
-#define LINK_SPEC W32API_LIB "\
+#define LINK_SPEC "\
   %{mwindows:--subsystem windows} \
   %{mconsole:--subsystem console} \
   %{shared: %{mdll: %eshared and mdll are not compatible}} \
@@ -174,293 +73,158 @@ Boston, MA 02111-1307, USA.  */
   %{shared|mdll: -e \
     %{mno-cygwin:_DllMainCRTStartup@12} \
     %{!mno-cygwin:__cygwin_dll_entry@12}}\
-  --dll-search-prefix=cyg"
-
-#undef MATH_LIBRARY
-#define MATH_LIBRARY ""
-
-#define SIZE_TYPE "unsigned int"
-#define PTRDIFF_TYPE "int"
-#define WCHAR_TYPE_SIZE 16
-#define WCHAR_TYPE "short unsigned int"
-
-
-/* Enable parsing of #pragma pack(push,<n>) and #pragma pack(pop).  */
-#define HANDLE_PRAGMA_PACK_PUSH_POP 1
-
-union tree_node;
-#define TREE union tree_node *
-
-#undef EXTRA_SECTIONS
-#define EXTRA_SECTIONS in_drectve
-
-#undef EXTRA_SECTION_FUNCTIONS
-#define EXTRA_SECTION_FUNCTIONS					\
-  DRECTVE_SECTION_FUNCTION					\
-  SWITCH_TO_SECTION_FUNCTION
-
-#define DRECTVE_SECTION_FUNCTION \
-void									\
-drectve_section ()							\
-{									\
-  if (in_section != in_drectve)						\
-    {									\
-      fprintf (asm_out_file, "%s\n", "\t.section .drectve\n");		\
-      in_section = in_drectve;						\
-    }									\
-}
-void drectve_section PARAMS ((void));
-
-/* Switch to SECTION (an `enum in_section').
-
-   ??? This facility should be provided by GCC proper.
-   The problem is that we want to temporarily switch sections in
-   ASM_DECLARE_OBJECT_NAME and then switch back to the original section
-   afterwards.  */
-#define SWITCH_TO_SECTION_FUNCTION 				\
-void switch_to_section PARAMS ((enum in_section, tree));        \
-void 								\
-switch_to_section (section, decl) 				\
-     enum in_section section; 					\
-     tree decl; 						\
-{ 								\
-  switch (section) 						\
-    { 								\
-      case in_text: text_section (); break; 			\
-      case in_data: data_section (); break; 			\
-      case in_named: named_section (decl, NULL, 0); break; 	\
-      case in_drectve: drectve_section (); break; 		\
-      default: abort (); break; 				\
-    } 								\
-}
-
-/* Don't allow flag_pic to propagate since gas may produce invalid code
-   otherwise.  */
-
-#undef  SUBTARGET_OVERRIDE_OPTIONS
-#define SUBTARGET_OVERRIDE_OPTIONS					\
-do {									\
-  if (flag_pic)								\
-    {									\
-      warning ("-f%s ignored for target (all code is position independent)",\
-	       (flag_pic > 1) ? "PIC" : "pic");				\
-      flag_pic = 0;							\
-    }									\
-} while (0)								\
-
-/* Define this macro if references to a symbol must be treated
-   differently depending on something about the variable or
-   function named by the symbol (such as what section it is in).
-
-   On i386 running Windows NT, modify the assembler name with a suffix 
-   consisting of an atsign (@) followed by string of digits that represents
-   the number of bytes of arguments passed to the function, if it has the 
-   attribute STDCALL.
-
-   In addition, we must mark dll symbols specially. Definitions of 
-   dllexport'd objects install some info in the .drectve section.  
-   References to dllimport'd objects are fetched indirectly via
-   _imp__.  If both are declared, dllexport overrides.  This is also 
-   needed to implement one-only vtables: they go into their own
-   section and we need to set DECL_SECTION_NAME so we do that here.
-   Note that we can be called twice on the same decl.  */
-
-#undef TARGET_ENCODE_SECTION_INFO
-#define TARGET_ENCODE_SECTION_INFO  i386_pe_encode_section_info
-#undef  TARGET_STRIP_NAME_ENCODING
-#define TARGET_STRIP_NAME_ENCODING  i386_pe_strip_name_encoding_full
-
-/* Output a reference to a label.  */
-#undef ASM_OUTPUT_LABELREF
-#define ASM_OUTPUT_LABELREF(STREAM, NAME)  		\
-  fprintf (STREAM, "%s%s", USER_LABEL_PREFIX, 		\
-	   i386_pe_strip_name_encoding (NAME))		\
-
-/* Output a common block.  */
-#undef ASM_OUTPUT_COMMON
-#define ASM_OUTPUT_COMMON(STREAM, NAME, SIZE, ROUNDED)	\
-do {							\
-  if (i386_pe_dllexport_name_p (NAME))			\
-    i386_pe_record_exported_symbol (NAME, 1);		\
-  if (! i386_pe_dllimport_name_p (NAME))		\
-    {							\
-      fprintf ((STREAM), "\t.comm\t"); 			\
-      assemble_name ((STREAM), (NAME));			\
-      fprintf ((STREAM), ", %d\t%s %d\n",		\
-	       (ROUNDED), ASM_COMMENT_START, (SIZE));	\
-    }							\
-} while (0)
-
-/* Output the label for an initialized variable.  */
-#undef ASM_DECLARE_OBJECT_NAME
-#define ASM_DECLARE_OBJECT_NAME(STREAM, NAME, DECL) 	\
-do {							\
-  if (i386_pe_dllexport_name_p (NAME))			\
-    i386_pe_record_exported_symbol (NAME, 1);		\
-  ASM_OUTPUT_LABEL ((STREAM), (NAME));			\
-} while (0)
-
-
-/* Emit code to check the stack when allocating more that 4000
-   bytes in one go.  */
-
-#define CHECK_STACK_LIMIT 4000
-
-/* By default, target has a 80387, uses IEEE compatible arithmetic,
-   returns float values in the 387 and needs stack probes.
-   We also align doubles to 64-bits for MSVC default compatibility. */
-
-#undef TARGET_SUBTARGET_DEFAULT
-#define TARGET_SUBTARGET_DEFAULT \
-   (MASK_80387 | MASK_IEEE_FP | MASK_FLOAT_RETURNS | MASK_STACK_PROBE \
-    | MASK_ALIGN_DOUBLE)
-
-/* This is how to output an assembler line
-   that says to advance the location counter
-   to a multiple of 2**LOG bytes.  */
-
-#undef ASM_OUTPUT_ALIGN
-#define ASM_OUTPUT_ALIGN(FILE,LOG)	\
-    if ((LOG)!=0) fprintf ((FILE), "\t.align %d\n", 1<<(LOG))
-
-/* Define this macro if in some cases global symbols from one translation
-   unit may not be bound to undefined symbols in another translation unit
-   without user intervention.  For instance, under Microsoft Windows
-   symbols must be explicitly imported from shared libraries (DLLs).  */
-#define MULTIPLE_SYMBOL_SPACES
-
-extern void i386_pe_unique_section PARAMS ((TREE, int));
-#define TARGET_ASM_UNIQUE_SECTION i386_pe_unique_section
-
-#define SUPPORTS_ONE_ONLY 1
-
-/* Switch into a generic section.  */
-#define TARGET_ASM_NAMED_SECTION  i386_pe_asm_named_section
-
-/* Select attributes for named sections.  */
-#define TARGET_SECTION_TYPE_FLAGS  i386_pe_section_type_flags
-
-/* Write the extra assembler code needed to declare a function
-   properly.  If we are generating SDB debugging information, this
-   will happen automatically, so we only need to handle other cases.  */
-#undef ASM_DECLARE_FUNCTION_NAME
-#define ASM_DECLARE_FUNCTION_NAME(FILE, NAME, DECL)			\
-  do									\
-    {									\
-      if (i386_pe_dllexport_name_p (NAME))				\
-	i386_pe_record_exported_symbol (NAME, 0);			\
-      if (write_symbols != SDB_DEBUG)					\
-	i386_pe_declare_function_type (FILE, NAME, TREE_PUBLIC (DECL));	\
-      ASM_OUTPUT_LABEL (FILE, NAME);					\
-    }									\
-  while (0)
-
-/* Add an external function to the list of functions to be declared at
-   the end of the file.  */
-#define ASM_OUTPUT_EXTERNAL(FILE, DECL, NAME)				\
-  do									\
-    {									\
-      if (TREE_CODE (DECL) == FUNCTION_DECL)				\
-	i386_pe_record_external_function (NAME);			\
-    }									\
-  while (0)
-
-/* Declare the type properly for any external libcall.  */
-#define ASM_OUTPUT_EXTERNAL_LIBCALL(FILE, FUN) \
-  i386_pe_declare_function_type (FILE, XSTR (FUN, 0), 1)
-
-/* This says out to put a global symbol in the BSS section.  */
-#undef ASM_OUTPUT_ALIGNED_BSS
-#define ASM_OUTPUT_ALIGNED_BSS(FILE, DECL, NAME, SIZE, ALIGN) \
-  asm_output_aligned_bss ((FILE), (DECL), (NAME), (SIZE), (ALIGN))
-
-/* Output function declarations at the end of the file.  */
-#undef ASM_FILE_END
-#define ASM_FILE_END(FILE) \
-  i386_pe_asm_file_end (FILE)
-
-#undef ASM_COMMENT_START
-#define ASM_COMMENT_START " #"
-
-/* DWARF2 Unwinding doesn't work with exception handling yet.  To make
-   it work, we need to build a libgcc_s.dll, and dcrt0.o should be
-   changed to call __register_frame_info/__deregister_frame_info.  */
-#define DWARF2_UNWIND_INFO 0
-
-/* Don't assume anything about the header files.  */
-#define NO_IMPLICIT_EXTERN_C
-
-#undef PROFILE_HOOK
-#define PROFILE_HOOK(LABEL)						\
-  if (MAIN_NAME_P (DECL_NAME (current_function_decl)))			\
-    {									\
-      emit_call_insn (gen_rtx (CALL, VOIDmode,				\
-	gen_rtx_MEM (FUNCTION_MODE,					\
-		     gen_rtx_SYMBOL_REF (Pmode, "_monstartup")),	\
-	const0_rtx));							\
-    }
-
-/* Java Native Interface (JNI) methods on Win32 are invoked using the
-   stdcall calling convention.  */
-#undef MODIFY_JNI_METHOD_CALL
-#define MODIFY_JNI_METHOD_CALL(MDECL)					      \
-  build_type_attribute_variant ((MDECL),				      \
-			       build_tree_list (get_identifier ("stdcall"),   \
-						NULL))
-
-
-/* External function declarations.  */
-
-extern void i386_pe_record_external_function PARAMS ((const char *));
-extern void i386_pe_declare_function_type PARAMS ((FILE *, const char *, int));
-extern void i386_pe_record_exported_symbol PARAMS ((const char *, int));
-extern void i386_pe_asm_file_end PARAMS ((FILE *));
-extern int i386_pe_dllexport_name_p PARAMS ((const char *));
-extern int i386_pe_dllimport_name_p PARAMS ((const char *));
-
-/* For Win32 ABI compatibility */
-#undef DEFAULT_PCC_STRUCT_RETURN
-#define DEFAULT_PCC_STRUCT_RETURN 0
-
-/* No data type wants to be aligned rounder than this.  */
-#undef	BIGGEST_ALIGNMENT
-#define BIGGEST_ALIGNMENT 128
-
-/* Native complier aligns internal doubles in structures on dword boundaries.  */
-#undef	BIGGEST_FIELD_ALIGNMENT
-#define BIGGEST_FIELD_ALIGNMENT 64
-
-/* A bit-field declared as `int' forces `int' alignment for the struct.  */
-#undef PCC_BITFIELD_TYPE_MATTERS
-#define PCC_BITFIELD_TYPE_MATTERS 1
-#define GROUP_BITFIELDS_BY_ALIGN TYPE_NATIVE(rec)
-
-
-/* Enable alias attribute support.  */
-#ifndef SET_ASM_OP
-#define SET_ASM_OP "\t.set\t"
+  %{!mno-cygwin:--dll-search-prefix=cyg}"
+
+/* Allocate space for all of the machine-spec-specific stuff.
+   Allocate enough space for cygwin -> mingw32  munging plus
+   possible addition of "/mingw".  */
+
+#ifndef CYGWIN_MINGW_SUBDIR
+#define CYGWIN_MINGW_SUBDIR "/mingw"
+#endif 
+#define CYGWIN_MINGW_SUBDIR_LEN (sizeof (CYGWIN_MINGW_SUBDIR) - 1)
+
+#ifdef GPLUSPLUS_INCLUDE_DIR
+char cygwin_gplusplus_include_dir[sizeof (GPLUSPLUS_INCLUDE_DIR) + 1
+				  + (CYGWIN_MINGW_SUBDIR_LEN)]
+  = GPLUSPLUS_INCLUDE_DIR;
+#undef GPLUSPLUS_INCLUDE_DIR
+#define GPLUSPLUS_INCLUDE_DIR ((const char *) cygwin_gplusplus_include_dir)
+#ifndef GEN_CVT_ARRAY
+#define GEN_CVT_ARRAY
+#endif
 #endif
 
-/* Override GCC's relative pathname lookup (ie., relocatability) unless
-   otherwise told by other subtargets.  */
-#ifndef WIN32_NO_ABSOLUTE_INST_DIRS
-#undef MD_STARTFILE_PREFIX
-#define MD_STARTFILE_PREFIX     "/usr/lib/"
+#ifdef GPLUSPLUS_TOOL_INCLUDE_DIR
+char cygwin_gplusplus_tool_include_dir[sizeof (GPLUSPLUS_TOOL_INCLUDE_DIR) + 1
+				       + CYGWIN_MINGW_SUBDIR_LEN]
+  = GPLUSPLUS_TOOL_INCLUDE_DIR;
+#undef GPLUSPLUS_TOOL_INCLUDE_DIR
+#define GPLUSPLUS_TOOL_INCLUDE_DIR ((const char *) cygwin_gplusplus_tool_include_dir)
+#ifndef GEN_CVT_ARRAY
+#define GEN_CVT_ARRAY
+#endif
+#endif
 
-#undef STANDARD_STARTFILE_PREFIX
-#define STANDARD_STARTFILE_PREFIX     "/usr/lib/mingw/"
+#ifdef GPLUSPLUS_BACKWARD_INCLUDE_DIR
+char cygwin_gplusplus_backward_include_dir[sizeof (GPLUSPLUS_BACKWARD_INCLUDE_DIR)  + 1
+					   + CYGWIN_MINGW_SUBDIR_LEN]
+  = GPLUSPLUS_BACKWARD_INCLUDE_DIR;
+#undef GPLUSPLUS_BACKWARD_INCLUDE_DIR
+#define GPLUSPLUS_BACKWARD_INCLUDE_DIR ((const char *) cygwin_gplusplus_backward_include_dir)
+#ifndef GEN_CVT_ARRAY
+#define GEN_CVT_ARRAY
+#endif
+#endif
 
-#ifndef CROSS_COMPILE
+#ifdef LOCAL_INCLUDE_DIR
+char cygwin_local_include_dir[sizeof (LOCAL_INCLUDE_DIR)  + 1
+			      + CYGWIN_MINGW_SUBDIR_LEN]
+  = LOCAL_INCLUDE_DIR;
 #undef LOCAL_INCLUDE_DIR
+#define LOCAL_INCLUDE_DIR ((const char *) cygwin_local_include_dir)
+#ifndef GEN_CVT_ARRAY
+#define GEN_CVT_ARRAY
+#endif
+#endif
+
+#ifdef CROSS_INCLUDE_DIR
+char cygwin_cross_include_dir[sizeof (CROSS_INCLUDE_DIR) + 1
+			      + CYGWIN_MINGW_SUBDIR_LEN]
+  = CROSS_INCLUDE_DIR;
+#undef CROSS_INCLUDE_DIR
+#define CROSS_INCLUDE_DIR ((const char *) cygwin_cross_include_dir)
+#ifndef GEN_CVT_ARRAY
+#define GEN_CVT_ARRAY
+#endif
+#endif
+
+#ifdef TOOL_INCLUDE_DIR
+char cygwin_tool_include_dir[sizeof (TOOL_INCLUDE_DIR) + 1
+			     + CYGWIN_MINGW_SUBDIR_LEN]
+  = TOOL_INCLUDE_DIR;
 #undef TOOL_INCLUDE_DIR
-#undef SYSTEM_INCLUDE_DIR
+#define TOOL_INCLUDE_DIR ((const char *) cygwin_tool_include_dir)
+
+#ifndef CROSS_COMPILE
+#undef STANDARD_INCLUDE_DIR
+#define STANDARD_INCLUDE_DIR "/usr/include"
+char cygwin_standard_include_dir[sizeof (STANDARD_INCLUDE_DIR) + 1
+				 + CYGWIN_MINGW_SUBDIR_LEN]
+  = STANDARD_INCLUDE_DIR;
 #undef STANDARD_INCLUDE_DIR
-#define STANDARD_INCLUDE_DIR 0
-#endif /* not CROSS_COMPILE */
-#endif /* not WIN32_NO_ABSOLUTE_INST_DIRS */
+#define STANDARD_INCLUDE_DIR ((const char *) cygwin_standard_include_dir)
+#endif
 
-#undef TREE
+#ifndef GEN_CVT_ARRAY
+#define GEN_CVT_ARRAY
+#endif
+#endif
 
-#ifndef BUFSIZ
-# undef FILE
+#ifndef GEN_CVT_ARRAY
+extern char *cvt_to_mingw[];
+#else
+char *cvt_to_mingw[] =
+  {
+#ifdef GPLUSPLUS_INCLUDE_DIR
+    cygwin_gplusplus_include_dir,
+#endif
+
+#ifdef GPLUSPLUS_TOOL_INCLUDE_DIR
+    cygwin_gplusplus_tool_include_dir,
+#endif
+
+#ifdef GPLUSPLUS_BACKWARD_INCLUDE_DIR
+    cygwin_gplusplus_backward_include_dir,
+#endif
+
+#ifdef LOCAL_INCLUDE_DIR
+    cygwin_local_include_dir,
+#endif
+
+#ifdef CROSS_INCLUDE_DIR
+    cygwin_cross_include_dir,
+#endif
+
+#ifdef TOOL_INCLUDE_DIR
+    cygwin_tool_include_dir,
+#endif
+
+#ifdef STANDARD_INCLUDE_DIR
+    cygwin_standard_include_dir,
+#endif
+
+    NULL
+  };
+#undef GEN_CVT_ARRAY
+#endif /*GEN_CVT_ARRAY*/
+
+void mingw_scan PARAMS ((int, const char * const *, char **));
+#if 1
+#define GCC_DRIVER_HOST_INITIALIZATION \
+do \
+{ \
+  mingw_scan(argc, argv, (char **) &spec_machine); \
+  } \
+while (0)
+#else
+#define GCC_DRIVER_HOST_INITIALIZATION \
+do \
+{ \
+  char *cprefix = concat (tooldir_base_prefix, spec_machine, \
+			  dir_separator_str, NULL); \
+  if (!IS_ABSOLUTE_PATHNAME (cprefix)) \
+    cprefix = concat (standard_exec_prefix, spec_machine, dir_separator_str, \
+		      spec_version, dir_separator_str, tooldir_prefix, NULL); \
+  add_prefix (&exec_prefixes,\
+	      concat (cprefix, "../../../../", spec_machine, "/bin/", NULL), \
+	      "BINUTILS", PREFIX_PRIORITY_LAST, 0, NULL); \
+  add_prefix (&exec_prefixes, cprefix, \
+	      "BINUTILS", PREFIX_PRIORITY_LAST, 0, NULL); \
+  add_prefix (&startfile_prefixes,\
+	      concat (standard_startfile_prefix, "w32api", NULL),\
+	      "GCC", PREFIX_PRIORITY_LAST, 0, NULL);\
+  mingw_scan(argc, argv, &spec_machine); \
+  } \
+while (0)
 #endif
diff --git a/gcc/config/i386/cygwin1.c b/gcc/config/i386/cygwin1.c
new file mode 100644
index 0000000..bf4de1f
--- /dev/null
+++ b/gcc/config/i386/cygwin1.c
@@ -0,0 +1,54 @@
+/* Helper routines for cygwin-specific command-line parsing.
+   Contributed by Christopher Faylor (cgf@redhat.com)
+   Copyright 2002 Free Software Foundation, Inc.
+
+This file is part of GNU CC.
+
+GNU CC is free software; you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation; either version 2, or (at your option)
+any later version.
+
+GNU CC is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with GNU CC; see the file COPYING.  If not, write to
+the Free Software Foundation, 59 Temple Place - Suite 330,
+Boston, MA 02111-1307, USA.  */
+
+#include "config.h"
+#include "system.h"
+#include "cppdefault.h"
+
+void
+mingw_scan (argc, argv, spec_machine)
+    int argc;
+    const char *const *argv;
+    char **spec_machine;
+{
+  putenv ("GCC_CYGWIN_MINGW=0");
+
+  while (*++argv)
+    if (strcmp (*argv, "-mno-win32") == 0)
+      putenv ("GCC_CYGWIN_WIN32=0");
+    else if (strcmp (*argv, "-mwin32") == 0)
+      putenv ("GCC_CYGWIN_WIN32=1");
+    else if (strcmp (*argv, "-mno-cygwin") == 0)
+      {
+	char *p = strstr (*spec_machine, "-cygwin");
+	if (p)
+	  {
+	    int len = p - *spec_machine;
+	    char *s = xmalloc (strlen (*spec_machine) + 3);
+	    memcpy (s, *spec_machine, len);
+	    strcpy (s + len, "-mingw32");
+	    *spec_machine = s;
+	  }
+	putenv ("GCC_CYGWIN_MINGW=1");
+      }
+
+  return;
+}
diff --git a/gcc/config/i386/cygwin2.c b/gcc/config/i386/cygwin2.c
new file mode 100644
index 0000000..497c00f
--- /dev/null
+++ b/gcc/config/i386/cygwin2.c
@@ -0,0 +1,66 @@
+/* Helper routines for cygwin-specific command-line parsing.
+   Contributed by Christopher Faylor (cgf@redhat.com)
+   Copyright 2002 Free Software Foundation, Inc.
+
+This file is part of GNU CC.
+
+GNU CC is free software; you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation; either version 2, or (at your option)
+any later version.
+
+GNU CC is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with GNU CC; see the file COPYING.  If not, write to
+the Free Software Foundation, 59 Temple Place - Suite 330,
+Boston, MA 02111-1307, USA.  */
+
+#include "config.h"
+#include "system.h"
+#include "cppdefault.h"
+#include "cygwin.h"
+
+#include "safe-ctype.h"
+#include <string.h>
+
+/*
+static void remove_w32api PARAMS ((void));
+*/
+static void add_mingw PARAMS ((void));
+static void set_mingw PARAMS((void)) __attribute__ ((constructor));
+
+static void
+add_mingw ()
+{
+  char **av;
+  char *p;
+  for (av = cvt_to_mingw; *av; av++)
+    {
+      int sawcygwin = 0;
+      while ((p = strstr (*av, "-cygwin")))
+	{
+	  char *over = p + sizeof ("-cygwin") - 1;
+	  memmove (over + 1, over, strlen (over));
+	  memcpy (p, "-mingw32", sizeof("-mingw32") - 1);
+	  p = ++over;
+	  while (ISALNUM (*p))
+	    p++;
+	  strcpy (over, p);
+	  sawcygwin = 1;
+	}
+      if (!sawcygwin && !strstr (*av, "mingw"))
+	strcat (*av, CYGWIN_MINGW_SUBDIR);
+    }
+}
+
+static void
+set_mingw ()
+{
+  char *env = getenv ("GCC_CYGWIN_MINGW");
+  if (env && *env == '1')
+    add_mingw ();
+}
diff --git a/gcc/config/i386/gthr-win32.c b/gcc/config/i386/gthr-win32.c
index 5510f10..40a5932 100644
--- a/gcc/config/i386/gthr-win32.c
+++ b/gcc/config/i386/gthr-win32.c
@@ -36,7 +36,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 #endif
 #include <gthr-win32.h>
 #include <windows.h>
-
+#include <errno.h>
 /* Windows32 threads specific definitions. The windows32 threading model
    does not map well into pthread-inspired gcc's threading model, and so 
    there are caveats one needs to be aware of.
diff --git a/gcc/config/i386/i386-protos.h b/gcc/config/i386/i386-protos.h
index 53b5601..bfeb857 100644
--- a/gcc/config/i386/i386-protos.h
+++ b/gcc/config/i386/i386-protos.h
@@ -235,3 +235,4 @@ extern void i386_pe_asm_file_end PARAMS ((FILE *));
 extern void i386_pe_encode_section_info PARAMS ((tree, int));
 extern const char *i386_pe_strip_name_encoding PARAMS ((const char *));
 extern const char *i386_pe_strip_name_encoding_full PARAMS ((const char *));
+extern void i386_pe_output_labelref PARAMS ((FILE *, const char *));
diff --git a/gcc/config/i386/i386.c b/gcc/config/i386/i386.c
index 664cdad..958648f 100644
--- a/gcc/config/i386/i386.c
+++ b/gcc/config/i386/i386.c
@@ -802,6 +802,7 @@ static int ix86_fntype_regparm PARAMS ((tree));
 const struct attribute_spec ix86_attribute_table[];
 static tree ix86_handle_cdecl_attribute PARAMS ((tree *, tree, tree, int, bool *));
 static tree ix86_handle_regparm_attribute PARAMS ((tree *, tree, tree, int, bool *));
+static bool ix86_ms_bitfield_layout_p PARAMS ((tree));
 static int ix86_value_regno PARAMS ((enum machine_mode));
 static bool contains_128bit_aligned_vector_p PARAMS ((tree));
 
@@ -909,6 +910,9 @@ static enum x86_64_reg_class merge_classes PARAMS ((enum x86_64_reg_class,
 #undef TARGET_CANNOT_FORCE_CONST_MEM
 #define TARGET_CANNOT_FORCE_CONST_MEM ix86_cannot_force_const_mem
 
+#undef TARGET_MS_BITFIELD_LAYOUT_P
+#define TARGET_MS_BITFIELD_LAYOUT_P ix86_ms_bitfield_layout_p
+
 #undef TARGET_ASM_OUTPUT_MI_THUNK
 #define TARGET_ASM_OUTPUT_MI_THUNK x86_output_mi_thunk
 #undef TARGET_ASM_CAN_OUTPUT_MI_THUNK
@@ -1391,6 +1395,9 @@ const struct attribute_spec ix86_attribute_table[] =
   /* Stdcall attribute says callee is responsible for popping arguments
      if they are not variable.  */
   { "stdcall",   0, 0, false, true,  true,  ix86_handle_cdecl_attribute },
+  /* Fastcall attribute says callee is responsible for popping arguments
+     if they are not variable.  */
+  { "fastcall",  0, 0, false, true,  true,  ix86_handle_cdecl_attribute },
   /* Cdecl attribute says the callee is a normal C declaration */
   { "cdecl",     0, 0, false, true,  true,  ix86_handle_cdecl_attribute },
   /* Regparm attribute specifies how many integer arguments are to be
@@ -1489,6 +1496,11 @@ ix86_comp_type_attributes (type1, type2)
   if (TREE_CODE (type1) != FUNCTION_TYPE)
     return 1;
 
+  /*  Check for mismatched fastcall types */ 
+  if (!lookup_attribute ("fastcall", TYPE_ATTRIBUTES (type1))
+      != !lookup_attribute ("fastcall", TYPE_ATTRIBUTES (type2)))
+    return 0; 
+
   /* Check for mismatched return types (cdecl vs stdcall).  */
   if (!lookup_attribute (rtdstr, TYPE_ATTRIBUTES (type1))
       != !lookup_attribute (rtdstr, TYPE_ATTRIBUTES (type2)))
@@ -1511,6 +1523,22 @@ ix86_fntype_regparm (type)
     return ix86_regparm;
 }
 
+/* Return true if EAX is live at the start of the function.  Used by 
+   ix86_expand_prologue to determine if we need special help before
+   calling allocate_stack_worker.  */
+
+static bool
+ix86_eax_live_at_start_p (void)
+{
+  /* Cheat.  Don't bother working forward from ix86_function_regparm
+     to the function type to whether an actual argument is located in
+     eax.  Instead just look at cfg info, which is still close enough
+     to correct at this point.  This gives false positives for broken
+     functions that might use uninitialized data that happens to be
+     allocated in eax, but who cares?  */
+  return REGNO_REG_SET_P (ENTRY_BLOCK_PTR->global_live_at_end, 0);
+}
+
 /* Value is the number of bytes of arguments automatically
    popped when returning from a subroutine call.
    FUNDECL is the declaration node of the function (as a tree),
@@ -1536,11 +1564,12 @@ ix86_return_pops_args (fundecl, funtype, size)
 {
   int rtd = TARGET_RTD && (!fundecl || TREE_CODE (fundecl) != IDENTIFIER_NODE);
 
-    /* Cdecl functions override -mrtd, and never pop the stack.  */
+  /* Cdecl functions override -mrtd, and never pop the stack.  */
   if (! lookup_attribute ("cdecl", TYPE_ATTRIBUTES (funtype))) {
 
-    /* Stdcall functions will pop the stack if not variable args.  */
-    if (lookup_attribute ("stdcall", TYPE_ATTRIBUTES (funtype)))
+    /* Stdcall and fastcall functions will pop the stack if not variable args. */
+    if (lookup_attribute ("stdcall", TYPE_ATTRIBUTES (funtype))
+        || lookup_attribute ("fastcall", TYPE_ATTRIBUTES (funtype)))
       rtd = 1;
 
     if (rtd
@@ -1626,6 +1655,16 @@ init_cumulative_args (cum, fntype, libname)
     }
   cum->maybe_vaarg = false;
 
+  /* Use ecx and edx registers if function has fastcall attribute */
+  if (fntype && !TARGET_64BIT)
+    {
+      if (lookup_attribute ("fastcall", TYPE_ATTRIBUTES (fntype)))
+	{
+	  cum->nregs = 2;
+	  cum->fastcall = 1;
+	}
+    }
+
   /* Determine if this function has variable arguments.  This is
      indicated by the last argument being 'void_type_mode' if there
      are no variable arguments.  If there are variable arguments, then
@@ -1640,7 +1679,10 @@ init_cumulative_args (cum, fntype, libname)
 	  if (next_param == 0 && TREE_VALUE (param) != void_type_node)
 	    {
 	      if (!TARGET_64BIT)
-		cum->nregs = 0;
+		{
+		  cum->nregs = 0;
+		  cum->fastcall = 0;
+		}
 	      cum->maybe_vaarg = true;
 	    }
 	}
@@ -2297,7 +2339,22 @@ function_arg (cum, mode, type, named)
       case HImode:
       case QImode:
 	if (words <= cum->nregs)
-	  ret = gen_rtx_REG (mode, cum->regno);
+ 	{
+ 	  int regno = cum->regno;
+
+ 	  /* Fastcall allocates the first two DWORD (SImode) or
+ 	     smaller arguments to ECX and EDX.  */
+ 	  if (cum->fastcall)
+ 	    {
+ 	      if (mode == BLKmode || mode == DImode)
+ 		break;
+ 
+ 	      /* ECX not EAX is the first allocated register.  */
+ 	      if (regno == 0)
+ 		regno = 2;
+ 	    }
+ 	  ret = gen_rtx_REG (mode, regno);
+ 	}
 	break;
       case TImode:
 	if (cum->sse_nregs)
@@ -2504,6 +2561,9 @@ ix86_return_in_memory (type)
 
   size = int_size_in_bytes (type);
 
+  if (MS_AGGREGATE_RETURN && AGGREGATE_TYPE_P (type) && size <= 8)
+    return 0;
+
   if (VECTOR_MODE_P (mode) || mode == TImode)
     {
       /* User-created vectors small enough to fit in EAX.  */
@@ -2531,7 +2591,8 @@ ix86_return_in_memory (type)
 	  if (!warned)
 	    {
 	      warned = true;
-	      warning ("SSE vector return without SSE enabled changes the ABI");
+	      warning ("SSE vector return without SSE enabled "
+		       "changes the ABI");
 	    }
 	  return 1;
 	}
@@ -4760,28 +4821,32 @@ ix86_expand_prologue ()
     }
   else
     {
-      /* ??? Is this only valid for Win32?  */
-
-      rtx arg0, sym;
+      /* Only valid for Win32.  */
+      rtx eax = gen_rtx_REG (SImode, 0);
+      bool eax_live = ix86_eax_live_at_start_p ();
 
       if (TARGET_64BIT)
-	abort ();
+        abort ();
 
-      arg0 = gen_rtx_REG (SImode, 0);
-      emit_move_insn (arg0, GEN_INT (allocate));
+      if (eax_live)
+	{
+	  emit_insn (gen_push (eax));
+	  allocate -= 4;
+	}
 
-      sym = gen_rtx_MEM (FUNCTION_MODE,
-			 gen_rtx_SYMBOL_REF (Pmode, "_alloca"));
-      insn = emit_call_insn (gen_call (sym, const0_rtx, constm1_rtx));
+      insn = emit_move_insn (eax, GEN_INT (allocate));
+      RTX_FRAME_RELATED_P (insn) = 1;
 
-      CALL_INSN_FUNCTION_USAGE (insn)
-	= gen_rtx_EXPR_LIST (VOIDmode, gen_rtx_USE (VOIDmode, arg0),
-			     CALL_INSN_FUNCTION_USAGE (insn));
+      insn = emit_insn (gen_allocate_stack_worker (eax));
+      RTX_FRAME_RELATED_P (insn) = 1;
 
-      /* Don't allow scheduling pass to move insns across __alloca
-         call.  */
-      emit_insn (gen_blockage (const0_rtx));
+      if (eax_live)
+	{
+	  rtx t = plus_constant (stack_pointer_rtx, allocate);
+	  emit_move_insn (eax, gen_rtx_MEM (SImode, t));
+	}
     }
+
   if (use_mov)
     {
       if (!frame_pointer_needed || !frame.to_allocate)
@@ -14726,6 +14791,17 @@ x86_output_mi_thunk (file, thunk, delta, vcall_offset, function)
     }
 }
 
+#ifndef TARGET_USE_MS_BITFIELD_LAYOUT
+#define TARGET_USE_MS_BITFIELD_LAYOUT 0
+#endif
+
+static bool
+ix86_ms_bitfield_layout_p (record_type)
+     tree record_type ATTRIBUTE_UNUSED;
+{
+  return TARGET_USE_MS_BITFIELD_LAYOUT;
+}
+
 int
 x86_field_alignment (field, computed)
      tree field;
diff --git a/gcc/config/i386/i386.h b/gcc/config/i386/i386.h
index 3806a08..3cd6341 100644
--- a/gcc/config/i386/i386.h
+++ b/gcc/config/i386/i386.h
@@ -1191,6 +1191,8 @@ do {									\
 #define RETURN_IN_MEMORY(TYPE) \
   ix86_return_in_memory (TYPE)
 
+/* This is overriden by <cygming.h>.  */
+#define MS_AGGREGATE_RETURN 0
 
 /* Define the classes of registers for register constraints in the
    machine description.  Also define ranges of constants.
@@ -1706,6 +1708,7 @@ typedef struct ix86_args {
   int words;			/* # words passed so far */
   int nregs;			/* # registers available for passing */
   int regno;			/* next available register number */
+  int fastcall;		/* fastcall calling convention is used */
   int sse_words;		/* # sse words passed so far */
   int sse_nregs;		/* # sse registers available for passing */
   int sse_regno;		/* next available sse register number */
@@ -3524,7 +3527,7 @@ enum fp_cw_mode {FP_CW_STORED, FP_CW_UNINITIALIZED, FP_CW_ANY};
 
 #define MACHINE_DEPENDENT_REORG(X) x86_machine_dependent_reorg(X)
 
-#define DLL_IMPORT_EXPORT_PREFIX '@'
+#define DLL_IMPORT_EXPORT_PREFIX '#'
 
 /*
 Local variables:
diff --git a/gcc/config/i386/mingw32-1.c b/gcc/config/i386/mingw32-1.c
new file mode 100644
index 0000000..e4971c4
--- /dev/null
+++ b/gcc/config/i386/mingw32-1.c
@@ -0,0 +1,44 @@
+/* This replaces the use of stat and struct stat.st_ino to determine if
+   files are different in gcc.c (do_spec_1) handling of --save-temps
+   switch.
+   Contributed by Danny Smith (dannysmith@users.sourceforge.net)
+   Copyright 2003 Free Software Foundation, Inc.
+
+This file is part of GCC.
+
+GCC is free software; you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation; either version 2, or (at your option)
+any later version.
+
+GCC is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with GCC; see the file COPYING.  If not, write to
+the Free Software Foundation, 59 Temple Place - Suite 330,
+Boston, MA 02111-1307, USA.  */
+
+#define WIN32_LEAN_AND_MEAN
+#include <windows.h>
+
+/* Return non-zero if src and dst filenames do not refer to same files. */
+
+int w32_file_id_cmp (const char *, const char *);
+
+int
+w32_file_id_cmp (src, dst)
+    const char * src;
+    const char * dst;
+{
+  char fullpath_src[MAX_PATH];
+  char fullpath_dst[MAX_PATH];
+  char* pfilename;
+
+ /* Just compare full pathnames, without regard to case. */
+  GetFullPathName (src,MAX_PATH,fullpath_src,&pfilename);
+  GetFullPathName (dst,MAX_PATH,fullpath_dst,&pfilename);
+  return  (lstrcmpi (fullpath_src, fullpath_dst));
+}
diff --git a/gcc/config/i386/mingw32.h b/gcc/config/i386/mingw32.h
index 7f62fbd..7612259 100644
--- a/gcc/config/i386/mingw32.h
+++ b/gcc/config/i386/mingw32.h
@@ -20,52 +20,25 @@ along with GNU CC; see the file COPYING.  If not, write to
 the Free Software Foundation, 59 Temple Place - Suite 330,
 Boston, MA 02111-1307, USA.  */
 
-/* Most of this is the same as for cygwin, except for changing some
-   specs.  */
+#undef TARGET_VERSION
+#define TARGET_VERSION fprintf (stderr, " (x86 MinGW)"); 
 
-/* Mingw GCC, unlike Cygwin's, must be relocatable. This macro must 
-   be defined before any other files are included.  */
-#ifndef WIN32_NO_ABSOLUTE_INST_DIRS
-#define WIN32_NO_ABSOLUTE_INST_DIRS 1
-#endif
-
-#include "i386/cygwin.h"
-
-#define TARGET_EXECUTABLE_SUFFIX ".exe"
-
-/* See i386/crtdll.h for an altervative definition.  */
 #define EXTRA_OS_CPP_BUILTINS()					\
   do								\
     {								\
       builtin_define ("__MSVCRT__");				\
       builtin_define ("__MINGW32__");			   	\
+      builtin_define ("_WIN32");				\
+      builtin_define_std ("WIN32");				\
+      builtin_define_std ("WINNT");				\
     }								\
   while (0)
 
-#undef TARGET_OS_CPP_BUILTINS	/* From cygwin.h.  */
-#define TARGET_OS_CPP_BUILTINS()					\
-  do									\
-    {									\
-	builtin_define ("_WIN32");					\
-	builtin_define_std ("WIN32");					\
-	builtin_define_std ("WINNT");					\
-	builtin_define ("_X86_=1");					\
-	builtin_define ("__stdcall=__attribute__((__stdcall__))");	\
-	builtin_define ("__cdecl=__attribute__((__cdecl__))");		\
-	builtin_define ("__declspec(x)=__attribute__((x))");		\
-	if (!flag_iso)							\
-	  {								\
-	    builtin_define ("_stdcall=__attribute__((__stdcall__))");	\
-	    builtin_define ("_cdecl=__attribute__((__cdecl__))");	\
-	  }								\
-	EXTRA_OS_CPP_BUILTINS ();					\
-	builtin_assert ("system=winnt");				\
-    }									\
-  while (0)
 
-/* Specific a different directory for the standard include files.  */
+/* Override the standard choice of /usr/include as the default prefix
+   to try when searching for header files.  */
 #undef STANDARD_INCLUDE_DIR
-#define STANDARD_INCLUDE_DIR "/usr/local/mingw32/include"
+#define STANDARD_INCLUDE_DIR "/mingw/include"
 #undef STANDARD_INCLUDE_COMPONENT
 #define STANDARD_INCLUDE_COMPONENT "MINGW"
 
@@ -83,7 +56,7 @@ Boston, MA 02111-1307, USA.  */
 #define LINK_SPEC "%{mwindows:--subsystem windows} \
   %{mconsole:--subsystem console} \
   %{shared: %{mdll: %eshared and mdll are not compatible}} \
-  %{shared: --shared} %{mdll:--dll} \
+  %{shared: --shared --enable-auto-image-base} %{mdll:--dll} \
   %{static:-Bstatic} %{!static:-Bdynamic} \
   %{shared|mdll: -e _DllMainCRTStartup@12}"
 
@@ -94,11 +67,14 @@ Boston, MA 02111-1307, USA.  */
 
 #undef STARTFILE_SPEC
 #define STARTFILE_SPEC "%{shared|mdll:dllcrt2%O%s} \
-  %{!shared:%{!mdll:crt2%O%s}} %{pg:gcrt2%O%s}"
+  %{!shared:%{!mdll:crt2%O%s}} %{pg:gcrt2%O%s} %{!fno-exceptions:crtbegin%O%s}"
+
+#undef ENDFILE_SPEC
+#define ENDFILE_SPEC "%{!fno-exceptions:crtend%O%s}"
 
-/* MS runtime does not need a separate math library.  */
-#undef MATH_LIBRARY
-#define MATH_LIBRARY ""
+/* An additional prefix to try after the standard prefixes.  */
+#undef MD_STARTFILE_PREFIX
+#define MD_STARTFILE_PREFIX "/mingw/lib/"
 
 /* Output STRING, a string representing a filename, to FILE.
    We canonicalize it to be in Unix format (backslashe are replaced
@@ -131,3 +107,7 @@ do {						         \
 /* Define as short unsigned for compatability with MS runtime.  */
 #undef WINT_TYPE
 #define WINT_TYPE "short unsigned int"
+
+/* When we are ready for Dwarf2 EH handling */ 
+#undef DWARF2_UNWIND_INFO
+#define DWARF2_UNWIND_INFO 1
diff --git a/gcc/config/i386/t-cygming b/gcc/config/i386/t-cygming
new file mode 100644
index 0000000..3e14200
--- /dev/null
+++ b/gcc/config/i386/t-cygming
@@ -0,0 +1,21 @@
+LIB1ASMSRC = i386/cygwin.asm
+LIB1ASMFUNCS = _chkstk
+
+# cygwin always has a limits.h, but, depending upon how we are doing
+# the build, it may not be installed yet.
+LIMITS_H_TEST = true
+
+# If we are building next to winsup, this will let us find the real
+# limits.h when building libgcc2.  Otherwise, winsup must be installed
+# first.
+LIBGCC2_INCLUDES = -I$(srcdir)/../winsup/w32api/include
+
+LIB2FUNCS_EXTRA = $(srcdir)/config/i386/w32-shared-ptr.c
+
+winnt.o: $(srcdir)/config/i386/winnt.c $(RTL_H) $(TREE_H) $(CONFIG_H)
+	$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/i386/winnt.c
+
+# Don't run fixproto
+STMP_FIXPROTO=
+STMP_FIXINC=stmp-fixinc
+
diff --git a/gcc/config/i386/t-cygwin b/gcc/config/i386/t-cygwin
index 6fcb834..33848d9 100644
--- a/gcc/config/i386/t-cygwin
+++ b/gcc/config/i386/t-cygwin
@@ -1,21 +1,14 @@
-LIB1ASMSRC = i386/cygwin.asm
-LIB1ASMFUNCS = _chkstk
-
-# cygwin always has a limits.h, but, depending upon how we are doing
-# the build, it may not be installed yet.
-LIMITS_H_TEST = true
-
-T_CPPFLAGS=-DCYGWIN_CROSS_DIR=\"$(build_tooldir)\"
+EXTRA_GCC_OBJS = cygwin1.o
+EXTRA_CPP0_OBJS = cygwin2.o
 
 # If we are building next to winsup, this will let us find the real
 # limits.h when building libgcc2.  Otherwise, winsup must be installed
 # first.
-LIBGCC2_INCLUDES = -I$(srcdir)/../winsup/include \
-	-I$(srcdir)/../winsup/cygwin/include \
-	-I$(srcdir)/../winsup/w32api/include
+LIBGCC2_INCLUDES += -I$(srcdir)/../winsup/include \
+	-I$(srcdir)/../winsup/cygwin/include
 
-winnt.o: $(srcdir)/config/i386/winnt.c $(RTL_H) $(TREE_H) $(CONFIG_H) $(TM_P_H)
-	$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/i386/winnt.c
+cygwin1.o: $(srcdir)/config/i386/cygwin1.c
+	$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $?
 
-# Don't run fixproto
-STMP_FIXPROTO =
+cygwin2.o: $(srcdir)/config/i386/cygwin2.c
+	$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $?
diff --git a/gcc/config/i386/t-mingw32 b/gcc/config/i386/t-mingw32
index 28096f8..8276897 100644
--- a/gcc/config/i386/t-mingw32
+++ b/gcc/config/i386/t-mingw32
@@ -4,4 +4,7 @@
 USE_COLLECT2=
 
 # We hide calls to w32api needed for w32 thread support here:
-LIB2FUNCS_EXTRA = $(srcdir)/config/i386/gthr-win32.c
+LIB2FUNCS_EXTRA += $(srcdir)/config/i386/gthr-win32.c
+
+NATIVE_SYSTEM_HEADER_DIR = ${prefix}/include
+
diff --git a/gcc/config/i386/w32-shared-ptr.c b/gcc/config/i386/w32-shared-ptr.c
new file mode 100644
index 0000000..391736c
--- /dev/null
+++ b/gcc/config/i386/w32-shared-ptr.c
@@ -0,0 +1,244 @@
+/*
+ * w32-shared-ptr.c
+ *
+ * Share informations between EXE/DLLs without using an
+ * additional DLL.
+ *
+ * Contributors:
+ *  Created by Adriano dos Santos Fernandes <adrianosf@uol.com.br>
+ *  Enhanced by Thomas Pfaff <tpfaff@gmx.net>
+ *
+ *  THIS SOFTWARE IS NOT COPYRIGHTED
+ *
+ *  This source code is offered for use in the public domain. You may
+ *  use, modify or distribute it freely.
+ *
+ *  This code is distributed in the hope that it will be useful but
+ *  WITHOUT ANY WARRANTY. ALL WARRENTIES, EXPRESS OR IMPLIED ARE HEREBY
+ *  DISCLAMED. This includes but is not limited to warrenties of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
+ *
+ */
+
+#ifdef __MINGW32__
+#undef _CRTIMP
+#define _CRTIMP
+#endif
+
+#include <stdlib.h>
+#include <string.h>
+#ifdef __CYGWIN__
+#include <unistd.h>
+#endif
+#ifdef DEBUG
+#include <stdio.h>
+#endif
+
+#include "tconfig.h"
+#include "tsystem.h"
+#include "gthr.h"
+
+#include "w32-shared-ptr.h"
+
+#if defined (__CYGWIN__) /* FIXME: This shouldn't be necessary. */
+typedef unsigned short ATOM;
+ATOM __attribute__ ((stdcall)) AddAtomA(const char*);
+ATOM __attribute__  ((stdcall)) FindAtomA(const char*);
+unsigned int __attribute__  ((stdcall)) GetAtomNameA(ATOM,char*,int);
+#else
+#define WIN32_LEAN_AND_MEAN
+#include <windows.h>
+#endif
+
+W32_EH_SHARED *  __w32_sharedptr;
+
+void ** __w32_sharedptr_terminate;
+void ** __w32_sharedptr_unexpected;
+
+
+#define W32_ATOM_SUFFIX "-LIBGCCW32-EH"
+
+#ifdef __USING_SJLJ_EXCEPTIONS__
+#define SJLJ_SUFFIX "-SJLJ"
+#else
+#define SJLJ_SUFFIX
+#endif
+
+#if __GTHREADS
+#define GTHR_SUFFIX "-GTHR"
+#else
+#define GTHR_SUFFIX
+#endif
+
+#ifdef __CYGWIN__
+#define SYS_SUFFIX "-CYGWIN"
+#else
+#define SYS_SUFFIX "-MINGW32"
+#endif
+
+static const char w32_atom_suffix[] = W32_ATOM_SUFFIX SJLJ_SUFFIX GTHR_SUFFIX SYS_SUFFIX;
+
+#define SHAREDPTR_BIT1          'A'
+#define SHAREDPTR_BIT0          'a'
+
+#define SHAREDPTR_BITS          (sizeof(W32_EH_SHARED*)*8)
+#define SHARED_ATOM_NAME_LEN    (SHAREDPTR_BITS + sizeof(w32_atom_suffix))
+
+static ATOM __w32_sharedptr_set (W32_EH_SHARED *w32_sharedptr);
+static W32_EH_SHARED * __w32_sharedptr_get (ATOM atom);
+static void __w32_sharedptr_default_unexpected(void);
+
+#ifdef __CYGWIN__
+static void __w32_sharedptr_fixup_after_fork (void);
+#endif
+
+static void __w32_sharedptr_default_unexpected(void)
+{
+  ((void(*)(void))__w32_sharedptr->terminate)();
+}
+
+static void __w32_eh_shared_initialize (W32_EH_SHARED *w32_sharedptr)
+{
+#ifdef __GTHREAD_MUTEX_INIT
+  static __gthread_mutex_t dw2_object_mutex = __GTHREAD_MUTEX_INIT;
+#else
+  static __gthread_mutex_t dw2_object_mutex;
+#endif
+#ifdef __GTHREAD_MUTEX_INIT_FUNCTION
+  static __gthread_once_t dw2_once = __GTHREAD_ONCE_INIT;
+#endif
+
+#ifdef __USING_SJLJ_EXCEPTIONS__ 
+#if __GTHREADS
+  static __gthread_key_t sjl_fc_key;
+  static __gthread_once_t sjl_once = __GTHREAD_ONCE_INIT;
+#endif
+#endif
+
+  memset (w32_sharedptr, 0, sizeof(W32_EH_SHARED));
+
+  w32_sharedptr->size = sizeof(W32_EH_SHARED);
+
+  w32_sharedptr->terminate = (void*)abort;
+  w32_sharedptr->unexpected = (void*)__w32_sharedptr_default_unexpected;
+
+  w32_sharedptr->dw2_object_mutex = dw2_object_mutex;
+#ifdef __GTHREAD_MUTEX_INIT_FUNCTION
+  w32_sharedptr->dw2_once = dw2_once;
+#endif
+
+#ifdef __USING_SJLJ_EXCEPTIONS__
+  w32_sharedptr->sjlj_fc_static = NULL;
+#if __GTHREADS
+  w32_sharedptr->sjlj_fc_key = sjl_fc_key;
+  w32_sharedptr->sjlj_use_fc_key = -1;
+  w32_sharedptr->sjlj_once = sjl_once;
+#endif
+#endif
+}
+
+void __w32_sharedptr_initialize (void) 
+{
+  W32_EH_SHARED *w32_sharedptr;
+  char s[SHARED_ATOM_NAME_LEN];
+  ATOM atom;
+
+  if (__w32_sharedptr)
+    return;
+
+  memset (s, SHAREDPTR_BIT1, SHAREDPTR_BITS);
+  memcpy (&(s[SHAREDPTR_BITS]), w32_atom_suffix, sizeof(w32_atom_suffix));
+
+  atom = FindAtomA (s);
+  if (atom)
+    w32_sharedptr = __w32_sharedptr_get (atom);
+  else
+    {
+      w32_sharedptr = (W32_EH_SHARED *) malloc (sizeof(W32_EH_SHARED));
+      if (!w32_sharedptr)
+        abort ();
+
+      __w32_eh_shared_initialize (w32_sharedptr);
+
+      if (__w32_sharedptr_set (w32_sharedptr))
+        {
+#ifdef __CYGWIN__
+          /* recreate atom after fork */
+          pthread_atfork (NULL,NULL,__w32_sharedptr_fixup_after_fork);
+#endif
+        }
+      else
+        {
+          free (w32_sharedptr);
+          w32_sharedptr = __w32_sharedptr_get (FindAtomA (s));
+        }
+    }
+
+  __w32_sharedptr_terminate  = &w32_sharedptr->terminate;
+  __w32_sharedptr_unexpected = &w32_sharedptr->unexpected;
+
+  /* THIS MUST BE THE LAST STEP */
+  __w32_sharedptr = w32_sharedptr;
+}
+
+static ATOM __w32_sharedptr_set (W32_EH_SHARED *w32_sharedptr)
+{
+  int i;
+  int bit;
+  char s[SHARED_ATOM_NAME_LEN];
+  ATOM atom;
+
+  /* This should optimize out entirely by O2 */
+  if (sizeof(bit) != sizeof(w32_sharedptr))
+    abort ();
+
+  for (i = SHAREDPTR_BITS - 1, bit = 1; i >= 0; --i, bit <<= 1)
+    s[i] = ((int)w32_sharedptr) & bit ? SHAREDPTR_BIT1 :
+      SHAREDPTR_BIT0;
+
+  memcpy (&(s[SHAREDPTR_BITS]), w32_atom_suffix, sizeof(w32_atom_suffix));
+
+  atom = AddAtomA (s);
+  /* Sanity check to avoid race by concurrent initialization */
+  if (!atom || __w32_sharedptr_get (atom) != w32_sharedptr)
+    return 0;
+
+#ifdef DEBUG
+  printf ("%s: set sharedptr: (%p):%s\n",
+          __FUNCTION__,w32_sharedptr, s);
+#endif
+
+  return atom;
+}
+
+static W32_EH_SHARED *__w32_sharedptr_get (ATOM atom)
+{
+  W32_EH_SHARED *w32_sharedptr = NULL;
+  int i;
+  int bit;
+  char s[SHARED_ATOM_NAME_LEN];
+
+  /* If this fails something went wrong */
+  if (!GetAtomNameA (atom, s, sizeof(s)))
+    abort ();
+
+  for (i = SHAREDPTR_BITS - 1, bit = 1; i >= 0; --i, bit <<= 1)
+    (int)w32_sharedptr |= s[i] == SHAREDPTR_BIT1 ? bit : 0;
+
+  if (w32_sharedptr->size != sizeof(W32_EH_SHARED))
+    abort ();
+
+#ifdef DEBUG
+  printf ("%s: got sharedptr (%p): %s\n",
+          __FUNCTION__, w32_sharedptr, s);
+#endif
+  return w32_sharedptr;
+}
+
+#ifdef __CYGWIN__
+static void __w32_sharedptr_fixup_after_fork (void)
+{
+  if (!__w32_sharedptr_set (__w32_sharedptr))
+    abort ();
+}
+#endif
diff --git a/gcc/config/i386/w32-shared-ptr.h b/gcc/config/i386/w32-shared-ptr.h
new file mode 100644
index 0000000..d056a31
--- /dev/null
+++ b/gcc/config/i386/w32-shared-ptr.h
@@ -0,0 +1,65 @@
+/*
+ * w32-shared-ptr.h
+ *
+ * Contributors:
+ *  Created by Thomas Pfaff <tpfaff@gmx.net>
+ *
+ *  THIS SOFTWARE IS NOT COPYRIGHTED
+ *
+ *  This source code is offered for use in the public domain. You may
+ *  use, modify or distribute it freely.
+ *
+ *  This code is distributed in the hope that it will be useful but
+ *  WITHOUT ANY WARRANTY. ALL WARRENTIES, EXPRESS OR IMPLIED ARE HEREBY
+ *  DISCLAMED. This includes but is not limited to warrenties of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
+ *
+ */
+
+#ifndef GCC_W32_SHARED_PTR_H
+#define GCC_W32_SHARED_PTR_H
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+typedef struct
+{
+  int size;
+  
+  void *terminate;
+  void *unexpected;
+
+  void *dw2_unseen_objects;
+  void *dw2_seen_objects;
+  __gthread_mutex_t dw2_object_mutex;
+#ifdef __GTHREAD_MUTEX_INIT_FUNCTION
+  __gthread_once_t dw2_once;
+#endif
+  void *dw2_marker;
+
+#ifdef __USING_SJLJ_EXCEPTIONS__ 
+  void* sjlj_fc_static;
+#if __GTHREADS
+  __gthread_key_t sjlj_fc_key;
+  int sjlj_use_fc_key;
+  __gthread_once_t sjlj_once;
+#endif
+#endif
+
+} W32_EH_SHARED;
+
+extern W32_EH_SHARED *__w32_sharedptr;
+
+extern void ** __w32_sharedptr_terminate;
+extern void ** __w32_sharedptr_unexpected;
+
+extern void __w32_sharedptr_initialize (void);
+
+#define W32_SHAREDPTR_INITIALIZE()  if (!__w32_sharedptr) __w32_sharedptr_initialize ()
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif
diff --git a/gcc/config/i386/winnt.c b/gcc/config/i386/winnt.c
index 01493a2..589a80b 100644
--- a/gcc/config/i386/winnt.c
+++ b/gcc/config/i386/winnt.c
@@ -45,11 +45,26 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 */
 
 static tree associated_type PARAMS ((tree));
-const char * gen_stdcall_suffix PARAMS ((tree));
-int i386_pe_dllexport_p PARAMS ((tree));
-int i386_pe_dllimport_p PARAMS ((tree));
-void i386_pe_mark_dllexport PARAMS ((tree));
-void i386_pe_mark_dllimport PARAMS ((tree));
+static const char * gen_stdcall_suffix PARAMS ((tree));
+static const char * gen_fastcall_suffix PARAMS ((tree));
+static int i386_pe_dllexport_p PARAMS ((tree));
+static int i386_pe_dllimport_p PARAMS ((tree));
+static void i386_pe_mark_dllexport PARAMS ((tree));
+static void i386_pe_mark_dllimport PARAMS ((tree));
+
+/* This is we how mark internal identifiers with dllimport or dllexport
+   attributes.  */
+#ifndef DLL_IMPORT_PREFIX
+#define DLL_IMPORT_PREFIX "#i."
+#endif
+#ifndef DLL_EXPORT_PREFIX
+#define DLL_EXPORT_PREFIX "#e."
+#endif
+
+#ifndef FASTCALL_PREFIX
+#define FASTCALL_PREFIX '@'
+#endif
+
 
 /* Handle a "dllimport" or "dllexport" attribute;
    arguments as in struct attribute_spec.handler.  */
@@ -73,7 +88,7 @@ ix86_handle_dll_attribute (pnode, name, args, flags, no_add_attrs)
 	  *no_add_attrs = true;
 	  return tree_cons (name, args, NULL_TREE);
 	}
-      if (TREE_CODE (node) != RECORD_TYPE && TREE_CODE (node) != UNION_TYPE)
+       if (TREE_CODE (node) != RECORD_TYPE && TREE_CODE (node) != UNION_TYPE)
 	{
 	  warning ("`%s' attribute ignored", IDENTIFIER_POINTER (name));
 	  *no_add_attrs = true;
@@ -86,12 +101,15 @@ ix86_handle_dll_attribute (pnode, name, args, flags, no_add_attrs)
      any damage.  */
   else if (is_attribute_p ("dllimport", name))
     {
-      /* Like MS, treat definition of dllimported variables and
-	 non-inlined functions on declaration as syntax errors.
-	 We allow the attribute for function definitions if declared
-	 inline, but just ignore it in i386_pe_dllimport_p.  */
-      if (TREE_CODE (node) == FUNCTION_DECL  && DECL_INITIAL (node)
-          && !DECL_INLINE (node))
+      /* We ignore the attribute for inline functions  */
+      if (TREE_CODE (node) == FUNCTION_DECL && DECL_INLINE (node))
+        {
+	  if (extra_warnings)
+	    warning_with_decl (node, "inline function '%s' is declared as dllimport: attribute ignored.");
+	  return 0;
+	}
+     /* Treat definition of non-inlined functions on declaration as syntax errors.  */
+       else if (TREE_CODE (node) == FUNCTION_DECL  && DECL_INITIAL (node))
 	{
 	  error_with_decl (node, "function `%s' definition is marked dllimport.");
 	  *no_add_attrs = true;
@@ -99,6 +117,7 @@ ix86_handle_dll_attribute (pnode, name, args, flags, no_add_attrs)
 
       else if (TREE_CODE (node) == VAR_DECL)
 	{
+  	  /* Definition of dllimported variables is a syntax error */
 	  if (DECL_INITIAL (node))
 	    {
 	      error_with_decl (node,"variable `%s' definition is marked dllimport.");
@@ -161,9 +180,11 @@ associated_type (decl)
      to the containing class.  So we look at the 'this' arg.  */
   if (TREE_CODE (TREE_TYPE (decl)) == METHOD_TYPE)
     {
-      /* Artificial methods are not affected by the import/export status of
-	 their class unless they are virtual.  */
-      if (! DECL_ARTIFICIAL (decl) || DECL_VINDEX (decl))
+      /* Artificial methods are not affected by the import/export status
+	 of their class unless they are COMDAT.  Implicit copy ctor's and
+	 dtor's are not affected by class status but virtual and
+	 non-virtual thunks are.  */
+      if (!DECL_ARTIFICIAL (decl) || DECL_COMDAT (decl))
 	t = TREE_TYPE (TREE_VALUE (TYPE_ARG_TYPES (TREE_TYPE (decl))));
     }
   else if (DECL_CONTEXT (decl)
@@ -175,7 +196,7 @@ associated_type (decl)
 
 /* Return nonzero if DECL is a dllexport'd object.  */
 
-int
+static int
 i386_pe_dllexport_p (decl)
      tree decl;
 {
@@ -202,7 +223,7 @@ i386_pe_dllexport_p (decl)
 
 /* Return nonzero if DECL is a dllimport'd object.  */
 
-int
+static int
 i386_pe_dllimport_p (decl)
      tree decl;
 {
@@ -230,12 +251,17 @@ i386_pe_dllimport_p (decl)
 
   if (imp)
     {
+      /* We ignore the dllimport attribute for inline member functions.
+	 This differs from MSVC behavior which treats it like GNUC
+     	 'extern inline' extension.   */
+      if (TREE_CODE (decl) == FUNCTION_DECL && DECL_INLINE (decl))
+	return 0;
+
       /* Don't mark defined functions as dllimport.  If the definition
 	 itself was marked with dllimport, than ix86_handle_dll_attribute
 	 reports an error. This handles the case when the definition
 	 overrides an earlier declaration.  */
-      if (TREE_CODE (decl) ==  FUNCTION_DECL && DECL_INITIAL (decl)
-	  && !DECL_INLINE (decl))
+      else if (TREE_CODE (decl) ==  FUNCTION_DECL && DECL_INITIAL (decl))
 	{
 	   /* Don't warn about artificial methods.  */
 	  if (!DECL_ARTIFICIAL (decl))
@@ -243,16 +269,6 @@ i386_pe_dllimport_p (decl)
 	  return 0;
 	}
 
-      /* We ignore the dllimport attribute for inline member functions.
-	 This differs from MSVC behaviour which treats it like GNUC
-     	 'extern inline' extension.   */
-      else if (TREE_CODE (decl) == FUNCTION_DECL && DECL_INLINE (decl))
-        {
-	  if (extra_warnings)
-	    warning_with_decl (decl, "inline function '%s' is declared as dllimport: attribute ignored.");
-	  return 0;
-	}
-
       /*  Don't allow definitions of static data members in dllimport class,
 	  Just ignore attribute for vtable data.  */
       else if (TREE_CODE (decl) == VAR_DECL
@@ -266,10 +282,12 @@ i386_pe_dllimport_p (decl)
 
       /* Since we can't treat a pointer to a dllimport'd symbol as a
 	 constant address, we turn off the attribute on C++ virtual
-	 methods to allow creation of vtables using thunks. */
+	 methods to allow creation of vtables using thunks.  Don't mark
+	 artificial methods either (in associated_type, only COMDAT
+	 artificial method get import status from class context).  */
       else if (TREE_CODE (TREE_TYPE (decl)) == METHOD_TYPE
-	       && (DECL_VIRTUAL_P (decl)))
-           return 0;
+	       && (DECL_VIRTUAL_P (decl) || DECL_ARTIFICIAL (decl)))
+	return 0;
 
       return 1;
     }
@@ -283,8 +301,8 @@ int
 i386_pe_dllexport_name_p (symbol)
      const char *symbol;
 {
-  return symbol[0] == DLL_IMPORT_EXPORT_PREFIX
-         && symbol[1] == 'e' && symbol[2] == '.';
+  return (strncmp (DLL_EXPORT_PREFIX, symbol,
+		   strlen (DLL_EXPORT_PREFIX)) == 0);
 }
 
 /* Return nonzero if SYMBOL is marked as being dllimport'd.  */
@@ -293,14 +311,14 @@ int
 i386_pe_dllimport_name_p (symbol)
      const char *symbol;
 {
-  return symbol[0] == DLL_IMPORT_EXPORT_PREFIX
-         && symbol[1] == 'i' && symbol[2] == '.';
+  return (strncmp (DLL_IMPORT_PREFIX, symbol,
+		   strlen (DLL_IMPORT_PREFIX)) == 0);
 }
 
 /* Mark a DECL as being dllexport'd.
    Note that we override the previous setting (eg: dllimport).  */
 
-void
+static void
 i386_pe_mark_dllexport (decl)
      tree decl;
 {
@@ -321,14 +339,14 @@ i386_pe_mark_dllexport (decl)
     {
       warning_with_decl (decl,"inconsistent dll linkage for '%s': dllexport assumed.");
      /* Remove DLL_IMPORT_PREFIX.  */
-      oldname += 9;
+      oldname += strlen (DLL_IMPORT_PREFIX);
       DECL_NON_ADDR_CONST_P (decl) = 0;
     }
   else if (i386_pe_dllexport_name_p (oldname))
-    return; /* already done */
+    return;  /*  already done  */
 
-  newname = alloca (strlen (oldname) + 4);
-  sprintf (newname, "%ce.%s", DLL_IMPORT_EXPORT_PREFIX, oldname);
+  newname = alloca (strlen (DLL_EXPORT_PREFIX) + strlen (oldname) + 1);
+  sprintf (newname, "%s%s", DLL_EXPORT_PREFIX, oldname);
 
   /* We pass newname through get_identifier to ensure it has a unique
      address.  RTL processing can sometimes peek inside the symbol ref
@@ -342,7 +360,7 @@ i386_pe_mark_dllexport (decl)
 
 /* Mark a DECL as being dllimport'd.  */
 
-void
+static void
 i386_pe_mark_dllimport (decl)
      tree decl;
 {
@@ -373,11 +391,11 @@ i386_pe_mark_dllimport (decl)
 	  error_with_decl (decl, "failure in redeclaration of '%s': dllimport'd symbol lacks external linkage.");
 	  abort();
 	}
-    return;
+      return;
     }
 
-  newname = alloca (strlen (oldname) + 11);
-  sprintf (newname, "%ci._imp__%s", DLL_IMPORT_EXPORT_PREFIX, oldname);
+  newname = alloca (strlen (DLL_IMPORT_PREFIX) + strlen (oldname) + 1);
+  sprintf (newname, "%s%s", DLL_IMPORT_PREFIX, oldname);
 
   /* We pass newname through get_identifier to ensure it has a unique
      address.  RTL processing can sometimes peek inside the symbol ref
@@ -394,11 +412,52 @@ i386_pe_mark_dllimport (decl)
   DECL_NON_ADDR_CONST_P (decl) = 1;
 }
 
+/* Return string which is the former assembler name modified with a 
+   prefix consisting of FASTCALL_PREFIX and a suffix consisting of an
+   atsign (@) followed by the number of bytes of arguments.  */
+
+static const char *
+gen_fastcall_suffix (decl)
+  tree decl;
+{
+  int total = 0;
+
+  const char *asmname = IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (decl));
+  char *newsym;
+
+  if (TYPE_ARG_TYPES (TREE_TYPE (decl)))
+    if (TREE_VALUE (tree_last (TYPE_ARG_TYPES (TREE_TYPE (decl))))
+        == void_type_node)
+      {
+	tree formal_type = TYPE_ARG_TYPES (TREE_TYPE (decl));
+
+	/* Quit if we hit an incomplete type.  Error is reported
+	   by convert_arguments in c-typeck.c or cp/typeck.c.  */
+	while (TREE_VALUE (formal_type) != void_type_node
+	       && COMPLETE_TYPE_P (TREE_VALUE (formal_type)))
+	  {
+	    int parm_size
+	      = TREE_INT_CST_LOW (TYPE_SIZE (TREE_VALUE (formal_type)));
+	    /* Must round up to include padding.  This is done the same
+	       way as in store_one_arg.  */
+	    parm_size = ((parm_size + PARM_BOUNDARY - 1)
+			 / PARM_BOUNDARY * PARM_BOUNDARY);
+	    total += parm_size;
+	    formal_type = TREE_CHAIN (formal_type);
+	  }
+      }
+
+  /* Assume max of 8 base 10 digits in the suffix.  */ 
+  newsym = xmalloc (1 + strlen (asmname) + 1 + 8 + 1);
+  sprintf (newsym, "%c%s@%d", FASTCALL_PREFIX, asmname, total/BITS_PER_UNIT);
+  return IDENTIFIER_POINTER (get_identifier (newsym));
+}
+
 /* Return string which is the former assembler name modified with a 
    suffix consisting of an atsign (@) followed by the number of bytes of 
    arguments */
 
-const char *
+static const char *
 gen_stdcall_suffix (decl)
   tree decl;
 {
@@ -414,7 +473,10 @@ gen_stdcall_suffix (decl)
       {
 	tree formal_type = TYPE_ARG_TYPES (TREE_TYPE (decl));
 
-	while (TREE_VALUE (formal_type) != void_type_node)
+	/* Quit if we hit an incomplete type.  Error is reported
+	   by convert_arguments in c-typeck.c or cp/typeck.c.  */
+	while (TREE_VALUE (formal_type) != void_type_node
+	       && COMPLETE_TYPE_P (TREE_VALUE (formal_type)))
 	  {
 	    int parm_size
 	      = TREE_INT_CST_LOW (TYPE_SIZE (TREE_VALUE (formal_type)));
@@ -427,7 +489,8 @@ gen_stdcall_suffix (decl)
 	  }
       }
 
-  newsym = xmalloc (strlen (asmname) + 10);
+  /* Assume max of 8 base 10 digits in the suffix.  */ 
+  newsym = xmalloc (strlen (asmname) + 1 + 8 + 1);
   sprintf (newsym, "%s@%d", asmname, total/BITS_PER_UNIT);
   return IDENTIFIER_POINTER (get_identifier (newsym));
 }
@@ -437,7 +500,7 @@ i386_pe_encode_section_info (decl, first)
      tree decl;
      int first ATTRIBUTE_UNUSED;
 {
-  /* This bit is copied from i386.h.  */
+   /* This bit is copied from i386.h.  */
   if (optimize > 0 && TREE_CONSTANT (decl)
       && (!flag_writable_strings || TREE_CODE (decl) != STRING_CST))
     {
@@ -447,10 +510,16 @@ i386_pe_encode_section_info (decl, first)
     }
 
   if (TREE_CODE (decl) == FUNCTION_DECL)
-    if (lookup_attribute ("stdcall",
-			  TYPE_ATTRIBUTES (TREE_TYPE (decl))))
-      XEXP (DECL_RTL (decl), 0) = 
-	gen_rtx (SYMBOL_REF, Pmode, gen_stdcall_suffix (decl));
+    {
+      if (lookup_attribute ("stdcall",
+			    TYPE_ATTRIBUTES (TREE_TYPE (decl))))
+        XEXP (DECL_RTL (decl), 0) = 
+	  gen_rtx (SYMBOL_REF, Pmode, gen_stdcall_suffix (decl));
+      else if (lookup_attribute ("fastcall",
+				 TYPE_ATTRIBUTES (TREE_TYPE (decl))))
+        XEXP (DECL_RTL (decl), 0) =
+	  gen_rtx (SYMBOL_REF, Pmode, gen_fastcall_suffix (decl));
+    }
 
   /* Mark the decl so we can tell from the rtl whether the object is
      dllexport'd or dllimport'd.  This also handles dllexport/dllimport
@@ -462,8 +531,8 @@ i386_pe_encode_section_info (decl, first)
     i386_pe_mark_dllimport (decl);
   /* It might be that DECL has already been marked as dllimport, but a
      subsequent definition nullified that.  The attribute is gone but
-     DECL_RTL still has (DLL_IMPORT_EXPORT_PREFIX)i._imp__foo.  We need
-     to remove that. Ditto for the DECL_NON_ADDR_CONST_P flag.  */
+     DECL_RTL still has (DLL_IMPORT_PREFIX) prefixed. We need to remove
+     that. Ditto for the DECL_NON_ADDR_CONST_P flag.  */
   else if ((TREE_CODE (decl) == FUNCTION_DECL
 	    || TREE_CODE (decl) == VAR_DECL)
 	   && DECL_RTL (decl) != NULL_RTX
@@ -473,7 +542,8 @@ i386_pe_encode_section_info (decl, first)
 	   && i386_pe_dllimport_name_p (XSTR (XEXP (XEXP (DECL_RTL (decl), 0), 0), 0)))
     {
       const char *oldname = XSTR (XEXP (XEXP (DECL_RTL (decl), 0), 0), 0);
-      tree idp = get_identifier (oldname + 9);
+      /* Remove DLL_IMPORT_PREFIX.  */
+      tree idp = get_identifier (oldname + strlen (DLL_IMPORT_PREFIX));
       rtx newrtl = gen_rtx (SYMBOL_REF, Pmode, IDENTIFIER_POINTER (idp));
 
       warning_with_decl (decl, "'%s' %s after being referenced with dllimport linkage.",
@@ -489,14 +559,19 @@ i386_pe_encode_section_info (decl, first)
     }
 }
 
-/* Strip only the leading encoding, leaving the stdcall suffix.  */
+/* Strip only the leading encoding, leaving the stdcall suffix and fastcall
+   prefix if it exists.  */
 
 const char *
 i386_pe_strip_name_encoding (str)
      const char *str;
 {
-  if (*str == DLL_IMPORT_EXPORT_PREFIX)
-    str += 3;
+  if (strncmp (str, DLL_IMPORT_PREFIX, strlen (DLL_IMPORT_PREFIX))
+      == 0)
+    str += strlen (DLL_IMPORT_PREFIX);
+  else if (strncmp (str, DLL_EXPORT_PREFIX, strlen (DLL_EXPORT_PREFIX))
+	   == 0)
+    str += strlen (DLL_EXPORT_PREFIX);
   if (*str == '*')
     str += 1;
   return str;
@@ -511,13 +586,55 @@ i386_pe_strip_name_encoding_full (str)
   const char *p;
   const char *name = i386_pe_strip_name_encoding (str);
  
-  p = strchr (name, '@');
+  p = strchr (name + 1, '@');
   if (p)
     return ggc_alloc_string (name, p - name);
 
   return name;
 }
 
+/* Output a reference to a label. Fastcall symbols are prefixed with @,
+   whereas symbols for functions using other calling conventions don't
+   have a prefix (unless they are marked dllimport or dllexport).  */
+
+void i386_pe_output_labelref (stream, name)
+     FILE *stream;
+     const char *name;
+{
+  if (strncmp (name, DLL_IMPORT_PREFIX, strlen (DLL_IMPORT_PREFIX))
+      == 0)
+    /* A dll import */ 
+    {
+      if (name[strlen (DLL_IMPORT_PREFIX)] == FASTCALL_PREFIX)
+      /* A dllimport fastcall symbol.  */   
+        {
+          fprintf (stream, "__imp_%s",
+                   i386_pe_strip_name_encoding (name));
+        }
+      else
+      /* A dllimport non-fastcall symbol.  */ 
+        {
+          fprintf (stream, "__imp__%s",
+                   i386_pe_strip_name_encoding (name));
+        }
+    }
+  else if ((name[0] == FASTCALL_PREFIX)
+           || (strncmp (name, DLL_EXPORT_PREFIX, strlen (DLL_EXPORT_PREFIX))
+	       == 0 
+	       && name[strlen (DLL_EXPORT_PREFIX)] == FASTCALL_PREFIX))
+    /* A fastcall symbol.  */
+    {
+      fprintf (stream, "%s",
+               i386_pe_strip_name_encoding (name));
+    }
+  else
+    /* Everything else.  */
+    {
+      fprintf (stream, "%s%s", USER_LABEL_PREFIX,
+               i386_pe_strip_name_encoding (name));
+    }
+}
+
 void
 i386_pe_unique_section (decl, reloc)
      tree decl;
@@ -559,7 +676,7 @@ i386_pe_unique_section (decl, reloc)
    If the section has already been defined, to not allow it to have
    different attributes, as (1) this is ambiguous since we're not seeing
    all the declarations up front and (2) some assemblers (e.g. SVR4)
-   do not recoginize section redefinitions.  */
+   do not recognize section redefinitions.  */
 /* ??? This differs from the "standard" PE implementation in that we
    handle the SHARED variable attribute.  Should this be done for all
    PE targets?  */
@@ -615,18 +732,26 @@ i386_pe_section_type_flags (decl, name, reloc)
 }
 
 void
-i386_pe_asm_named_section (name, flags)
-     const char *name;
-     unsigned int flags;
+i386_pe_asm_named_section (const char *name, unsigned int flags)
 {
   char flagchars[8], *f = flagchars;
 
-  if (flags & SECTION_CODE)
-    *f++ = 'x';
-  if (flags & SECTION_WRITE)
-    *f++ = 'w';
-  if (flags & SECTION_PE_SHARED)
-    *f++ = 's';
+  if ((flags & (SECTION_CODE | SECTION_WRITE)) == 0)
+    /* readonly data */
+    {
+      *f++ ='d';  /* This is necessary for older versions of gas.  */
+      *f++ ='r';
+    }
+  else	
+    {
+      if (flags & SECTION_CODE)
+        *f++ = 'x';
+      if (flags & SECTION_WRITE)
+        *f++ = 'w';
+      if (flags & SECTION_PE_SHARED)
+        *f++ = 's';
+    }
+
   *f = '\0';
 
   fprintf (asm_out_file, "\t.section\t%s,\"%s\"\n", name, flagchars);
@@ -747,7 +872,8 @@ i386_pe_asm_file_end (file)
       if (! TREE_ASM_WRITTEN (decl) && TREE_SYMBOL_REFERENCED (decl))
 	{
 	  TREE_ASM_WRITTEN (decl) = 1;
-	  i386_pe_declare_function_type (file, p->name, TREE_PUBLIC (decl));
+	  i386_pe_declare_function_type (asm_out_file, p->name,
+			  		 TREE_PUBLIC (decl));
 	}
     }
 
@@ -757,7 +883,7 @@ i386_pe_asm_file_end (file)
       drectve_section ();
       for (q = export_head; q != NULL; q = q->next)
 	{
-	  fprintf (file, "\t.ascii \" -export:%s%s\"\n",
+	  fprintf (asm_out_file, "\t.ascii \" -export:%s%s\"\n",
 		   i386_pe_strip_name_encoding (q->name),
 		   (q->is_data) ? ",data" : "");
 	}
diff --git a/gcc/config/i386/x-mingw32 b/gcc/config/i386/x-mingw32
new file mode 100644
index 0000000..386876e
--- /dev/null
+++ b/gcc/config/i386/x-mingw32
@@ -0,0 +1,12 @@
+#
+# For HOST_FILE_ID_CMP for mingw32.  
+#
+EXTRA_GCC_OBJS = mingw32-1.o
+
+mingw32-1.o: $(srcdir)/config/i386/mingw32-1.c
+	$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $?
+#
+# Make local_include_dir relative to EXEC_PREFIX 
+#
+local_includedir=$(libsubdir)/$(unlibsubdir)/..`echo $(exec_prefix) | sed -e 's|^$(prefix)||' -e 's|/[^/]*|/..|g'`/include
+
diff --git a/gcc/config/i386/xm-mingw32.h b/gcc/config/i386/xm-mingw32.h
index 19b102d..4a05c91 100644
--- a/gcc/config/i386/xm-mingw32.h
+++ b/gcc/config/i386/xm-mingw32.h
@@ -1,6 +1,6 @@
 /* Configuration for GNU C-compiler for hosting on Windows32.
    using GNU tools and the Windows32 API Library.
-   Copyright (C) 1997, 1998, 1999, 2001 Free Software Foundation, Inc.
+   Copyright (C) 1997, 1998, 1999, 2001, 2002 Free Software Foundation, Inc.
 
 This file is part of GNU CC.
 
@@ -20,8 +20,8 @@ the Free Software Foundation, 59 Temple Place - Suite 330,
 Boston, MA 02111-1307, USA.  */
 
 /* Even though we support "/", allow "\" since everybody tests both.  */
-#define DIR_SEPARATOR '\\'
-#define DIR_SEPARATOR_2 '/'
+#define DIR_SEPARATOR '/'
+#define DIR_SEPARATOR_2 '\\'
 
 /* Mingw32 does not try to hide the underlying DOS-based file system
    like Cygwin does.  */
@@ -31,3 +31,19 @@ Boston, MA 02111-1307, USA.  */
 
 #undef PATH_SEPARATOR
 #define PATH_SEPARATOR ';'
+
+#define HOST_BIT_BUCKET "nul"
+
+#define HOST_WIDEST_INT long long
+#define HOST_BITS_PER_WIDEST_INT HOST_BITS_PER_LONGLONG
+#define HOST_WIDEST_INT_PRINT_DEC "%I64d"
+#define HOST_WIDEST_INT_PRINT_UNSIGNED "%I64u"
+#define HOST_WIDEST_INT_PRINT_HEX "0x%I64x"
+
+/* This replaces the use of stat to determine if files are different
+   in gcc.c (do_spec_1) handling of --save-temps switch.  */
+   
+extern int
+w32_file_id_cmp PARAMS((const char *, const char *));
+#define HOST_FILE_ID_CMP(SRC,DST) w32_file_id_cmp (SRC, DST)
+
diff --git a/gcc/cp/decl.c b/gcc/cp/decl.c
index c825a44..8065058 100644
--- a/gcc/cp/decl.c
+++ b/gcc/cp/decl.c
@@ -3724,7 +3724,7 @@ duplicate_decls (newdecl, olddecl)
 	  && TYPE_LANG_SPECIFIC (newtype) && TYPE_LANG_SPECIFIC (oldtype))
 	CLASSTYPE_FRIEND_CLASSES (newtype)
 	  = CLASSTYPE_FRIEND_CLASSES (oldtype);
-\
+
       DECL_ORIGINAL_TYPE (newdecl) = DECL_ORIGINAL_TYPE (olddecl);
     }
 
@@ -13765,7 +13765,13 @@ xref_tag (enum tag_types tag_code, tree name, tree attributes,
 	redeclare_class_template (ref, current_template_parms);
     }
 
-  TYPE_ATTRIBUTES (ref) = attributes;
+if (attributes)
+  {
+    if (!COMPLETE_TYPE_P (ref))
+      TYPE_ATTRIBUTES (ref) = attributes;
+    else if (!attribute_list_contained (TYPE_ATTRIBUTES (ref), attributes))
+      warning ("attributes cannot be added after type definition.");
+  }
 
   POP_TIMEVAR_AND_RETURN (TV_NAME_LOOKUP, ref);
 }
@@ -14623,7 +14629,7 @@ start_function (declspecs, declarator, attrs, flags)
 	 interface, we will have interface_only set but not
 	 interface_known.  In that case, we don't want to use the normal
 	 heuristics because someone will supply a #pragma implementation
-	 elsewhere, and deducing it here would produce a conflict.  */
+	 elsewhere, and deducing it here would produce a conflict.  */ 
       comdat_linkage (decl1);
       DECL_EXTERNAL (decl1) = 0;
       DECL_INTERFACE_KNOWN (decl1) = 1;
diff --git a/gcc/cp/decl2.c b/gcc/cp/decl2.c
index f172e84..2393435 100644
--- a/gcc/cp/decl2.c
+++ b/gcc/cp/decl2.c
@@ -1684,7 +1684,8 @@ import_export_vtable (decl, type, final)
   if (DECL_INTERFACE_KNOWN (decl))
     return;
 
-  if (TYPE_FOR_JAVA (type))
+  if (TYPE_FOR_JAVA (type)
+      || lookup_attribute ("dllimport", TYPE_ATTRIBUTES (type)))
     {
       TREE_PUBLIC (decl) = 1;
       DECL_EXTERNAL (decl) = 1;
@@ -1992,7 +1993,9 @@ import_export_tinfo (decl, type, is_in_library)
       /* If -fno-rtti, we're not necessarily emitting this stuff with
 	 the class, so go ahead and emit it now.  This can happen when
 	 a class is used in exception handling.  */
-      && flag_rtti)
+      && flag_rtti
+      /* Don't try to dllimport tinfo nodes.  */
+      && !lookup_attribute ("dllimport", TYPE_ATTRIBUTES (type)))
     {
       DECL_NOT_REALLY_EXTERN (decl) = !CLASSTYPE_INTERFACE_ONLY (type);
       DECL_COMDAT (decl) = 0;
@@ -2135,7 +2138,7 @@ set_guard (guard)
 }
 
 /* Start the process of running a particular set of global constructors
-   or destructors.  Subroutine of do_[cd]tors.  */
+   or destructors.  Subroutine of generate_ctor_or_dtor_function.  */
 
 static tree
 start_objects (method_type, initp)
@@ -2181,13 +2184,14 @@ start_objects (method_type, initp)
     DECL_GLOBAL_CTOR_P (current_function_decl) = 1;
   else
     DECL_GLOBAL_DTOR_P (current_function_decl) = 1;
+
   DECL_LANG_SPECIFIC (current_function_decl)->decl_flags.u2sel = 1;
 
   body = begin_compound_stmt (/*has_no_scope=*/0);
 
   /* We cannot allow these functions to be elided, even if they do not
      have external linkage.  And, there's no point in deferring
-     copmilation of thes functions; they're all going to have to be
+     compilation of these functions; they're all going to have to be
      out anyhow.  */
   current_function_cannot_inline
     = "static constructors and destructors cannot be inlined";
@@ -2196,7 +2200,7 @@ start_objects (method_type, initp)
 }
 
 /* Finish the process of running a particular set of global constructors
-   or destructors.  Subroutine of do_[cd]tors.  */
+   or destructors.  Subroutine of generate_ctor_or_dtor_function.  */
 
 static void
 finish_objects (method_type, initp, body)
diff --git a/gcc/cppfiles.c b/gcc/cppfiles.c
index 2e11912..54bf6bf 100644
--- a/gcc/cppfiles.c
+++ b/gcc/cppfiles.c
@@ -198,11 +198,13 @@ find_or_create_entry (pfile, fname)
      cpp_reader *pfile;
      const char *fname;
 {
+  int saved_errno;
   splay_tree_node node;
   struct include_file *file;
   char *name = xstrdup (fname);
 
   _cpp_simplify_pathname (name);
+  saved_errno = errno;
   node = splay_tree_lookup (pfile->all_include_files, (splay_tree_key) name);
   if (node)
     free (name);
@@ -210,7 +212,7 @@ find_or_create_entry (pfile, fname)
     {
       file = xcnew (struct include_file);
       file->name = name;
-      file->err_no = errno;
+      file->err_no = saved_errno;
       node = splay_tree_insert (pfile->all_include_files,
 				(splay_tree_key) file->name,
 				(splay_tree_value) file);
diff --git a/gcc/crtstuff.c b/gcc/crtstuff.c
index cdc447d..b90005f 100644
--- a/gcc/crtstuff.c
+++ b/gcc/crtstuff.c
@@ -131,6 +131,8 @@ extern void *__deregister_frame_info_bases (void *)
 /* Likewise for _Jv_RegisterClasses.  */
 extern void _Jv_RegisterClasses (void *) TARGET_ATTRIBUTE_WEAK;
 
+#if !(defined (__MINGW32__) || defined (__CYGWIN__))
+
 #ifdef OBJECT_FORMAT_ELF
 
 /*  Declare a pointer to void function type.  */
@@ -545,3 +547,108 @@ __do_global_ctors (void)
 #else /* ! CRT_BEGIN && ! CRT_END */
 #error "One of CRT_BEGIN or CRT_END must be defined."
 #endif
+
+#else /*__MINGW32__ || __CYGWIN__ */
+
+/* Use  __main to run ctors and dtors. This code generates a
+label for beginning of .eh_frame section in crtbegin.o and terminates
+the section in crtend.o. Registration and deregistration is done by
+installing ctor and dtor functions to do the job.  */
+
+  
+#ifdef CRT_BEGIN
+
+extern  void __w32_sharedptr_initialize(void);
+
+/* Stick a label at the beginning of the frame unwind info so we can
+   register/deregister it with the exception handling library code.  */
+#if defined (USE_EH_FRAME_REGISTRY) \
+	     && !__USING_SJLJ_EXCEPTIONS__
+char __EH_FRAME_BEGIN__[]
+     __attribute__((section(EH_FRAME_SECTION_NAME), aligned(4)))
+     = { };
+
+static struct object obj;
+
+/* These will pull in references from libgcc.a(unwind-dw2-fde.o) */
+
+void __do_frame_init (void);
+void __do_frame_fini (void);
+
+void
+__do_frame_init (void)
+{
+  __w32_sharedptr_initialize();
+  __register_frame_info (__EH_FRAME_BEGIN__, &obj);
+}
+
+void
+__do_frame_fini (void)
+{
+  __deregister_frame_info (__EH_FRAME_BEGIN__);
+}
+#else /* USE_EH_FRAME_REGISTRY && !__USING_SJLJ__EXCEPTIONS__ */
+void __do_sjlj_init (void);
+
+void
+__do_sjlj_init (void)
+{
+  __w32_sharedptr_initialize();
+}
+#endif
+
+
+#elif defined CRT_END
+
+/* Terminate the frame unwind info section with a 0 as a sentinel;
+   this would be the 'length' field in a real FDE.  */
+#if defined (USE_EH_FRAME_REGISTRY) \
+	     && !__USING_SJLJ_EXCEPTIONS__
+static int __EH_FRAME_END__[]
+     __attribute__ ((unused, mode(SI), section(EH_FRAME_SECTION_NAME),
+		     aligned(4)))
+     = { 0 };
+static void __reg_frame_ctor (void) __attribute__ ((constructor));
+static void __dereg_frame_dtor (void) __attribute__ ((destructor));
+extern void __do_frame_init (void);
+extern void __do_frame_fini (void);
+
+
+/* Register the eh_frame. This has to be the first ctor to
+   be invoked so we put it in last. Since we're last, we can't
+   reference __register_frame_info in libgcc.a directly (if eh_frame
+   code has been referenced than it will have been pulled in but
+   we can't count on it) so we  call a thunk in crtbegin.o.  */
+
+static void
+__reg_frame_ctor (void)
+{
+  __do_frame_init ();
+}
+
+/* Deregister the eh_frame. This has to be the last dtor. The
+   call to __register_frame_info in crtbegin.o will have pulled in
+   libgcc.a(unwind-dw2-fde.o) if libgcc.a is static lib but not if
+   dll, so we use a thunk again to be sure.  */
+
+static void
+__dereg_frame_dtor (void)
+{
+  __do_frame_fini ();
+}
+#else
+static void __sjlj_init_ctor (void) __attribute__ ((constructor));
+void __do_sjlj_init (void);
+static void
+__sjlj_init_ctor (void)
+{
+  __do_sjlj_init ();
+}
+
+#endif /* USE_EH_FRAME_REGISTRY && !__USING_SJLJ__EXCEPTIONS__ */
+
+#else /* ! CRT_BEGIN && ! CRT_END */
+#error "One of CRT_BEGIN or CRT_END must be defined."
+#endif
+
+#endif /* __MINGW32__ || __CYGWIN__ */
diff --git a/gcc/doc/extend.texi b/gcc/doc/extend.texi
index 6cbaa10..64b7f07 100644
--- a/gcc/doc/extend.texi
+++ b/gcc/doc/extend.texi
@@ -2397,6 +2397,16 @@ On the Intel 386, the @code{stdcall} attribute causes the compiler to
 assume that the called function will pop off the stack space used to
 pass arguments, unless it takes a variable number of arguments.
 
+@item fastcall
+@cindex functions that pop the argument stack on the 386
+On the Intel 386, the @code{fastcall} attribute causes the compiler to
+pass the first two arguments in the registers ECX and EDX. Subsequent
+arguments are passed on the stack. The called function will pop the 
+arguments off the stack. If the number of arguments is variable all
+arguments are pushed on the stack.
+
+The @code{fastcall} calling convention exists in Windows NT for Intel
+processors only.
 
 @item cdecl
 @cindex functions that do pop the argument stack on the 386
@@ -3319,7 +3329,7 @@ addresses).
 @item dllimport
 The @code{dllimport} attribute is described in @xref{Function Attributes}.
 
-@item dlexport
+@item dllexport
 The @code{dllexport} attribute is described in @xref{Function Attributes}.
 
 @end table
diff --git a/gcc/doc/invoke.texi b/gcc/doc/invoke.texi
index 8348536..3a39e38 100644
--- a/gcc/doc/invoke.texi
+++ b/gcc/doc/invoke.texi
@@ -478,7 +478,7 @@ in the following sections.
 -mthreads  -mno-align-stringops  -minline-all-stringops @gol
 -mpush-args  -maccumulate-outgoing-args  -m128bit-long-double @gol
 -m96bit-long-double  -mregparm=@var{num}  -momit-leaf-frame-pointer @gol
--mno-red-zone@gol
+-mms-bitfields -mno-red-zone @gol
 -mcmodel=@var{code-model} @gol
 -m32  -m64}
 
@@ -8154,6 +8154,19 @@ avoids the instructions to save, set up and restore frame pointers and
 makes an extra register available in leaf functions.  The option
 @option{-fomit-frame-pointer} removes the frame pointer for all functions
 which might make debugging harder.
+
+@item -mms-bitfields
+@opindex mms-bitfields
+If set, @var{record_type} bit-fields are laid out following the rules of
+Microsoft Visual C/C++, namely: (i) a bit-field won't share the same
+storage unit with the previous bit-field if their underlying types have
+different sizes, and the bit-field will be aligned to the highest
+alignment of the underlying types of itself and of the previous
+bit-field; (ii) a zero-sized bit-field will affect the alignment of the
+whole enclosing structure, even if it is unnamed; except that (iii) a
+zero-sized bit-field will be disregarded unless it follows another
+bit-field of non-zero size. Currently, this option is supported on
+@samp{cygwin} and @samp{mingw32}.
 @end table
 
 These @samp{-m} switches are supported in addition to the above
diff --git a/gcc/gcc.c b/gcc/gcc.c
index 40f27c6..fd7ffab 100644
--- a/gcc/gcc.c
+++ b/gcc/gcc.c
@@ -85,7 +85,8 @@ compilation is specified by a string called a "spec".  */
 #ifdef HAVE_SYS_RESOURCE_H
 #include <sys/resource.h>
 #endif
-#if defined (HAVE_DECL_GETRUSAGE) && !HAVE_DECL_GETRUSAGE
+#if defined (HAVE_GETRUSAGE) \
+    && defined (HAVE_DECL_GETRUSAGE) && !HAVE_DECL_GETRUSAGE
 extern int getrusage PARAMS ((int, struct rusage *));
 #endif
 
@@ -2570,6 +2571,24 @@ add_sysrooted_prefix (pprefix, prefix, component, priority,
   add_prefix (pprefix, prefix, component, priority,
 	      require_machine_suffix, warn, os_multilib);
 }
+
+#if defined (__MINGW32__)
+static char *
+canon_filename (char *fname)
+{
+  char* p = fname;
+
+  while (*p)
+    {
+      if (*p == '/')
+	    *p = '\\';
+      p++;
+    }
+  return fname;
+}
+#else
+#define canon_filename(f) f
+#endif
 
 /* Execute the command specified by the arguments on the current line of spec.
    When using pipes, this includes several piped-together commands
@@ -2612,7 +2631,7 @@ execute ()
   string = find_a_file (&exec_prefixes, commands[0].prog, X_OK, 0);
 
   if (string)
-    commands[0].argv[0] = string;
+    commands[0].argv[0] = canon_filename(string);
 
   for (n_commands = 1, i = 0; i < argbuf_index; i++)
     if (strcmp (argbuf[i], "|") == 0)
@@ -2626,7 +2645,7 @@ execute ()
 	string = find_a_file (&exec_prefixes, commands[n_commands].prog,
 			      X_OK, 0);
 	if (string)
-	  commands[n_commands].argv[0] = string;
+	  commands[n_commands].argv[0] = canon_filename(string);
 	n_commands++;
       }
 
@@ -4113,7 +4132,9 @@ static int basename_length;
 static int suffixed_basename_length;
 static const char *input_basename;
 static const char *input_suffix;
+#ifndef HOST_FILE_ID_CMP
 static struct stat input_stat;
+#endif
 static int input_stat_set;
 
 /* The compiler used to process the current input file.  */
@@ -4578,7 +4599,10 @@ do_spec_1 (spec, inswitch, soft_matched_part)
 		    *((char *) temp_filename + temp_filename_length) = '\0';
 		    if (strcmp (temp_filename, input_filename) != 0)
 		      {
-		      	struct stat st_temp;
+#if defined (HOST_FILE_ID_CMP)
+			if (HOST_FILE_ID_CMP(input_filename, temp_filename) != 0 )
+#else
+			struct stat st_temp;
 
 		      	/* Note, set_input() resets input_stat_set to 0.  */
 		      	if (input_stat_set == 0)
@@ -4597,6 +4621,7 @@ do_spec_1 (spec, inswitch, soft_matched_part)
 			    || stat (temp_filename, &st_temp) < 0
 			    || input_stat.st_dev != st_temp.st_dev
 			    || input_stat.st_ino != st_temp.st_ino)
+#endif
 			  {
 			    temp_filename = save_string (temp_filename,
 							 temp_filename_length + 1);
diff --git a/gcc/gthr-win32.h b/gcc/gthr-win32.h
index 38b8f04..ec413e2 100644
--- a/gcc/gthr-win32.h
+++ b/gcc/gthr-win32.h
@@ -64,7 +64,6 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 
 #define __GTHREADS 1
 
-#include <errno.h>
 #ifdef __MINGW32__
 #include <_mingw.h>
 #endif
@@ -365,7 +364,7 @@ __gthread_active_p (void)
 #endif
 }
 
-#ifdef __GTHREAD_HIDE_WIN32API
+#if __GTHREAD_HIDE_WIN32API
 
 /* The implementations are in config/i386/gthr-win32.c in libgcc.a.
    Only stubs are exposed to avoid polluting the C++ namespace with
diff --git a/gcc/libgcc2.c b/gcc/libgcc2.c
index dea803d..7010e21 100644
--- a/gcc/libgcc2.c
+++ b/gcc/libgcc2.c
@@ -1792,7 +1792,7 @@ __clear_insn_cache (void)
 #endif /* __sysV68__ */
 #endif /* L_trampoline */
 
-#ifndef __CYGWIN__
+#if !defined  __CYGWIN__ && !defined __MINGW32__
 #ifdef L__main
 
 #include "gbl-ctors.h"
diff --git a/gcc/real.c b/gcc/real.c
index f775226..07367a1 100644
--- a/gcc/real.c
+++ b/gcc/real.c
@@ -1812,7 +1812,7 @@ real_from_string (r, str)
   else if (*str == '+')
     str++;
 
-  if (str[0] == '0' && str[1] == 'x')
+  if (str[0] == '0' && (str[1] == 'x' || str[1] == 'X'))
     {
       /* Hexadecimal floating point.  */
       int pos = SIGNIFICAND_BITS - 4, d;
diff --git a/gcc/stor-layout.c b/gcc/stor-layout.c
index 835cb7c..cf60815 100644
--- a/gcc/stor-layout.c
+++ b/gcc/stor-layout.c
@@ -1078,8 +1078,8 @@ place_field (rli, field)
 		  /* out of bits; bump up to next 'word'.  */
 		  rli->offset = DECL_FIELD_OFFSET (rli->prev_field);
 		  rli->bitpos = size_binop (PLUS_EXPR,
-				      type_size,
-				      DECL_FIELD_BIT_OFFSET(rli->prev_field));
+				  type_size,
+				  DECL_FIELD_BIT_OFFSET(rli->prev_field));
 		  rli->prev_field = field;
 		  rli->remaining_in_alignment = TREE_INT_CST_LOW (type_size);
 		}
diff --git a/gcc/testsuite/g++.dg/ext/dll-MI1.h b/gcc/testsuite/g++.dg/ext/dll-MI1.h
new file mode 100644
index 0000000..2f8b836
--- /dev/null
+++ b/gcc/testsuite/g++.dg/ext/dll-MI1.h
@@ -0,0 +1,39 @@
+// Class definitions for dllexport-MI1.C and dllimport-MI1.C
+
+#ifdef BUILDING_MI_DLL
+#define  DLL_IMPEXP __attribute__ ((dllexport))
+#else
+#define  DLL_IMPEXP __attribute__ ((dllimport))
+#endif
+
+
+#define D1_return 1
+#define D2_return 2
+
+class DLL_IMPEXP MBase
+{
+public:
+  virtual int vf() const = 0;
+  virtual ~MBase();
+};
+
+class DLL_IMPEXP D1 : virtual public MBase
+{
+public:
+  int vf() const;
+};
+
+class DLL_IMPEXP D2 : virtual public MBase
+{
+public:
+  D2 ();
+  D2 (D2 const&);
+  int vf() const;
+};
+
+class DLL_IMPEXP MI1 : public D1, public D2
+{
+public:
+  int vf() const;
+};
+
diff --git a/gcc/testsuite/g++.dg/ext/dllexport-MI1.C b/gcc/testsuite/g++.dg/ext/dllexport-MI1.C
new file mode 100644
index 0000000..e640d3b
--- /dev/null
+++ b/gcc/testsuite/g++.dg/ext/dllexport-MI1.C
@@ -0,0 +1,51 @@
+// { dg-do compile { target i?86-*-cygwin* i?86-*-mingw*} }
+//  Test that non-virtual MI thunks are exported.
+
+
+// To build the dll and client app:
+// g++ -shared -o MI.dll dllexport-MI1.C
+// g++ -o MItest.exe dllimport-MI1.C -L. MI.dll
+
+#define BUILDING_MI_DLL
+#include "dll-MI1.h"
+
+MBase::~MBase(){}
+
+int D1::vf() const { return D1_return; }
+
+D2::D2() { }
+D2::D2 (D2 const&) { }
+int D2::vf() const { return D2_return; }
+
+int MI1::vf() const { return D1::vf();}
+
+// a dllexported object 
+DLL_IMPEXP MI1 dllMI1;
+
+// use default copy ctor 
+DLL_IMPEXP MI1 dllMI1Copy =  dllMI1;
+
+// Scan for export of some methods that are undefined in dllimportMI1.C,
+
+// { dg-final { scan-assembler "-export:_ZNK2D12vfEv" } }
+// { dg-final { scan-assembler "-export:_ZNK2D22vfEv" } }
+// { dg-final { scan-assembler "-export:_ZNK3MI12vfEv" } }
+
+// and MI thunks,
+
+// { dg-final { scan-assembler "-export:_ZThn4_NK3MI12vfEv" } }
+// { dg-final { scan-assembler "-export:_ZTv0_n12_NK2D12vfEv" } }
+
+// and a vtable data variable.
+
+// { dg-final { scan-assembler "-export:_ZTV2D1,data" } }
+
+// an explicit copy ctor
+// { dg-final { scan-assembler "-export:_ZN2D2C2ERKS_" } }
+
+// but not implicit copy ctor generated by compiler
+// nor implicit dtor
+
+// { dg-final { scan-assembler-not "-export:_ZN2D1C2ERKS_" } }
+// { dg-final { scan-assembler-not "-export:_ZN2D1D2Ev" } }
+
diff --git a/gcc/testsuite/g++.dg/ext/dllimport-MI1.C b/gcc/testsuite/g++.dg/ext/dllimport-MI1.C
new file mode 100644
index 0000000..5ba4176
--- /dev/null
+++ b/gcc/testsuite/g++.dg/ext/dllimport-MI1.C
@@ -0,0 +1,53 @@
+// { dg-do compile { target i?86-*-cygwin* i?86-*-mingw*} }
+//  Test handling of MI thunks in dllimported classes.
+
+// To build the dll and client app:
+// g++ -shared -o MI.dll dllexport-MI1.C
+// g++ -o MItest.exe dllimport-MI1.C  -L. MI.dll
+
+#include <stdlib.h>
+#include "dll-MI1.h"
+
+extern DLL_IMPEXP MI1 dllMI1;
+
+// This should use the implicit copy ctor for D1 (not imported)
+// and the explicit copy ctor for D2 (dll-imported). 
+MI1 dllMI1LocalCopy = dllMI1;
+
+class  MI2 : public D1, public D2
+{
+public:
+  int vf() const { return D2::vf();}
+};
+
+class  MI3 : public MI1
+{
+};
+
+int main ()
+
+{
+  MI1 bar1;
+  MI2 bar2; 
+  MI3 bar3;
+
+  if (dllMI1.vf() != D1_return)
+    abort();
+
+  if (dllMI1LocalCopy.vf() != D1_return)
+    abort();
+
+  if (bar1.vf() != D1_return)
+    abort();
+
+  if (bar2.vf() != (D2_return))
+    abort();
+
+  if (bar3.vf() != D1_return )
+    abort();
+}
+
+// Scan for import of explicit copy ctor for D2, but no import
+// of compiler generated copy ctor for D1. 
+// { dg-final { scan-assembler  "__imp___ZN2D2C2ERKS_" } }
+// { dg-final { scan-assembler-not "__imp___ZN2D1C2ERKS_" } } 
diff --git a/gcc/testsuite/gcc.dg/bf-ms-layout.c b/gcc/testsuite/gcc.dg/bf-ms-layout.c
new file mode 100644
index 0000000..c72f975
--- /dev/null
+++ b/gcc/testsuite/gcc.dg/bf-ms-layout.c
@@ -0,0 +1,232 @@
+/* bf-ms-layout.c */
+
+/* Test for MS bitfield layout */
+/* Adapted from Donn Terry <donnte@microsoft.com> testcase
+   posted to GCC-patches
+   http://gcc.gnu.org/ml/gcc-patches/2000-08/msg00577.html */ 
+
+/* { dg-do run { target *-*-interix* *-*-mingw* *-*-cygwin* } } */
+/* { dg-options "-mms-bitfields -D_TEST_MS_LAYOUT" } */
+
+#include <stddef.h>
+#include <string.h>
+
+extern void abort();
+
+#pragma pack(8)
+
+struct one {
+  int d;
+  unsigned char a;
+  unsigned short b:7;
+  char c;	
+};
+
+struct two {
+  int d;
+  unsigned char a;
+  unsigned int b:7;
+  char c;	    	
+};
+
+struct three {
+  short d;
+  unsigned short a:3;
+  unsigned short b:9;
+  unsigned char c:7;
+};
+
+
+/* Bitfields of size 0 have some truly odd behaviors. */
+
+struct four {
+  unsigned short a:3;
+  unsigned short b:9;
+  unsigned int :0;  /* forces struct alignment to int */
+  unsigned char c:7;
+};
+
+struct five {
+  char a;	  	
+  int :0;        /* ignored; prior field is not a bitfield. */
+  char b;
+  char c;
+};
+
+struct six { 
+  char a :8;
+  int :0;	/* not ignored; prior field IS a bitfield, causes
+		   struct alignment as well. */
+  char b;
+  char c;
+} ;
+
+struct seven {
+  char a:8;
+  char :0;
+  int  :0;	/* Ignored; prior field is zero size bitfield. */
+  char b;
+  char c;
+};
+
+struct eight { /* ms size 4 */
+  short b:3;  
+  char  c;
+};
+
+#ifdef _MSC_VER
+#define LONGLONG __int64
+#else
+#define LONGLONG long long
+#endif
+
+union nine {   /* ms size 8 */
+  LONGLONG a:3;
+  char  c;
+};
+
+struct ten {   /* ms size 16 */
+  LONGLONG a:3;
+  LONGLONG b:3;
+  char  c;
+};
+
+
+#define val(s,f) (s.f)
+
+#define check_struct(_X) \
+{ \
+  if (sizeof (struct _X) != exp_sizeof_##_X )	\
+    abort();					\
+  memcpy(&test_##_X, filler, sizeof(test_##_X));\
+  if (val(test_##_X,c) != exp_##_X##_c) 	\
+     abort();					\
+}
+
+#define check_union(_X) \
+{ \
+  if (sizeof (union _X) != exp_sizeof_##_X )	\
+    abort();                                    \
+  memcpy(&test_##_X, filler, sizeof(test_##_X));\
+  if (val(test_##_X,c) != exp_##_X##_c) 	\
+     abort();					\
+}
+
+#define check_struct_size(_X) \
+{ \
+  if (sizeof (struct _X) != exp_sizeof_##_X )	\
+    abort();                                    \
+}
+
+#define check_struct_off(_X) \
+{ \
+  memcpy(&test_##_X, filler, sizeof(test_##_X));\
+  if (val(test_##_X,c) != exp_##_X##_c) 	\
+    abort();                                    \
+}
+
+#define check_union_size(_X) \
+{ \
+  if (sizeof (union _X) != exp_sizeof_##_X )	\
+    abort();                                    \
+}
+
+#define check_union_off(_X) \
+{ \
+  memcpy(&test_##_X, filler, sizeof(test_##_X));\
+  if (val(test_##_X,c) != exp_##_X##_c) 	\
+    abort();                                    \
+}
+
+int main(){
+
+  unsigned char filler[16];
+  struct one test_one;
+  struct two test_two;
+  struct three test_three;
+  struct four test_four;
+  struct five test_five;
+  struct six test_six;
+  struct seven test_seven;
+  struct eight test_eight;
+  union nine test_nine;
+  struct ten test_ten;
+ 
+#if defined (_TEST_MS_LAYOUT) || defined (_MSC_VER)
+  size_t exp_sizeof_one = 12;
+  size_t exp_sizeof_two = 16;
+  size_t exp_sizeof_three =6;
+  size_t exp_sizeof_four = 8;
+  size_t exp_sizeof_five = 3;
+  size_t exp_sizeof_six = 8;
+  size_t exp_sizeof_seven = 3;
+  size_t exp_sizeof_eight = 4;
+  size_t exp_sizeof_nine = 8;
+  size_t exp_sizeof_ten = 16;
+
+  unsigned char exp_one_c = 8;
+  unsigned char exp_two_c  = 12;
+  unsigned char exp_three_c = 4;
+  unsigned char exp_four_c = 4;
+  char exp_five_c = 2;
+  char exp_six_c = 5;
+  char exp_seven_c = 2;
+  char exp_eight_c = 2;
+  char exp_nine_c = 0;
+  char exp_ten_c = 8;
+
+#else /* testing -mno-ms-bitfields */
+
+  size_t exp_sizeof_one = 8;
+  size_t exp_sizeof_two = 8;
+  size_t exp_sizeof_three = 6;
+  size_t exp_sizeof_four = 6;  
+  size_t exp_sizeof_five = 6;
+  size_t exp_sizeof_six = 6;
+  size_t exp_sizeof_seven = 6;
+  size_t exp_sizeof_eight = 2;
+  size_t exp_sizeof_nine = 8;
+  size_t exp_sizeof_ten = 8;
+
+  unsigned short exp_one_c = 6;
+  unsigned int exp_two_c  = 6;
+  unsigned char exp_three_c = 64;
+  unsigned char exp_four_c = 4;
+  char exp_five_c = 5;
+  char exp_six_c = 5;
+  char exp_seven_c = 5;
+  char exp_eight_c = 1;
+  char exp_nine_c = 0;
+  char exp_ten_c = 1;
+
+#endif
+
+  unsigned char i; 
+  for ( i = 0; i < 16; i++ )
+    filler[i] = i;
+
+  check_struct_off (one);
+  check_struct_off (two);  
+  check_struct_off (three);
+  check_struct_off (four);
+  check_struct_off (five);
+  check_struct_off (six);
+  check_struct_off (seven);
+  check_struct_off (eight);
+  check_union_off (nine);
+  check_struct_off (ten);
+
+  check_struct_size (one);
+  check_struct_size (two);  
+  check_struct_size (three);
+  check_struct_size (four);
+  check_struct_size (five);
+  check_struct_size (six);
+  check_struct_size (seven);
+  check_struct_size (eight);
+  check_union_size (nine);
+  check_struct_size (ten);
+
+  return 0;
+};
+
diff --git a/gcc/testsuite/gcc.dg/bf-no-ms-layout.c b/gcc/testsuite/gcc.dg/bf-no-ms-layout.c
new file mode 100644
index 0000000..430b927
--- /dev/null
+++ b/gcc/testsuite/gcc.dg/bf-no-ms-layout.c
@@ -0,0 +1,232 @@
+/* bf-no-ms-layout.c */
+
+/* Test for gcc bitfield layout, with -mno-ms-bitfields */
+/* Adapted from Donn Terry <donnte@microsoft.com> testcase
+   posted to GCC-patches
+   http://gcc.gnu.org/ml/gcc-patches/2000-08/msg00577.html */ 
+
+/* { dg-do run { target *-*-interix* *-*-mingw* *-*-cygwin* } } */
+/* { dg-options "-mno-ms-bitfields" } */
+
+#include <stddef.h>
+#include <string.h>
+
+extern void abort();
+
+#pragma pack(8)
+
+struct one {
+  int d;
+  unsigned char a;
+  unsigned short b:7;
+  char c;	
+};
+
+struct two {
+  int d;
+  unsigned char a;
+  unsigned int b:7;
+  char c;	    	
+};
+
+struct three {
+  short d;
+  unsigned short a:3;
+  unsigned short b:9;
+  unsigned char c:7;
+};
+
+
+/* Bitfields of size 0 have some truly odd behaviors. */
+
+struct four {
+  unsigned short a:3;
+  unsigned short b:9;
+  unsigned int :0;  /* forces struct alignment to int */
+  unsigned char c:7;
+};
+
+struct five {
+  char a;	  	
+  int :0;        /* ignored; prior field is not a bitfield. */
+  char b;
+  char c;
+};
+
+struct six { 
+  char a :8;
+  int :0;	/* not ignored; prior field IS a bitfield, causes
+		   struct alignment as well. */
+  char b;
+  char c;
+} ;
+
+struct seven {
+  char a:8;
+  char :0;
+  int  :0;	/* Ignored; prior field is zero size bitfield. */
+  char b;
+  char c;
+};
+
+struct eight { /* ms size 4 */
+  short b:3;  
+  char  c;
+};
+
+#ifdef _MSC_VER
+#define LONGLONG __int64
+#else
+#define LONGLONG long long
+#endif
+
+union nine {   /* ms size 8 */
+  LONGLONG a:3;
+  char  c;
+};
+
+struct ten {   /* ms size 16 */
+  LONGLONG a:3;
+  LONGLONG b:3;
+  char  c;
+};
+
+
+#define val(s,f) (s.f)
+
+#define check_struct(_X) \
+{ \
+  if (sizeof (struct _X) != exp_sizeof_##_X )	\
+    abort();					\
+  memcpy(&test_##_X, filler, sizeof(test_##_X));\
+  if (val(test_##_X,c) != exp_##_X##_c) 	\
+     abort();					\
+}
+
+#define check_union(_X) \
+{ \
+  if (sizeof (union _X) != exp_sizeof_##_X )	\
+    abort();                                    \
+  memcpy(&test_##_X, filler, sizeof(test_##_X));\
+  if (val(test_##_X,c) != exp_##_X##_c) 	\
+     abort();					\
+}
+
+#define check_struct_size(_X) \
+{ \
+  if (sizeof (struct _X) != exp_sizeof_##_X )	\
+    abort();                                    \
+}
+
+#define check_struct_off(_X) \
+{ \
+  memcpy(&test_##_X, filler, sizeof(test_##_X));\
+  if (val(test_##_X,c) != exp_##_X##_c) 	\
+    abort();                                    \
+}
+
+#define check_union_size(_X) \
+{ \
+  if (sizeof (union _X) != exp_sizeof_##_X )	\
+    abort();                                    \
+}
+
+#define check_union_off(_X) \
+{ \
+  memcpy(&test_##_X, filler, sizeof(test_##_X));\
+  if (val(test_##_X,c) != exp_##_X##_c) 	\
+    abort();                                    \
+}
+
+int main(){
+
+  unsigned char filler[16];
+  struct one test_one;
+  struct two test_two;
+  struct three test_three;
+  struct four test_four;
+  struct five test_five;
+  struct six test_six;
+  struct seven test_seven;
+  struct eight test_eight;
+  union nine test_nine;
+  struct ten test_ten;
+ 
+#if defined (_TEST_MS_LAYOUT) || defined (_MSC_VER)
+  size_t exp_sizeof_one = 12;
+  size_t exp_sizeof_two = 16;
+  size_t exp_sizeof_three =6;
+  size_t exp_sizeof_four = 8;
+  size_t exp_sizeof_five = 3;
+  size_t exp_sizeof_six = 8;
+  size_t exp_sizeof_seven = 3;
+  size_t exp_sizeof_eight = 4;
+  size_t exp_sizeof_nine = 8;
+  size_t exp_sizeof_ten = 16;
+
+  unsigned char exp_one_c = 8;
+  unsigned char exp_two_c  = 12;
+  unsigned char exp_three_c = 4;
+  unsigned char exp_four_c = 4;
+  char exp_five_c = 2;
+  char exp_six_c = 5;
+  char exp_seven_c = 2;
+  char exp_eight_c = 2;
+  char exp_nine_c = 0;
+  char exp_ten_c = 8;
+
+#else /* testing -mno-ms-bitfields */
+
+  size_t exp_sizeof_one = 8;
+  size_t exp_sizeof_two = 8;
+  size_t exp_sizeof_three = 6;
+  size_t exp_sizeof_four = 6;  
+  size_t exp_sizeof_five = 6;
+  size_t exp_sizeof_six = 6;
+  size_t exp_sizeof_seven = 6;
+  size_t exp_sizeof_eight = 2;
+  size_t exp_sizeof_nine = 8;
+  size_t exp_sizeof_ten = 8;
+
+  unsigned short exp_one_c = 6;
+  unsigned int exp_two_c  = 6;
+  unsigned char exp_three_c = 64;
+  unsigned char exp_four_c = 4;
+  char exp_five_c = 5;
+  char exp_six_c = 5;
+  char exp_seven_c = 5;
+  char exp_eight_c = 1;
+  char exp_nine_c = 0;
+  char exp_ten_c = 1;
+
+#endif
+
+  unsigned char i; 
+  for ( i = 0; i < 16; i++ )
+    filler[i] = i;
+
+  check_struct_off (one);
+  check_struct_off (two);  
+  check_struct_off (three);
+  check_struct_off (four);
+  check_struct_off (five);
+  check_struct_off (six);
+  check_struct_off (seven);
+  check_struct_off (eight);
+  check_union_off (nine);
+  check_struct_off (ten);
+
+  check_struct_size (one);
+  check_struct_size (two);  
+  check_struct_size (three);
+  check_struct_size (four);
+  check_struct_size (five);
+  check_struct_size (six);
+  check_struct_size (seven);
+  check_struct_size (eight);
+  check_union_size (nine);
+  check_struct_size (ten);
+
+  return 0;
+};
+
diff --git a/gcc/testsuite/gcc.dg/dll-2.c b/gcc/testsuite/gcc.dg/dll-2.c
index bf91707..f067d19 100644
--- a/gcc/testsuite/gcc.dg/dll-2.c
+++ b/gcc/testsuite/gcc.dg/dll-2.c
@@ -10,6 +10,7 @@
 
 /* { dg-do compile { target arm*-*-pe* } } */
 /* { dg-do compile { target thumb*-*-pe* } } */
+/* { dg-do compile { target i?86-pc-cygwin  i?86-pc-mingw*} } */
 
 __declspec (dllimport) int foo1 ();
 __declspec (dllexport) int foo1 ();
diff --git a/gcc/testsuite/gcc.dg/dll-3.c b/gcc/testsuite/gcc.dg/dll-3.c
index 0be1f97..60cdfcd 100644
--- a/gcc/testsuite/gcc.dg/dll-3.c
+++ b/gcc/testsuite/gcc.dg/dll-3.c
@@ -2,6 +2,7 @@
 
 /* { dg-do compile { target arm*-*-pe* } } */
 /* { dg-do compile { target thumb*-*-pe* } } */
+/* { dg-do compile { target i?86-pc-cygwin  i?86-pc-mingw*} } */
 
 __declspec (dllimport) int foo1 ();
 __declspec (dllexport) int foo1 ();
@@ -14,3 +15,4 @@ __declspec (dllexport) int foo2 () { return foo1 (); }
 
 /* { dg-final { scan-assembler "\.section\[ \t\]*\.drectve\n\[^\n\]*-export:foo1.*\.section\[ \t\]*\.drectve\n\[^\n\]*-export:foo2" } } */
 /* { dg-final { scan-assembler-not "(__imp_foo1|__imp_foo2)" } } */
+/* { dg-final { scan-assembler-not "(_imp__foo1|_imp__foo2)" } } */
diff --git a/gcc/testsuite/gcc.dg/dll-4.c b/gcc/testsuite/gcc.dg/dll-4.c
index fec08fc..84f4922 100644
--- a/gcc/testsuite/gcc.dg/dll-4.c
+++ b/gcc/testsuite/gcc.dg/dll-4.c
@@ -1,5 +1,6 @@
 /* { dg-do compile { target arm*-*-pe* } } */
 /* { dg-do compile { target thumb*-*-pe* } } */
+/* { dg-do compile { target i?86-pc-cygwin  i?86-pc-mingw*} } */
 
 __declspec (dllimport) int foo1;
 int foo1;
@@ -12,3 +13,4 @@ int f () { return foo1 + foo2; }
 /* FIXME: We should scan the output of nm for this case.  */
 /* { dg-final { scan-assembler "(foo2:.*\.comm\[ \t_\]*foo1)" } } */
 /* { dg-final { scan-assembler-not "__imp_" } } */
+/* { dg-final { scan-assembler-not "_imp__" } } */
diff --git a/gcc/timevar.c b/gcc/timevar.c
index 47f2a68..4ac304b 100644
--- a/gcc/timevar.c
+++ b/gcc/timevar.c
@@ -45,16 +45,6 @@ struct tms
 };
 #endif
 
-#if defined HAVE_DECL_GETRUSAGE && !HAVE_DECL_GETRUSAGE
-extern int getrusage PARAMS ((int, struct rusage *));
-#endif
-#if defined HAVE_DECL_TIMES && !HAVE_DECL_TIMES
-extern clock_t times PARAMS ((struct tms *));
-#endif
-#if defined HAVE_DECL_CLOCK && !HAVE_DECL_CLOCK
-extern clock_t clock PARAMS ((void));
-#endif
-
 #ifndef RUSAGE_SELF
 # define RUSAGE_SELF 0
 #endif
@@ -78,17 +68,26 @@ extern clock_t clock PARAMS ((void));
 /* Prefer times to getrusage to clock (each gives successively less
    information).  */
 #ifdef HAVE_TIMES
+# if defined HAVE_DECL_TIMES && !HAVE_DECL_TIMES
+  extern clock_t times PARAMS ((struct tms *));
+# endif
 # define USE_TIMES
 # define HAVE_USER_TIME
 # define HAVE_SYS_TIME
 # define HAVE_WALL_TIME
 #else
 #ifdef HAVE_GETRUSAGE
+# if defined HAVE_DECL_GETRUSAGE && !HAVE_DECL_GETRUSAGE
+  extern int getrusage PARAMS ((int, struct rusage *));
+# endif
 # define USE_GETRUSAGE
 # define HAVE_USER_TIME
 # define HAVE_SYS_TIME
 #else
 #ifdef HAVE_CLOCK
+# if defined HAVE_DECL_CLOCK && !HAVE_DECL_CLOCK
+  extern clock_t clock PARAMS ((void));
+# endif
 # define USE_CLOCK
 # define HAVE_USER_TIME
 #endif
diff --git a/gcc/unwind-dw2-fde.c b/gcc/unwind-dw2-fde.c
index f4cb4bb..d0ba39d 100644
--- a/gcc/unwind-dw2-fde.c
+++ b/gcc/unwind-dw2-fde.c
@@ -39,18 +39,32 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 #include "gthr.h"
 #endif
 
+#if defined (__MINGW32__ ) || defined (__CYGWIN__)
+#include "i386/w32-shared-ptr.h"
+#endif
+
 /* The unseen_objects list contains objects that have been registered
    but not yet categorized in any way.  The seen_objects list has had
    it's pc_begin and count fields initialized at minimum, and is sorted
    by decreasing value of pc_begin.  */
+
+#if ! (defined (__MINGW32__ ) || defined (__CYGWIN__))
 static struct object *unseen_objects;
 static struct object *seen_objects;
+#else
+#define unseen_objects  (*(struct object**)(&__w32_sharedptr->dw2_unseen_objects))
+#define seen_objects    (*(struct object**)(&__w32_sharedptr->dw2_seen_objects))
+#endif
 
+#if !(defined (__MINGW32__ ) || defined (__CYGWIN__))
 #ifdef __GTHREAD_MUTEX_INIT
 static __gthread_mutex_t object_mutex = __GTHREAD_MUTEX_INIT;
 #else
 static __gthread_mutex_t object_mutex;
 #endif
+#else
+#define object_mutex  (__w32_sharedptr->dw2_object_mutex)
+#endif
 
 #ifdef __GTHREAD_MUTEX_INIT_FUNCTION
 static void
@@ -62,8 +76,15 @@ init_object_mutex (void)
 static void
 init_object_mutex_once (void)
 {
+#if !(defined (__MINGW32__ ) || defined (__CYGWIN__))
   static __gthread_once_t once = __GTHREAD_ONCE_INIT;
+#else
+#define once  (__w32_sharedptr->dw2_once)
+#endif
   __gthread_once (&once, init_object_mutex);
+#if (defined (__MINGW32__ ) || defined (__CYGWIN__))
+#undef once
+#endif
 }
 #else
 #define init_object_mutex_once()
@@ -427,7 +448,11 @@ static inline void
 fde_split (struct object *ob, fde_compare_t fde_compare,
 	   struct fde_vector *linear, struct fde_vector *erratic)
 {
+#if !(defined (__MINGW32__ ) || defined (__CYGWIN__))
   static fde *marker;
+#else
+#define marker  (*(fde **)&__w32_sharedptr->dw2_marker)
+#endif
   size_t count = linear->count;
   fde **chain_end = &marker;
   size_t i, j, k;
@@ -463,6 +488,9 @@ fde_split (struct object *ob, fde_compare_t fde_compare,
       erratic->array[k++] = linear->array[i];
   linear->count = j;
   erratic->count = k;
+#if (defined (__MINGW32__ ) || defined (__CYGWIN__))
+#undef marker
+#endif
 }
 
 /* This is O(n log(n)).  BSD/OS defines heapsort in stdlib.h, so we must
diff --git a/gcc/unwind-sjlj.c b/gcc/unwind-sjlj.c
index 7b52338..fff86bf 100644
--- a/gcc/unwind-sjlj.c
+++ b/gcc/unwind-sjlj.c
@@ -24,6 +24,10 @@
 #include "unwind.h"
 #include "gthr.h"
 
+#if defined (__MINGW32__ ) || defined (__CYGWIN__)
+#include "i386/w32-shared-ptr.h"
+#endif
+
 #ifdef __USING_SJLJ_EXCEPTIONS__
 
 #ifdef DONT_USE_BUILTIN_SETJMP
@@ -84,12 +88,21 @@ typedef struct
 
 /* Manage the chain of registered function contexts.  */
 
+#if !(defined (__MINGW32__ ) || defined (__CYGWIN__))
 /* Single threaded fallback chain.  */
 static struct SjLj_Function_Context *fc_static;
+#else
+#define fc_static  (*(struct SjLj_Function_Context**)&__w32_sharedptr->sjlj_fc_static)
+#endif
 
 #if __GTHREADS
+#if !(defined (__MINGW32__ ) || defined (__CYGWIN__))
 static __gthread_key_t fc_key;
 static int use_fc_key = -1;
+#else
+#define fc_key      (__w32_sharedptr->sjlj_fc_key)
+#define use_fc_key  (__w32_sharedptr->sjlj_use_fc_key)
+#endif
 
 static void
 fc_key_dtor (void *ptr)
@@ -106,15 +119,26 @@ fc_key_init (void)
 static void
 fc_key_init_once (void)
 {
+#if !(defined (__MINGW32__ ) || defined (__CYGWIN__))
   static __gthread_once_t once = __GTHREAD_ONCE_INIT;
+#else
+#define once (__w32_sharedptr->sjlj_once)
+#endif
   if (__gthread_once (&once, fc_key_init) != 0 || use_fc_key < 0)
     use_fc_key = 0;
+#if defined (__MINGW32__ ) || defined (__CYGWIN__)
+#undef once
+#endif
 }
 #endif
 
 void
 _Unwind_SjLj_Register (struct SjLj_Function_Context *fc)
 {
+#if defined (__MINGW32__ ) || defined (__CYGWIN__)
+  W32_SHAREDPTR_INITIALIZE ();
+#endif
+
 #if __GTHREADS
   if (use_fc_key < 0)
     fc_key_init_once ();
@@ -135,6 +159,10 @@ _Unwind_SjLj_Register (struct SjLj_Function_Context *fc)
 static inline struct SjLj_Function_Context *
 _Unwind_SjLj_GetContext (void)
 {
+#if defined (__MINGW32__ ) || defined (__CYGWIN__)
+  W32_SHAREDPTR_INITIALIZE ();
+#endif
+
 #if __GTHREADS
   if (use_fc_key < 0)
     fc_key_init_once ();
@@ -148,6 +176,10 @@ _Unwind_SjLj_GetContext (void)
 static inline void
 _Unwind_SjLj_SetContext (struct SjLj_Function_Context *fc)
 {
+#if defined (__MINGW32__ ) || defined (__CYGWIN__)
+  W32_SHAREDPTR_INITIALIZE ();
+#endif
+
 #if __GTHREADS
   if (use_fc_key < 0)
     fc_key_init_once ();
diff --git a/libf2c/libI77/endfile.c b/libf2c/libI77/endfile.c
index 513f210..dd00550 100644
--- a/libf2c/libI77/endfile.c
+++ b/libf2c/libI77/endfile.c
@@ -11,6 +11,13 @@
 #include <stdlib.h>
 #include <string.h>
 
+#ifdef __MINGW32__
+#ifndef HAVE_FTRUNCATE
+#define HAVE_FTRUNCATE 1
+#define ftruncate _chsize
+#endif
+#endif
+
 extern char *f__r_mode[], *f__w_mode[];
 
 integer
diff --git a/libf2c/libI77/inquire.c b/libf2c/libI77/inquire.c
index dae869c..956e40f 100644
--- a/libf2c/libI77/inquire.c
+++ b/libf2c/libI77/inquire.c
@@ -2,7 +2,7 @@
 #include "f2c.h"
 #include "fio.h"
 #include <string.h>
-#if defined (MSDOS) && !defined (GO32)
+#if (defined (MSDOS) && !defined (GO32)) || defined (_WIN32)
 #undef abs
 #undef min
 #undef max
diff --git a/libf2c/libU77/dtime_.c b/libf2c/libU77/dtime_.c
index dc9a863..7e56795 100644
--- a/libf2c/libU77/dtime_.c
+++ b/libf2c/libU77/dtime_.c
@@ -78,16 +78,24 @@ G77_dtime_0 (real tarray[2])
 	    }
 	  else
 	    {
+#ifdef _GNU_H_WINDOWS32_STRUCTURES
 	      clock_freq = ((unsigned long long) freq.HighPart << 32)
-		+ ((unsigned) freq.LowPart);
+                           + ((unsigned) freq.LowPart);
+#else
+	      clock_freq = freq.QuadPart;
+#endif
 	    }
 	}
 
       if (!QueryPerformanceCounter (&counter_val))
 	return -1.0;
 
+#ifdef _GNU_H_WINDOWS32_STRUCTURES
       count = ((unsigned long long) counter_val.HighPart << 32)
-	+ (unsigned) counter_val.LowPart;
+              + (unsigned) counter_val.LowPart;
+#else
+      count = counter_val.QuadPart;
+#endif
       delta = ((double) (count - old_count)) / clock_freq;
       tarray[0] = (float) delta;
       tarray[1] = 0.0;
diff --git a/libf2c/libU77/etime_.c b/libf2c/libU77/etime_.c
index d0edb2f..eebed91 100644
--- a/libf2c/libU77/etime_.c
+++ b/libf2c/libU77/etime_.c
@@ -78,20 +78,32 @@ G77_etime_0 (real tarray[2])
 	    }
 	  else
 	    {
+#ifdef _GNU_H_WINDOWS32_STRUCTURES
 	      clock_freq = ((unsigned long long) freq.HighPart << 32)
-		+ ((unsigned) freq.LowPart);
+                           + ((unsigned) freq.LowPart);
+#else
+	      clock_freq = freq.QuadPart;
+#endif
 	      if (!QueryPerformanceCounter (&counter_val))
 		return -1.0;
+#ifdef _GNU_H_WINDOWS32_STRUCTURES
 	      old_count = ((unsigned long long) counter_val.HighPart << 32)
-		+ (unsigned) counter_val.LowPart;
+	                  + (unsigned) counter_val.LowPart;
+#else
+	      old_count = counter_val.QuadPart;
+#endif
 	    }
 	}
 
       if (!QueryPerformanceCounter (&counter_val))
 	return -1.0;
 
+#ifdef _GNU_H_WINDOWS32_STRUCTURES
       count = ((unsigned long long) counter_val.HighPart << 32)
-	+ (unsigned) counter_val.LowPart;
+              + (unsigned) counter_val.LowPart;
+#else
+      count = counter_val.QuadPart;
+#endif
       tarray[0] = usertime = (double) (count - old_count) / clock_freq;
       tarray[1] = systime = 0.0;
     }
diff --git a/libf2c/libU77/sleep_.c b/libf2c/libU77/sleep_.c
index fcf112a..88c59dc 100644
--- a/libf2c/libU77/sleep_.c
+++ b/libf2c/libU77/sleep_.c
@@ -22,12 +22,23 @@ Boston, MA 02111-1307, USA.  */
 #if HAVE_UNISTD_H
 #  include <unistd.h>
 #endif
+#ifdef _WIN32
+#define WIN32_LEAN_AND_MEAN
+#include <windows.h>
+#undef min
+#undef max
+#endif
 #include "f2c.h"
 
 /* Subroutine */
 int
 G77_sleep_0 (const integer * seconds)
 {
+#ifndef _WIN32
   (void) sleep ((unsigned int) *seconds);
+#else
+  /* w32api Sleep takes duration in millisecs  */
+  (void) Sleep (((unsigned int) *seconds) * 1000 );
+#endif
   return 0;
 }
diff --git a/libf2c/libU77/sys_clock_.c b/libf2c/libU77/sys_clock_.c
index ea39eea..26c71c8 100644
--- a/libf2c/libU77/sys_clock_.c
+++ b/libf2c/libU77/sys_clock_.c
@@ -40,6 +40,11 @@ Boston, MA 02111-1307, USA.  */
 #if HAVE_UNISTD_H
 #  include <unistd.h>
 #endif
+#if defined (_WIN32)
+#  include <windows.h>
+#  undef min
+#  undef max
+#endif
 #include <errno.h>		/* for ENOSYS */
 #include "f2c.h"
 
@@ -47,7 +52,55 @@ int
 G77_system_clock_0 (integer * count, integer * count_rate,
 		    integer * count_max)
 {
-#if defined (HAVE_TIMES)
+#if defined (_WIN32)
+  /* Windows32 provides a slew of interfaces for getting time information;
+     we use the high resolution performance counters available on all ix86 
+     and Alphas. The downside is that all the information is 64bit. We
+     could use GetTickCount or timeGetTime interface, but then the resolution
+     is only 1.0e-3s. */
+
+  unsigned long long clock_freq;
+  unsigned long long cnt;
+  LARGE_INTEGER counter_val;
+  LARGE_INTEGER freq;
+  if (! QueryPerformanceFrequency (&freq))
+    {
+      errno = ENOSYS;
+      return -1;
+    }
+
+#ifdef _GNU_H_WINDOWS32_STRUCTURES
+  clock_freq = ((unsigned long long) freq.HighPart << 32)
+	       + ((unsigned) freq.LowPart);
+#else
+  clock_freq = freq.QuadPart;
+#endif
+  if (count_rate) 
+    {
+       /* the following cast is obviously dubious, but there is only so much
+          one can do with 32bit quantities. */
+      *count_rate = (unsigned long) clock_freq;
+    }
+  if (count_max)		/* optional arg present? */
+    *count_max = INT_MAX;		/* dubious */
+
+  if (! QueryPerformanceCounter (&counter_val))
+    {
+      errno = ENOSYS;
+      return -1;
+    }
+
+#ifdef _GNU_H_WINDOWS32_STRUCTURES
+  cnt = ((unsigned long long) counter_val.HighPart << 32)
+	+ ((unsigned) counter_val.LowPart);
+#else
+  cnt = counter_val.QuadPart;
+#endif
+  
+  /* another dubious cast. */
+  *count = (unsigned long) cnt;
+  return 0;
+#elif defined (HAVE_TIMES)
   struct tms buffer;
   unsigned long cnt;
   if (count_rate)
diff --git a/libf2c/libU77/umask_.c b/libf2c/libU77/umask_.c
index 5c4546a..9a732b2 100644
--- a/libf2c/libU77/umask_.c
+++ b/libf2c/libU77/umask_.c
@@ -21,6 +21,9 @@ Boston, MA 02111-1307, USA.  */
 #endif
 #include <sys/types.h>
 #include <sys/stat.h>
+#ifdef _WIN32
+#include <io.h>
+#endif
 #include "f2c.h"
 
 integer
diff --git a/libffi/src/x86/win32.S b/libffi/src/x86/win32.S
index 796af18..5b42f48 100644
--- a/libffi/src/x86/win32.S
+++ b/libffi/src/x86/win32.S
@@ -31,12 +31,13 @@
  
 .text
  
-.globl ffi_prep_args
+.globl _ffi_prep_args
  
         # This assumes we are using gas.
         .balign 16
 .globl _ffi_call_SYSV
- 
+ 	.def	_ffi_call_SYSV;	.scl	2;	.type	32;	.endef
+
 _ffi_call_SYSV:
         pushl %ebp
         movl  %esp,%ebp
@@ -133,6 +134,7 @@ epilogue:
         # This assumes we are using gas.
         .balign 16
 .globl _ffi_call_STDCALL
+	.def	_ffi_call_STDCALL;	.scl	2;	.type	32;	.endef
 
 _ffi_call_STDCALL:
         pushl %ebp
diff --git a/libiberty/lrealpath.c b/libiberty/lrealpath.c
index b001b38..3d5f5e2 100644
--- a/libiberty/lrealpath.c
+++ b/libiberty/lrealpath.c
@@ -64,6 +64,11 @@ extern char *canonicalize_file_name (const char *);
 #   define REALPATH_LIMIT MAXPATHLEN
 #  endif
 # endif
+#else
+# if 0 /* defined (_WIN32) */
+#  define WIN32_LEAN_AND_MEAN
+#  include <windows.h> /* for GetFullPathName */
+# endif
 #endif
 
 char *
@@ -123,6 +128,19 @@ lrealpath (filename)
   }
 #endif
 
+  /* The W32API method.  If we don't have realpath, we assume we don't
+     have symlinks and just canonicalize to a Windows absolute path.  */
+#if 0 /*  defined (_WIN32) */
+  {
+    char buf[MAX_PATH];
+    char* finalpart;
+    DWORD len = GetFullPathName (filename, MAX_PATH, buf, &finalpart);
+    if (len == 0 || len > MAX_PATH-1) /* failure */
+      return strdup (filename);
+    else
+      return strdup (buf);
+    }
+#endif
   /* This system is a lost cause, just duplicate the filename.  */
   return strdup (filename);
 }
diff --git a/libiberty/strerror.c b/libiberty/strerror.c
index 18050c2..aed3b3d 100644
--- a/libiberty/strerror.c
+++ b/libiberty/strerror.c
@@ -25,6 +25,7 @@
 #undef sys_errlist
 #endif
 
+
 /*  Routines imported from standard C runtime libraries. */
 
 #ifdef HAVE_STDLIB_H
@@ -467,8 +468,10 @@ static const char **sys_errlist;
 
 #else
 
+#ifndef __MINGW32__
 extern int sys_nerr;
 extern char *sys_errlist[];
+#endif
 
 #endif
 
diff --git a/libjava/Makefile.am b/libjava/Makefile.am
index c07b7d7..41be715 100644
--- a/libjava/Makefile.am
+++ b/libjava/Makefile.am
@@ -52,10 +52,11 @@ if NULL_TARGET
 ## In this case, gcj is found outside the build tree.  However, zip is
 ## found in the build tree.
 ZIP = $(MULTIBUILDTOP)../$(COMPPATH)/fastjar/jar
+GCJH = gcjh
 else
 ZIP = jar
+GCJH = $(target_alias)-gcjh
 endif
-GCJH = gcjh
 else # CANADIAN
 GCJH = $(MULTIBUILDTOP)../$(COMPPATH)/gcc/gcjh
 ZIP = $(MULTIBUILDTOP)../$(COMPPATH)/fastjar/jar
@@ -218,8 +219,8 @@ all_java_source_files = \
 all_java_class_files = $(all_java_source_files:.java=.class)
 
 .java.class:
-	$(JAVAC) $(JCFLAGS) -classpath '' -bootclasspath $(here):$(srcdir) \
-             -d $(here) $<
+	$(JAVAC) $(JCFLAGS) -classpath '' -bootclasspath $(here)'$(CLASSPATH_SEP)'$(srcdir) \
+	-d $(here) $<
 
 libgcj-@gcc_version@.jar: $(all_java_class_files)
 	-@rm -f libgcj-@gcc_version@.jar
diff --git a/libjava/Makefile.in b/libjava/Makefile.in
index cdc5802..61088e0 100644
--- a/libjava/Makefile.in
+++ b/libjava/Makefile.in
@@ -68,6 +68,7 @@ AS = @AS@
 BACKTRACESPEC = @BACKTRACESPEC@
 CC = @CC@
 CHECKREFSPEC = @CHECKREFSPEC@
+CLASSPATH_SEP = @CLASSPATH_SEP@
 COMPPATH = @COMPPATH@
 CXX = @CXX@
 CXXCPP = @CXXCPP@
@@ -155,7 +156,8 @@ bin_SCRIPTS = addr2name.awk
 @CANADIAN_TRUE@@NULL_TARGET_TRUE@ZIP = @CANADIAN_TRUE@@NULL_TARGET_TRUE@$(MULTIBUILDTOP)../$(COMPPATH)/fastjar/jar
 @CANADIAN_TRUE@@NULL_TARGET_FALSE@ZIP = @CANADIAN_TRUE@@NULL_TARGET_FALSE@jar
 @CANADIAN_FALSE@ZIP = @CANADIAN_FALSE@$(MULTIBUILDTOP)../$(COMPPATH)/fastjar/jar
-@CANADIAN_TRUE@GCJH = @CANADIAN_TRUE@gcjh
+@CANADIAN_TRUE@@NULL_TARGET_TRUE@GCJH = @CANADIAN_TRUE@@NULL_TARGET_TRUE@gcjh
+@CANADIAN_TRUE@@NULL_TARGET_FALSE@GCJH = @CANADIAN_TRUE@@NULL_TARGET_FALSE@$(target_alias)-gcjh
 @CANADIAN_FALSE@GCJH = @CANADIAN_FALSE@$(MULTIBUILDTOP)../$(COMPPATH)/gcc/gcjh
 
 GCJ_WITH_FLAGS = $(GCJ) --encoding=UTF-8
@@ -2391,7 +2393,7 @@ libgcj-test.spec.in libgcj.spec.in
 
 DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)
 
-TAR = gtar
+TAR = tar
 GZIP_ENV = --best
 DIST_SUBDIRS =  @DIRLTDL@ testsuite gcj include @DIRLTDL@ gcj include
 DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \
@@ -3845,7 +3847,7 @@ $(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ configure.in  acinclude.m4
 
 config.status: $(srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
 	$(SHELL) ./config.status --recheck
-$(srcdir)/configure: @MAINTAINER_MODE_TRUE@$(srcdir)/configure.in $(ACLOCAL_M4) $(CONFIGURE_DEPENDENCIES)
+$(srcdir)/configure: @MAINTAINER_MODE_TRUE@$(srcdir)/@CONFIGURE_AC@ $(ACLOCAL_M4) $(CONFIGURE_DEPENDENCIES)
 	cd $(srcdir) && $(AUTOCONF)
 libgcj.spec: $(top_builddir)/config.status libgcj.spec.in
 	cd $(top_builddir) && CONFIG_FILES=$@ CONFIG_HEADERS= $(SHELL) ./config.status
@@ -4074,7 +4076,7 @@ maintainer-clean-recursive:
 	dot_seen=no; \
 	rev=''; list='$(SUBDIRS)'; for subdir in $$list; do \
 	  rev="$$subdir $$rev"; \
-	  test "$$subdir" = "." && dot_seen=yes; \
+	  test "$$subdir" != "." || dot_seen=yes; \
 	done; \
 	test "$$dot_seen" = "no" && rev=". $$rev"; \
 	target=`echo $@ | sed s/-recursive//`; \
@@ -4348,8 +4350,8 @@ maintainer-clean-generic clean mostlyclean distclean maintainer-clean
 
 
 .java.class:
-	$(JAVAC) $(JCFLAGS) -classpath '' -bootclasspath $(here):$(srcdir) \
-             -d $(here) $<
+	$(JAVAC) $(JCFLAGS) -classpath '' -bootclasspath $(here)'$(CLASSPATH_SEP)'$(srcdir) \
+	-d $(here) $<
 
 libgcj-@gcc_version@.jar: $(all_java_class_files)
 	-@rm -f libgcj-@gcc_version@.jar
diff --git a/libjava/aclocal.m4 b/libjava/aclocal.m4
index 91291ae..ac6949f 100644
--- a/libjava/aclocal.m4
+++ b/libjava/aclocal.m4
@@ -1,6 +1,6 @@
-dnl aclocal.m4 generated automatically by aclocal 1.4
+dnl aclocal.m4 generated automatically by aclocal 1.4-p5
 
-dnl Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.
+dnl Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.
 dnl This file is free software; the Free Software Foundation
 dnl gives unlimited permission to copy and/or distribute it,
 dnl with or without modifications, as long as this notice is preserved.
@@ -319,7 +319,7 @@ fi[]dnl
 dnl Usage:
 dnl AM_INIT_AUTOMAKE(package,version, [no-define])
 
-AC_DEFUN(AM_INIT_AUTOMAKE,
+AC_DEFUN([AM_INIT_AUTOMAKE],
 [AC_REQUIRE([AC_PROG_INSTALL])
 PACKAGE=[$1]
 AC_SUBST(PACKAGE)
@@ -347,7 +347,7 @@ AC_REQUIRE([AC_PROG_MAKE_SET])])
 # Check to make sure that the build environment is sane.
 #
 
-AC_DEFUN(AM_SANITY_CHECK,
+AC_DEFUN([AM_SANITY_CHECK],
 [AC_MSG_CHECKING([whether build environment is sane])
 # Just in case
 sleep 1
@@ -388,7 +388,7 @@ AC_MSG_RESULT(yes)])
 
 dnl AM_MISSING_PROG(NAME, PROGRAM, DIRECTORY)
 dnl The program must properly implement --version.
-AC_DEFUN(AM_MISSING_PROG,
+AC_DEFUN([AM_MISSING_PROG],
 [AC_MSG_CHECKING(for working $2)
 # Run test in a subshell; some versions of sh will print an error if
 # an executable is not found, even if stderr is redirected.
@@ -407,7 +407,7 @@ AC_SUBST($1)])
 
 # serial 1
 
-AC_DEFUN(AM_MAINTAINER_MODE,
+AC_DEFUN([AM_MAINTAINER_MODE],
 [AC_MSG_CHECKING([whether to enable maintainer-specific portions of Makefiles])
   dnl maintainer-mode is disabled by default
   AC_ARG_ENABLE(maintainer-mode,
@@ -424,7 +424,7 @@ AC_DEFUN(AM_MAINTAINER_MODE,
 
 # Define a conditional.
 
-AC_DEFUN(AM_CONDITIONAL,
+AC_DEFUN([AM_CONDITIONAL],
 [AC_SUBST($1_TRUE)
 AC_SUBST($1_FALSE)
 if $2; then
@@ -437,7 +437,7 @@ fi])
 
 # Like AC_CONFIG_HEADER, but automatically create stamp file.
 
-AC_DEFUN(AM_CONFIG_HEADER,
+AC_DEFUN([AM_CONFIG_HEADER],
 [AC_PREREQ([2.12])
 AC_CONFIG_HEADER([$1])
 dnl When config.status generates a header, we must update the stamp-h file.
diff --git a/libjava/configure b/libjava/configure
index 9169372..e756d04 100755
--- a/libjava/configure
+++ b/libjava/configure
@@ -1685,8 +1685,8 @@ LIBGCJ_JAVAFLAGS="${libgcj_javaflags}"
 
 
 
-# Only use libltdl for native builds.
-if test -z "${with_cross_host}"; then
+# Only use libltdl for non-newlib builds.
+if test "x${with_newlib}" = "x" || test "x${with_newlib}" = "xno"; then
      case $enable_ltdl_convenience in
   no) { echo "configure: error: this package needs a convenience libltdl" 1>&2; exit 1; } ;;
   "") enable_ltdl_convenience=yes
@@ -3455,26 +3455,16 @@ EOF
 #define NO_GETUID 1
 EOF
 
-
-   # If Canadian cross, then don't pick up tools from the build
-   # directory.
-   if test x"$build" != x"$with_cross_host" \
-        && test x"$build" != x"$target"; then
-      CANADIAN=yes
-      GCC_UNWIND_INCLUDE=
-      GCJ="${target_alias}-gcj"
-   fi
-   NATIVE=no
 else
    for ac_func in strerror ioctl select fstat open fsync sleep opendir
 do
 echo $ac_n "checking for $ac_func""... $ac_c" 1>&6
-echo "configure:3480: checking for $ac_func" >&5
+echo "configure:3470: checking for $ac_func" >&5
 if eval "test \"`echo '$''{'ac_cv_func_$ac_func'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 3485 "configure"
+#line 3475 "configure"
 #include "confdefs.h"
 /* System header to define __stub macros and hopefully few prototypes,
     which can conflict with char $ac_func(); below.  */
@@ -3497,7 +3487,7 @@ $ac_func();
 
 ; return 0; }
 EOF
-if { (eval echo configure:3508: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:3498: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_func_$ac_func=yes"
 else
@@ -3524,12 +3514,12 @@ done
    for ac_func in gmtime_r localtime_r readdir_r getpwuid_r getcwd
 do
 echo $ac_n "checking for $ac_func""... $ac_c" 1>&6
-echo "configure:3535: checking for $ac_func" >&5
+echo "configure:3525: checking for $ac_func" >&5
 if eval "test \"`echo '$''{'ac_cv_func_$ac_func'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 3540 "configure"
+#line 3530 "configure"
 #include "confdefs.h"
 /* System header to define __stub macros and hopefully few prototypes,
     which can conflict with char $ac_func(); below.  */
@@ -3552,7 +3542,7 @@ $ac_func();
 
 ; return 0; }
 EOF
-if { (eval echo configure:3563: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:3553: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_func_$ac_func=yes"
 else
@@ -3579,12 +3569,12 @@ done
    for ac_func in access stat mkdir rename rmdir unlink realpath utime chmod
 do
 echo $ac_n "checking for $ac_func""... $ac_c" 1>&6
-echo "configure:3590: checking for $ac_func" >&5
+echo "configure:3580: checking for $ac_func" >&5
 if eval "test \"`echo '$''{'ac_cv_func_$ac_func'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 3595 "configure"
+#line 3585 "configure"
 #include "confdefs.h"
 /* System header to define __stub macros and hopefully few prototypes,
     which can conflict with char $ac_func(); below.  */
@@ -3607,7 +3597,7 @@ $ac_func();
 
 ; return 0; }
 EOF
-if { (eval echo configure:3618: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:3608: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_func_$ac_func=yes"
 else
@@ -3634,12 +3624,12 @@ done
    for ac_func in nl_langinfo setlocale
 do
 echo $ac_n "checking for $ac_func""... $ac_c" 1>&6
-echo "configure:3645: checking for $ac_func" >&5
+echo "configure:3635: checking for $ac_func" >&5
 if eval "test \"`echo '$''{'ac_cv_func_$ac_func'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 3650 "configure"
+#line 3640 "configure"
 #include "confdefs.h"
 /* System header to define __stub macros and hopefully few prototypes,
     which can conflict with char $ac_func(); below.  */
@@ -3662,7 +3652,7 @@ $ac_func();
 
 ; return 0; }
 EOF
-if { (eval echo configure:3673: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:3663: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_func_$ac_func=yes"
 else
@@ -3689,12 +3679,12 @@ done
    for ac_func in inet_aton inet_addr
 do
 echo $ac_n "checking for $ac_func""... $ac_c" 1>&6
-echo "configure:3700: checking for $ac_func" >&5
+echo "configure:3690: checking for $ac_func" >&5
 if eval "test \"`echo '$''{'ac_cv_func_$ac_func'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 3705 "configure"
+#line 3695 "configure"
 #include "confdefs.h"
 /* System header to define __stub macros and hopefully few prototypes,
     which can conflict with char $ac_func(); below.  */
@@ -3717,7 +3707,7 @@ $ac_func();
 
 ; return 0; }
 EOF
-if { (eval echo configure:3728: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:3718: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_func_$ac_func=yes"
 else
@@ -3744,12 +3734,12 @@ done
    for ac_func in inet_pton uname inet_ntoa
 do
 echo $ac_n "checking for $ac_func""... $ac_c" 1>&6
-echo "configure:3755: checking for $ac_func" >&5
+echo "configure:3745: checking for $ac_func" >&5
 if eval "test \"`echo '$''{'ac_cv_func_$ac_func'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 3760 "configure"
+#line 3750 "configure"
 #include "confdefs.h"
 /* System header to define __stub macros and hopefully few prototypes,
     which can conflict with char $ac_func(); below.  */
@@ -3772,7 +3762,7 @@ $ac_func();
 
 ; return 0; }
 EOF
-if { (eval echo configure:3783: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:3773: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_func_$ac_func=yes"
 else
@@ -3799,12 +3789,12 @@ done
    for ac_func in fork execvp pipe sigaction ftruncate
 do
 echo $ac_n "checking for $ac_func""... $ac_c" 1>&6
-echo "configure:3810: checking for $ac_func" >&5
+echo "configure:3800: checking for $ac_func" >&5
 if eval "test \"`echo '$''{'ac_cv_func_$ac_func'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 3815 "configure"
+#line 3805 "configure"
 #include "confdefs.h"
 /* System header to define __stub macros and hopefully few prototypes,
     which can conflict with char $ac_func(); below.  */
@@ -3827,7 +3817,7 @@ $ac_func();
 
 ; return 0; }
 EOF
-if { (eval echo configure:3838: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:3828: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_func_$ac_func=yes"
 else
@@ -3855,17 +3845,17 @@ done
 do
 ac_safe=`echo "$ac_hdr" | sed 'y%./+-%__p_%'`
 echo $ac_n "checking for $ac_hdr""... $ac_c" 1>&6
-echo "configure:3866: checking for $ac_hdr" >&5
+echo "configure:3856: checking for $ac_hdr" >&5
 if eval "test \"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 3871 "configure"
+#line 3861 "configure"
 #include "confdefs.h"
 #include <$ac_hdr>
 EOF
 ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
-{ (eval echo configure:3876: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
+{ (eval echo configure:3866: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
 ac_err=`grep -v '^ *+' conftest.out | grep -v "^conftest.${ac_ext}\$"`
 if test -z "$ac_err"; then
   rm -rf conftest*
@@ -3892,12 +3882,12 @@ fi
 done
  
    echo $ac_n "checking for backtrace""... $ac_c" 1>&6
-echo "configure:3903: checking for backtrace" >&5
+echo "configure:3893: checking for backtrace" >&5
 if eval "test \"`echo '$''{'ac_cv_func_backtrace'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 3908 "configure"
+#line 3898 "configure"
 #include "confdefs.h"
 /* System header to define __stub macros and hopefully few prototypes,
     which can conflict with char backtrace(); below.  */
@@ -3920,7 +3910,7 @@ backtrace();
 
 ; return 0; }
 EOF
-if { (eval echo configure:3931: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:3921: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_func_backtrace=yes"
 else
@@ -3964,7 +3954,7 @@ fi
 
 
    echo $ac_n "checking for dladdr in -ldl""... $ac_c" 1>&6
-echo "configure:3975: checking for dladdr in -ldl" >&5
+echo "configure:3965: checking for dladdr in -ldl" >&5
 ac_lib_var=`echo dl'_'dladdr | sed 'y%./+-%__p_%'`
 if eval "test \"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
@@ -3972,7 +3962,7 @@ else
   ac_save_LIBS="$LIBS"
 LIBS="-ldl  $LIBS"
 cat > conftest.$ac_ext <<EOF
-#line 3983 "configure"
+#line 3973 "configure"
 #include "confdefs.h"
 /* Override any gcc2 internal prototype to avoid an error.  */
 /* We use char because int might match the return type of a gcc2
@@ -3983,7 +3973,7 @@ int main() {
 dladdr()
 ; return 0; }
 EOF
-if { (eval echo configure:3994: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:3984: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_lib_$ac_lib_var=yes"
 else
@@ -4013,7 +4003,7 @@ do
 
 ac_safe=`echo "$ac_file" | sed 'y%./+-%__p_%'`
 echo $ac_n "checking for $ac_file""... $ac_c" 1>&6
-echo "configure:4024: checking for $ac_file" >&5
+echo "configure:4014: checking for $ac_file" >&5
 if eval "test \"`echo '$''{'ac_cv_file_$ac_safe'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -4071,7 +4061,7 @@ fi
 
 
   echo $ac_n "checking for iconv""... $ac_c" 1>&6
-echo "configure:4082: checking for iconv" >&5
+echo "configure:4072: checking for iconv" >&5
 if eval "test \"`echo '$''{'am_cv_func_iconv'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -4079,7 +4069,7 @@ else
     am_cv_func_iconv="no, consider installing GNU libiconv"
     am_cv_lib_iconv=no
     cat > conftest.$ac_ext <<EOF
-#line 4090 "configure"
+#line 4080 "configure"
 #include "confdefs.h"
 #include <stdlib.h>
 #include <iconv.h>
@@ -4089,7 +4079,7 @@ iconv_t cd = iconv_open("","");
        iconv_close(cd);
 ; return 0; }
 EOF
-if { (eval echo configure:4100: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:4090: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   am_cv_func_iconv=yes
 else
@@ -4101,7 +4091,7 @@ rm -f conftest*
       am_save_LIBS="$LIBS"
       LIBS="$LIBS $am_cv_libiconv_ldpath -liconv"
       cat > conftest.$ac_ext <<EOF
-#line 4112 "configure"
+#line 4102 "configure"
 #include "confdefs.h"
 #include <stdlib.h>
 #include <iconv.h>
@@ -4111,7 +4101,7 @@ iconv_t cd = iconv_open("","");
          iconv_close(cd);
 ; return 0; }
 EOF
-if { (eval echo configure:4122: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:4112: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   am_cv_lib_iconv=yes
         am_cv_func_iconv=yes
@@ -4132,13 +4122,13 @@ echo "$ac_t""$am_cv_func_iconv" 1>&6
 EOF
 
     echo $ac_n "checking for iconv declaration""... $ac_c" 1>&6
-echo "configure:4143: checking for iconv declaration" >&5
+echo "configure:4133: checking for iconv declaration" >&5
     if eval "test \"`echo '$''{'am_cv_proto_iconv'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   
       cat > conftest.$ac_ext <<EOF
-#line 4149 "configure"
+#line 4139 "configure"
 #include "confdefs.h"
 
 #include <stdlib.h>
@@ -4157,7 +4147,7 @@ int main() {
 
 ; return 0; }
 EOF
-if { (eval echo configure:4168: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
+if { (eval echo configure:4158: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
   rm -rf conftest*
   am_cv_proto_iconv_arg1=""
 else
@@ -4186,19 +4176,19 @@ EOF
 
    if test $ac_cv_header_locale_h = yes; then
     echo $ac_n "checking for LC_MESSAGES""... $ac_c" 1>&6
-echo "configure:4197: checking for LC_MESSAGES" >&5
+echo "configure:4187: checking for LC_MESSAGES" >&5
 if eval "test \"`echo '$''{'am_cv_val_LC_MESSAGES'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 4202 "configure"
+#line 4192 "configure"
 #include "confdefs.h"
 #include <locale.h>
 int main() {
 return LC_MESSAGES
 ; return 0; }
 EOF
-if { (eval echo configure:4209: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:4199: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   am_cv_val_LC_MESSAGES=yes
 else
@@ -4219,12 +4209,12 @@ EOF
     fi
   fi
    echo $ac_n "checking whether struct tm is in sys/time.h or time.h""... $ac_c" 1>&6
-echo "configure:4230: checking whether struct tm is in sys/time.h or time.h" >&5
+echo "configure:4220: checking whether struct tm is in sys/time.h or time.h" >&5
 if eval "test \"`echo '$''{'ac_cv_struct_tm'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 4235 "configure"
+#line 4225 "configure"
 #include "confdefs.h"
 #include <sys/types.h>
 #include <time.h>
@@ -4232,7 +4222,7 @@ int main() {
 struct tm *tp; tp->tm_sec;
 ; return 0; }
 EOF
-if { (eval echo configure:4243: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
+if { (eval echo configure:4233: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
   rm -rf conftest*
   ac_cv_struct_tm=time.h
 else
@@ -4253,12 +4243,12 @@ EOF
 fi
 
 echo $ac_n "checking for tm_zone in struct tm""... $ac_c" 1>&6
-echo "configure:4264: checking for tm_zone in struct tm" >&5
+echo "configure:4254: checking for tm_zone in struct tm" >&5
 if eval "test \"`echo '$''{'ac_cv_struct_tm_zone'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 4269 "configure"
+#line 4259 "configure"
 #include "confdefs.h"
 #include <sys/types.h>
 #include <$ac_cv_struct_tm>
@@ -4266,7 +4256,7 @@ int main() {
 struct tm tm; tm.tm_zone;
 ; return 0; }
 EOF
-if { (eval echo configure:4277: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
+if { (eval echo configure:4267: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
   rm -rf conftest*
   ac_cv_struct_tm_zone=yes
 else
@@ -4286,12 +4276,12 @@ EOF
 
 else
   echo $ac_n "checking for tzname""... $ac_c" 1>&6
-echo "configure:4297: checking for tzname" >&5
+echo "configure:4287: checking for tzname" >&5
 if eval "test \"`echo '$''{'ac_cv_var_tzname'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 4302 "configure"
+#line 4292 "configure"
 #include "confdefs.h"
 #include <time.h>
 #ifndef tzname /* For SGI.  */
@@ -4301,7 +4291,7 @@ int main() {
 atoi(*tzname);
 ; return 0; }
 EOF
-if { (eval echo configure:4312: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:4302: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   ac_cv_var_tzname=yes
 else
@@ -4326,12 +4316,12 @@ fi
    for ac_func in gethostbyname_r
 do
 echo $ac_n "checking for $ac_func""... $ac_c" 1>&6
-echo "configure:4337: checking for $ac_func" >&5
+echo "configure:4327: checking for $ac_func" >&5
 if eval "test \"`echo '$''{'ac_cv_func_$ac_func'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 4342 "configure"
+#line 4332 "configure"
 #include "confdefs.h"
 /* System header to define __stub macros and hopefully few prototypes,
     which can conflict with char $ac_func(); below.  */
@@ -4354,7 +4344,7 @@ $ac_func();
 
 ; return 0; }
 EOF
-if { (eval echo configure:4365: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:4355: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_func_$ac_func=yes"
 else
@@ -4381,7 +4371,7 @@ EOF
      # We look for the one that returns `int'.
      # Hopefully this check is robust enough.
      cat > conftest.$ac_ext <<EOF
-#line 4392 "configure"
+#line 4382 "configure"
 #include "confdefs.h"
 #include <netdb.h>
 EOF
@@ -4401,7 +4391,7 @@ rm -f conftest*
      *" -D_REENTRANT "*) ;;
      *)
 		echo $ac_n "checking whether gethostbyname_r declaration requires -D_REENTRANT""... $ac_c" 1>&6
-echo "configure:4412: checking whether gethostbyname_r declaration requires -D_REENTRANT" >&5
+echo "configure:4402: checking whether gethostbyname_r declaration requires -D_REENTRANT" >&5
 if eval "test \"`echo '$''{'libjava_cv_gethostbyname_r_needs_reentrant'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -4414,14 +4404,14 @@ ac_link='${CXX-g++} -o conftest${ac_exeext} $CXXFLAGS $CPPFLAGS $LDFLAGS conftes
 cross_compiling=$ac_cv_prog_cxx_cross
 
 	  cat > conftest.$ac_ext <<EOF
-#line 4425 "configure"
+#line 4415 "configure"
 #include "confdefs.h"
 #include <netdb.h>
 int main() {
 gethostbyname_r("", 0, 0);
 ; return 0; }
 EOF
-if { (eval echo configure:4432: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
+if { (eval echo configure:4422: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
   rm -rf conftest*
   libjava_cv_gethostbyname_r_needs_reentrant=no
 else
@@ -4431,14 +4421,14 @@ else
   		CPPFLAGS_SAVE="$CPPFLAGS"
 		CPPFLAGS="$CPPFLAGS -D_REENTRANT"
 		cat > conftest.$ac_ext <<EOF
-#line 4442 "configure"
+#line 4432 "configure"
 #include "confdefs.h"
 #include <netdb.h>
 int main() {
 gethostbyname_r("", 0, 0);
 ; return 0; }
 EOF
-if { (eval echo configure:4449: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
+if { (eval echo configure:4439: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
   rm -rf conftest*
   libjava_cv_gethostbyname_r_needs_reentrant=yes
 else
@@ -4473,12 +4463,12 @@ EOF
      esac
 
      echo $ac_n "checking for struct hostent_data""... $ac_c" 1>&6
-echo "configure:4484: checking for struct hostent_data" >&5
+echo "configure:4474: checking for struct hostent_data" >&5
 if eval "test \"`echo '$''{'libjava_cv_struct_hostent_data'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   	cat > conftest.$ac_ext <<EOF
-#line 4489 "configure"
+#line 4479 "configure"
 #include "confdefs.h"
 
 #if GETHOSTBYNAME_R_NEEDS_REENTRANT && !defined(_REENTRANT)
@@ -4489,7 +4479,7 @@ int main() {
 struct hostent_data data;
 ; return 0; }
 EOF
-if { (eval echo configure:4500: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
+if { (eval echo configure:4490: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
   rm -rf conftest*
   libjava_cv_struct_hostent_data=yes
 else
@@ -4521,7 +4511,7 @@ done
    # to exist where expected.  (The root issue: AC_CHECK_FUNCS assumes C
    # linkage check is enough, yet C++ code requires proper prototypes.)
    cat > conftest.$ac_ext <<EOF
-#line 4532 "configure"
+#line 4522 "configure"
 #include "confdefs.h"
 #include <netdb.h>
 EOF
@@ -4532,12 +4522,12 @@ if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
    for ac_func in gethostbyaddr_r
 do
 echo $ac_n "checking for $ac_func""... $ac_c" 1>&6
-echo "configure:4543: checking for $ac_func" >&5
+echo "configure:4533: checking for $ac_func" >&5
 if eval "test \"`echo '$''{'ac_cv_func_$ac_func'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 4548 "configure"
+#line 4538 "configure"
 #include "confdefs.h"
 /* System header to define __stub macros and hopefully few prototypes,
     which can conflict with char $ac_func(); below.  */
@@ -4560,7 +4550,7 @@ $ac_func();
 
 ; return 0; }
 EOF
-if { (eval echo configure:4571: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:4561: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_func_$ac_func=yes"
 else
@@ -4587,7 +4577,7 @@ EOF
      # We look for the one that returns `int'.
      # Hopefully this check is robust enough.
      cat > conftest.$ac_ext <<EOF
-#line 4598 "configure"
+#line 4588 "configure"
 #include "confdefs.h"
 #include <netdb.h>
 EOF
@@ -4614,12 +4604,12 @@ rm -f conftest*
    for ac_func in gethostname
 do
 echo $ac_n "checking for $ac_func""... $ac_c" 1>&6
-echo "configure:4625: checking for $ac_func" >&5
+echo "configure:4615: checking for $ac_func" >&5
 if eval "test \"`echo '$''{'ac_cv_func_$ac_func'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 4630 "configure"
+#line 4620 "configure"
 #include "confdefs.h"
 /* System header to define __stub macros and hopefully few prototypes,
     which can conflict with char $ac_func(); below.  */
@@ -4642,7 +4632,7 @@ $ac_func();
 
 ; return 0; }
 EOF
-if { (eval echo configure:4653: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:4643: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_func_$ac_func=yes"
 else
@@ -4666,7 +4656,7 @@ EOF
 EOF
 
      cat > conftest.$ac_ext <<EOF
-#line 4677 "configure"
+#line 4667 "configure"
 #include "confdefs.h"
 #include <unistd.h>
 EOF
@@ -4697,12 +4687,12 @@ done
       for ac_func in pthread_mutexattr_settype pthread_mutexattr_setkind_np
 do
 echo $ac_n "checking for $ac_func""... $ac_c" 1>&6
-echo "configure:4708: checking for $ac_func" >&5
+echo "configure:4698: checking for $ac_func" >&5
 if eval "test \"`echo '$''{'ac_cv_func_$ac_func'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 4713 "configure"
+#line 4703 "configure"
 #include "confdefs.h"
 /* System header to define __stub macros and hopefully few prototypes,
     which can conflict with char $ac_func(); below.  */
@@ -4725,7 +4715,7 @@ $ac_func();
 
 ; return 0; }
 EOF
-if { (eval echo configure:4736: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:4726: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_func_$ac_func=yes"
 else
@@ -4755,12 +4745,12 @@ done
       for ac_func in sched_yield
 do
 echo $ac_n "checking for $ac_func""... $ac_c" 1>&6
-echo "configure:4766: checking for $ac_func" >&5
+echo "configure:4756: checking for $ac_func" >&5
 if eval "test \"`echo '$''{'ac_cv_func_$ac_func'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 4771 "configure"
+#line 4761 "configure"
 #include "confdefs.h"
 /* System header to define __stub macros and hopefully few prototypes,
     which can conflict with char $ac_func(); below.  */
@@ -4783,7 +4773,7 @@ $ac_func();
 
 ; return 0; }
 EOF
-if { (eval echo configure:4794: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:4784: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_func_$ac_func=yes"
 else
@@ -4805,7 +4795,7 @@ EOF
 else
   echo "$ac_t""no" 1>&6
 echo $ac_n "checking for sched_yield in -lrt""... $ac_c" 1>&6
-echo "configure:4816: checking for sched_yield in -lrt" >&5
+echo "configure:4806: checking for sched_yield in -lrt" >&5
 ac_lib_var=`echo rt'_'sched_yield | sed 'y%./+-%__p_%'`
 if eval "test \"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
@@ -4813,7 +4803,7 @@ else
   ac_save_LIBS="$LIBS"
 LIBS="-lrt  $LIBS"
 cat > conftest.$ac_ext <<EOF
-#line 4824 "configure"
+#line 4814 "configure"
 #include "confdefs.h"
 /* Override any gcc2 internal prototype to avoid an error.  */
 /* We use char because int might match the return type of a gcc2
@@ -4824,7 +4814,7 @@ int main() {
 sched_yield()
 ; return 0; }
 EOF
-if { (eval echo configure:4835: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:4825: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_lib_$ac_lib_var=yes"
 else
@@ -4850,7 +4840,7 @@ else
   echo "$ac_t""no" 1>&6
 
 	  echo $ac_n "checking for sched_yield in -lposix4""... $ac_c" 1>&6
-echo "configure:4861: checking for sched_yield in -lposix4" >&5
+echo "configure:4851: checking for sched_yield in -lposix4" >&5
 ac_lib_var=`echo posix4'_'sched_yield | sed 'y%./+-%__p_%'`
 if eval "test \"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
@@ -4858,7 +4848,7 @@ else
   ac_save_LIBS="$LIBS"
 LIBS="-lposix4  $LIBS"
 cat > conftest.$ac_ext <<EOF
-#line 4869 "configure"
+#line 4859 "configure"
 #include "confdefs.h"
 /* Override any gcc2 internal prototype to avoid an error.  */
 /* We use char because int might match the return type of a gcc2
@@ -4869,7 +4859,7 @@ int main() {
 sched_yield()
 ; return 0; }
 EOF
-if { (eval echo configure:4880: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:4870: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_lib_$ac_lib_var=yes"
 else
@@ -4905,7 +4895,7 @@ done
       # We can save a little space at runtime if the mutex has m_count
       # or __m_count.  This is a nice hack for Linux.
       cat > conftest.$ac_ext <<EOF
-#line 4916 "configure"
+#line 4906 "configure"
 #include "confdefs.h"
 #include <pthread.h>
 int main() {
@@ -4914,7 +4904,7 @@ int main() {
         
 ; return 0; }
 EOF
-if { (eval echo configure:4925: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
+if { (eval echo configure:4915: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
   rm -rf conftest*
   cat >> confdefs.h <<\EOF
 #define PTHREAD_MUTEX_HAVE_M_COUNT 1
@@ -4926,7 +4916,7 @@ else
   rm -rf conftest*
   
 	cat > conftest.$ac_ext <<EOF
-#line 4937 "configure"
+#line 4927 "configure"
 #include "confdefs.h"
 #include <pthread.h>
 int main() {
@@ -4935,7 +4925,7 @@ int main() {
 	  
 ; return 0; }
 EOF
-if { (eval echo configure:4946: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
+if { (eval echo configure:4936: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
   rm -rf conftest*
   cat >> confdefs.h <<\EOF
 #define PTHREAD_MUTEX_HAVE___M_COUNT 1
@@ -4955,12 +4945,12 @@ rm -f conftest*
    for ac_func in gettimeofday time ftime
 do
 echo $ac_n "checking for $ac_func""... $ac_c" 1>&6
-echo "configure:4966: checking for $ac_func" >&5
+echo "configure:4956: checking for $ac_func" >&5
 if eval "test \"`echo '$''{'ac_cv_func_$ac_func'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 4971 "configure"
+#line 4961 "configure"
 #include "confdefs.h"
 /* System header to define __stub macros and hopefully few prototypes,
     which can conflict with char $ac_func(); below.  */
@@ -4983,7 +4973,7 @@ $ac_func();
 
 ; return 0; }
 EOF
-if { (eval echo configure:4994: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:4984: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_func_$ac_func=yes"
 else
@@ -5014,12 +5004,12 @@ done
    for ac_func in memmove
 do
 echo $ac_n "checking for $ac_func""... $ac_c" 1>&6
-echo "configure:5025: checking for $ac_func" >&5
+echo "configure:5015: checking for $ac_func" >&5
 if eval "test \"`echo '$''{'ac_cv_func_$ac_func'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 5030 "configure"
+#line 5020 "configure"
 #include "confdefs.h"
 /* System header to define __stub macros and hopefully few prototypes,
     which can conflict with char $ac_func(); below.  */
@@ -5042,7 +5032,7 @@ $ac_func();
 
 ; return 0; }
 EOF
-if { (eval echo configure:5053: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:5043: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_func_$ac_func=yes"
 else
@@ -5072,12 +5062,12 @@ done
    for ac_func in memcpy
 do
 echo $ac_n "checking for $ac_func""... $ac_c" 1>&6
-echo "configure:5083: checking for $ac_func" >&5
+echo "configure:5073: checking for $ac_func" >&5
 if eval "test \"`echo '$''{'ac_cv_func_$ac_func'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 5088 "configure"
+#line 5078 "configure"
 #include "confdefs.h"
 /* System header to define __stub macros and hopefully few prototypes,
     which can conflict with char $ac_func(); below.  */
@@ -5100,7 +5090,7 @@ $ac_func();
 
 ; return 0; }
 EOF
-if { (eval echo configure:5111: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:5101: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_func_$ac_func=yes"
 else
@@ -5129,7 +5119,7 @@ done
    fi
 
    echo $ac_n "checking for dlopen in -ldl""... $ac_c" 1>&6
-echo "configure:5140: checking for dlopen in -ldl" >&5
+echo "configure:5130: checking for dlopen in -ldl" >&5
 ac_lib_var=`echo dl'_'dlopen | sed 'y%./+-%__p_%'`
 if eval "test \"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
@@ -5137,7 +5127,7 @@ else
   ac_save_LIBS="$LIBS"
 LIBS="-ldl  $LIBS"
 cat > conftest.$ac_ext <<EOF
-#line 5148 "configure"
+#line 5138 "configure"
 #include "confdefs.h"
 /* Override any gcc2 internal prototype to avoid an error.  */
 /* We use char because int might match the return type of a gcc2
@@ -5148,7 +5138,7 @@ int main() {
 dlopen()
 ; return 0; }
 EOF
-if { (eval echo configure:5159: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:5149: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_lib_$ac_lib_var=yes"
 else
@@ -5193,7 +5183,7 @@ fi
    #--------------------------------------------------------------------
 
    echo $ac_n "checking for socket libraries""... $ac_c" 1>&6
-echo "configure:5204: checking for socket libraries" >&5
+echo "configure:5194: checking for socket libraries" >&5
 if eval "test \"`echo '$''{'gcj_cv_lib_sockets'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -5201,12 +5191,12 @@ else
      gcj_checkBoth=0
      unset ac_cv_func_connect
      echo $ac_n "checking for connect""... $ac_c" 1>&6
-echo "configure:5212: checking for connect" >&5
+echo "configure:5202: checking for connect" >&5
 if eval "test \"`echo '$''{'ac_cv_func_connect'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 5217 "configure"
+#line 5207 "configure"
 #include "confdefs.h"
 /* System header to define __stub macros and hopefully few prototypes,
     which can conflict with char connect(); below.  */
@@ -5229,7 +5219,7 @@ connect();
 
 ; return 0; }
 EOF
-if { (eval echo configure:5240: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:5230: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_func_connect=yes"
 else
@@ -5252,7 +5242,7 @@ fi
      if test "$gcj_checkSocket" = 1; then
 	 unset ac_cv_func_connect
 	 echo $ac_n "checking for main in -lsocket""... $ac_c" 1>&6
-echo "configure:5263: checking for main in -lsocket" >&5
+echo "configure:5253: checking for main in -lsocket" >&5
 ac_lib_var=`echo socket'_'main | sed 'y%./+-%__p_%'`
 if eval "test \"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
@@ -5260,14 +5250,14 @@ else
   ac_save_LIBS="$LIBS"
 LIBS="-lsocket  $LIBS"
 cat > conftest.$ac_ext <<EOF
-#line 5271 "configure"
+#line 5261 "configure"
 #include "confdefs.h"
 
 int main() {
 main()
 ; return 0; }
 EOF
-if { (eval echo configure:5278: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:5268: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_lib_$ac_lib_var=yes"
 else
@@ -5294,12 +5284,12 @@ fi
 	 LIBS="$LIBS -lsocket -lnsl"
 	 unset ac_cv_func_accept
 	 echo $ac_n "checking for accept""... $ac_c" 1>&6
-echo "configure:5305: checking for accept" >&5
+echo "configure:5295: checking for accept" >&5
 if eval "test \"`echo '$''{'ac_cv_func_accept'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 5310 "configure"
+#line 5300 "configure"
 #include "confdefs.h"
 /* System header to define __stub macros and hopefully few prototypes,
     which can conflict with char accept(); below.  */
@@ -5322,7 +5312,7 @@ accept();
 
 ; return 0; }
 EOF
-if { (eval echo configure:5333: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:5323: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_func_accept=yes"
 else
@@ -5349,12 +5339,12 @@ fi
      gcj_oldLibs=$LIBS
      LIBS="$LIBS $gcj_cv_lib_sockets"
      echo $ac_n "checking for gethostbyname""... $ac_c" 1>&6
-echo "configure:5360: checking for gethostbyname" >&5
+echo "configure:5350: checking for gethostbyname" >&5
 if eval "test \"`echo '$''{'ac_cv_func_gethostbyname'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 5365 "configure"
+#line 5355 "configure"
 #include "confdefs.h"
 /* System header to define __stub macros and hopefully few prototypes,
     which can conflict with char gethostbyname(); below.  */
@@ -5377,7 +5367,7 @@ gethostbyname();
 
 ; return 0; }
 EOF
-if { (eval echo configure:5388: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:5378: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_func_gethostbyname=yes"
 else
@@ -5395,7 +5385,7 @@ if eval "test \"`echo '$ac_cv_func_'gethostbyname`\" = yes"; then
 else
   echo "$ac_t""no" 1>&6
 echo $ac_n "checking for main in -lnsl""... $ac_c" 1>&6
-echo "configure:5406: checking for main in -lnsl" >&5
+echo "configure:5396: checking for main in -lnsl" >&5
 ac_lib_var=`echo nsl'_'main | sed 'y%./+-%__p_%'`
 if eval "test \"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
@@ -5403,14 +5393,14 @@ else
   ac_save_LIBS="$LIBS"
 LIBS="-lnsl  $LIBS"
 cat > conftest.$ac_ext <<EOF
-#line 5414 "configure"
+#line 5404 "configure"
 #include "confdefs.h"
 
 int main() {
 main()
 ; return 0; }
 EOF
-if { (eval echo configure:5421: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:5411: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_lib_$ac_lib_var=yes"
 else
@@ -5442,7 +5432,7 @@ echo "$ac_t""$gcj_cv_lib_sockets" 1>&6
 
    if test "$with_system_zlib" = yes; then
       echo $ac_n "checking for deflate in -lz""... $ac_c" 1>&6
-echo "configure:5453: checking for deflate in -lz" >&5
+echo "configure:5443: checking for deflate in -lz" >&5
 ac_lib_var=`echo z'_'deflate | sed 'y%./+-%__p_%'`
 if eval "test \"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
@@ -5450,7 +5440,7 @@ else
   ac_save_LIBS="$LIBS"
 LIBS="-lz  $LIBS"
 cat > conftest.$ac_ext <<EOF
-#line 5461 "configure"
+#line 5451 "configure"
 #include "confdefs.h"
 /* Override any gcc2 internal prototype to avoid an error.  */
 /* We use char because int might match the return type of a gcc2
@@ -5461,7 +5451,7 @@ int main() {
 deflate()
 ; return 0; }
 EOF
-if { (eval echo configure:5472: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:5462: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_lib_$ac_lib_var=yes"
 else
@@ -5488,7 +5478,7 @@ fi
    # requires -ldl.
    if test "$GC" = boehm; then
       echo $ac_n "checking for main in -ldl""... $ac_c" 1>&6
-echo "configure:5499: checking for main in -ldl" >&5
+echo "configure:5489: checking for main in -ldl" >&5
 ac_lib_var=`echo dl'_'main | sed 'y%./+-%__p_%'`
 if eval "test \"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
@@ -5496,14 +5486,14 @@ else
   ac_save_LIBS="$LIBS"
 LIBS="-ldl  $LIBS"
 cat > conftest.$ac_ext <<EOF
-#line 5507 "configure"
+#line 5497 "configure"
 #include "confdefs.h"
 
 int main() {
 main()
 ; return 0; }
 EOF
-if { (eval echo configure:5514: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:5504: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_lib_$ac_lib_var=yes"
 else
@@ -5532,15 +5522,74 @@ fi
       builddotdot=`echo ${with_multisubdir} | sed -e 's:[^/][^/]*:..:g'`
 
    fi
-   if test -x "${builddotdot}/../../gcc/gcj"; then
-      dir="`cd ${builddotdot}/../../gcc && ${PWDCMD-pwd}`"
-      GCJ="$dir/gcj -B`${PWDCMD-pwd}`/ -B$dir/"
-   else
+fi
+
+case "${build}" in
+    *mingw*) CLASSPATH_SEP=';' ;;
+    *) CLASSPATH_SEP=':' ;;
+esac
+
+# Which gcj do we use?
+which_gcj=default
+built_gcc_dir="`cd ${builddotdot}/../../gcc && ${PWDCMD-pwd}`"
+if test -n "${with_cross_host}"; then
+  # We are being configured with a cross compiler. We can't
+  # use ac_exeext, because that is for the target platform.
+  NATIVE=no
+  cross_host_exeext=
+  case "${with_cross_host}" in
+     *mingw* | *cygwin*)
+         cross_host_exeext=.exe
+     ;;
+  esac
+  if test -x "${built_gcc_dir}/gcj${cross_host_exeext}"; then
+     if test x"$build" = x"$with_cross_host"; then
+        # Ordinary cross (host!=target and host=build)
+        which_gcj=built
+     else
+        # Canadian cross (host!=target and host!=build)
+        which_gcj=cross
+     fi
+  else
+     which_gcj=cross
+  fi
+else
+  # We are being configured with a native or crossed-native compiler
+  if test -x "${built_gcc_dir}/gcj${ac_exeext}"; then
+     if test x"$build" = x"$host"; then
+        # True native build (host=target and host=build)
+        which_gcj=built
+     else
+        # Crossed-native build (host=target and host!=build)
+        which_gcj=cross
+     fi
+  else
+     which_gcj=path
+  fi
+fi
+case "${which_gcj}" in
+   built)
+      GCJ="$built_gcc_dir/gcj -B`${PWDCMD-pwd}`/ -B$built_gcc_dir/"
+   ;;
+   cross)
+      # See the comment in Makefile.am about CANADIAN being a misnomer
+      CANADIAN=yes
+      NULL_TARGET=no
+      if test "x${with_newlib}" = "xyes"; then
+         # FIXME (comment): Why is this needed?
+         GCC_UNWIND_INCLUDE=
+         GCJ="${target_alias}-gcj"
+      else
+         GCJ="${target_alias}-gcj -B`${PWDCMD-pwd}`/"
+      fi
+   ;;
+   path)
+      # See the comment in Makefile.am about CANADIAN being a misnomer
       CANADIAN=yes
       NULL_TARGET=yes
       GCJ="gcj -B`${PWDCMD-pwd}`/"
-   fi
-fi
+   ;;
+esac
 
 # Create it, so that compile/link tests don't fail
 test -f libgcj.spec || touch libgcj.spec
@@ -5569,7 +5618,7 @@ fi
 # Extract the first word of "${ac_tool_prefix}gcj", so it can be a program name with args.
 set dummy ${ac_tool_prefix}gcj; ac_word=$2
 echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
-echo "configure:5580: checking for $ac_word" >&5
+echo "configure:5629: checking for $ac_word" >&5
 if eval "test \"`echo '$''{'ac_cv_prog_GCJ'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -5601,7 +5650,7 @@ if test -n "$ac_tool_prefix"; then
   # Extract the first word of "gcj", so it can be a program name with args.
 set dummy gcj; ac_word=$2
 echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
-echo "configure:5612: checking for $ac_word" >&5
+echo "configure:5661: checking for $ac_word" >&5
 if eval "test \"`echo '$''{'ac_cv_prog_GCJ'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -5663,13 +5712,13 @@ exec 5>>./config.log
 CPPFLAGS=$GCJ_SAVE_CPPFLAGS
 
 echo $ac_n "checking size of void *""... $ac_c" 1>&6
-echo "configure:5674: checking size of void *" >&5
+echo "configure:5723: checking size of void *" >&5
 if eval "test \"`echo '$''{'ac_cv_sizeof_void_p'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   for ac_size in 4 8 1 2 16 12  ; do # List sizes in rough order of prevalence.
   cat > conftest.$ac_ext <<EOF
-#line 5680 "configure"
+#line 5729 "configure"
 #include "confdefs.h"
 #include "confdefs.h"
 #include <sys/types.h>
@@ -5679,7 +5728,7 @@ int main() {
 switch (0) case 0: case (sizeof (void *) == $ac_size):;
 ; return 0; }
 EOF
-if { (eval echo configure:5690: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
+if { (eval echo configure:5739: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
   rm -rf conftest*
   ac_cv_sizeof_void_p=$ac_size
 else
@@ -5724,6 +5773,7 @@ fi
 
 
 
+
 if test "$CANADIAN" = yes; then
   CANADIAN_TRUE=
   CANADIAN_FALSE='#'
@@ -5789,18 +5839,18 @@ EOF
 
 
 echo $ac_n "checking for g++ -ffloat-store bug""... $ac_c" 1>&6
-echo "configure:5796: checking for g++ -ffloat-store bug" >&5
+echo "configure:5846: checking for g++ -ffloat-store bug" >&5
 save_CFLAGS="$CFLAGS"
 CFLAGS="-x c++ -O2 -ffloat-store"
 cat > conftest.$ac_ext <<EOF
-#line 5800 "configure"
+#line 5850 "configure"
 #include "confdefs.h"
 #include <math.h>
 int main() {
 
 ; return 0; }
 EOF
-if { (eval echo configure:5807: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
+if { (eval echo configure:5857: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
   rm -rf conftest*
   echo "$ac_t""no" 1>&6
 else
@@ -5820,17 +5870,17 @@ for ac_hdr in unistd.h bstring.h sys/time.h sys/types.h fcntl.h sys/ioctl.h sys/
 do
 ac_safe=`echo "$ac_hdr" | sed 'y%./+-%__p_%'`
 echo $ac_n "checking for $ac_hdr""... $ac_c" 1>&6
-echo "configure:5827: checking for $ac_hdr" >&5
+echo "configure:5877: checking for $ac_hdr" >&5
 if eval "test \"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 5832 "configure"
+#line 5882 "configure"
 #include "confdefs.h"
 #include <$ac_hdr>
 EOF
 ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
-{ (eval echo configure:5837: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
+{ (eval echo configure:5887: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
 ac_err=`grep -v '^ *+' conftest.out | grep -v "^conftest.${ac_ext}\$"`
 if test -z "$ac_err"; then
   rm -rf conftest*
@@ -5860,17 +5910,17 @@ for ac_hdr in dirent.h
 do
 ac_safe=`echo "$ac_hdr" | sed 'y%./+-%__p_%'`
 echo $ac_n "checking for $ac_hdr""... $ac_c" 1>&6
-echo "configure:5867: checking for $ac_hdr" >&5
+echo "configure:5917: checking for $ac_hdr" >&5
 if eval "test \"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 5872 "configure"
+#line 5922 "configure"
 #include "confdefs.h"
 #include <$ac_hdr>
 EOF
 ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
-{ (eval echo configure:5877: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
+{ (eval echo configure:5927: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
 ac_err=`grep -v '^ *+' conftest.out | grep -v "^conftest.${ac_ext}\$"`
 if test -z "$ac_err"; then
   rm -rf conftest*
@@ -5900,17 +5950,17 @@ for ac_hdr in inttypes.h
 do
 ac_safe=`echo "$ac_hdr" | sed 'y%./+-%__p_%'`
 echo $ac_n "checking for $ac_hdr""... $ac_c" 1>&6
-echo "configure:5907: checking for $ac_hdr" >&5
+echo "configure:5957: checking for $ac_hdr" >&5
 if eval "test \"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 5912 "configure"
+#line 5962 "configure"
 #include "confdefs.h"
 #include <$ac_hdr>
 EOF
 ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
-{ (eval echo configure:5917: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
+{ (eval echo configure:5967: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
 ac_err=`grep -v '^ *+' conftest.out | grep -v "^conftest.${ac_ext}\$"`
 if test -z "$ac_err"; then
   rm -rf conftest*
@@ -5946,12 +5996,12 @@ fi
 done
 
 echo $ac_n "checking for sys/wait.h that is POSIX.1 compatible""... $ac_c" 1>&6
-echo "configure:5953: checking for sys/wait.h that is POSIX.1 compatible" >&5
+echo "configure:6003: checking for sys/wait.h that is POSIX.1 compatible" >&5
 if eval "test \"`echo '$''{'ac_cv_header_sys_wait_h'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 5958 "configure"
+#line 6008 "configure"
 #include "confdefs.h"
 #include <sys/types.h>
 #include <sys/wait.h>
@@ -5967,7 +6017,7 @@ wait (&s);
 s = WIFEXITED (s) ? WEXITSTATUS (s) : 1;
 ; return 0; }
 EOF
-if { (eval echo configure:5974: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
+if { (eval echo configure:6024: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
   rm -rf conftest*
   ac_cv_header_sys_wait_h=yes
 else
@@ -5989,12 +6039,12 @@ fi
 
 
 echo $ac_n "checking for ANSI C header files""... $ac_c" 1>&6
-echo "configure:5996: checking for ANSI C header files" >&5
+echo "configure:6046: checking for ANSI C header files" >&5
 if eval "test \"`echo '$''{'ac_cv_header_stdc'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 6001 "configure"
+#line 6051 "configure"
 #include "confdefs.h"
 #include <stdlib.h>
 #include <stdarg.h>
@@ -6002,7 +6052,7 @@ else
 #include <float.h>
 EOF
 ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
-{ (eval echo configure:6009: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
+{ (eval echo configure:6059: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
 ac_err=`grep -v '^ *+' conftest.out | grep -v "^conftest.${ac_ext}\$"`
 if test -z "$ac_err"; then
   rm -rf conftest*
@@ -6019,7 +6069,7 @@ rm -f conftest*
 if test $ac_cv_header_stdc = yes; then
   # SunOS 4.x string.h does not declare mem*, contrary to ANSI.
 cat > conftest.$ac_ext <<EOF
-#line 6026 "configure"
+#line 6076 "configure"
 #include "confdefs.h"
 #include <string.h>
 EOF
@@ -6037,7 +6087,7 @@ fi
 if test $ac_cv_header_stdc = yes; then
   # ISC 2.0.2 stdlib.h does not declare free, contrary to ANSI.
 cat > conftest.$ac_ext <<EOF
-#line 6044 "configure"
+#line 6094 "configure"
 #include "confdefs.h"
 #include <stdlib.h>
 EOF
@@ -6058,7 +6108,7 @@ if test "$cross_compiling" = yes; then
   :
 else
   cat > conftest.$ac_ext <<EOF
-#line 6065 "configure"
+#line 6115 "configure"
 #include "confdefs.h"
 #include <ctype.h>
 #define ISLOWER(c) ('a' <= (c) && (c) <= 'z')
@@ -6069,7 +6119,7 @@ if (XOR (islower (i), ISLOWER (i)) || toupper (i) != TOUPPER (i)) exit(2);
 exit (0); }
 
 EOF
-if { (eval echo configure:6076: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null
+if { (eval echo configure:6126: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null
 then
   :
 else
@@ -6093,12 +6143,12 @@ EOF
 fi
 
 echo $ac_n "checking for ssize_t""... $ac_c" 1>&6
-echo "configure:6100: checking for ssize_t" >&5
+echo "configure:6150: checking for ssize_t" >&5
 if eval "test \"`echo '$''{'ac_cv_type_ssize_t'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 6105 "configure"
+#line 6155 "configure"
 #include "confdefs.h"
 #include <sys/types.h>
 #if STDC_HEADERS
@@ -6127,9 +6177,9 @@ fi
 
 
 echo $ac_n "checking for in_addr_t""... $ac_c" 1>&6
-echo "configure:6134: checking for in_addr_t" >&5
+echo "configure:6184: checking for in_addr_t" >&5
 cat > conftest.$ac_ext <<EOF
-#line 6136 "configure"
+#line 6186 "configure"
 #include "confdefs.h"
 #include <sys/types.h>
 #if STDC_HEADERS
@@ -6143,7 +6193,7 @@ int main() {
 in_addr_t foo;
 ; return 0; }
 EOF
-if { (eval echo configure:6150: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
+if { (eval echo configure:6200: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
   rm -rf conftest*
   cat >> confdefs.h <<\EOF
 #define HAVE_IN_ADDR_T 1
@@ -6159,16 +6209,16 @@ fi
 rm -f conftest*
 
 echo $ac_n "checking whether struct ip_mreq is in netinet/in.h""... $ac_c" 1>&6
-echo "configure:6166: checking whether struct ip_mreq is in netinet/in.h" >&5
+echo "configure:6216: checking whether struct ip_mreq is in netinet/in.h" >&5
 cat > conftest.$ac_ext <<EOF
-#line 6168 "configure"
+#line 6218 "configure"
 #include "confdefs.h"
 #include <netinet/in.h>
 int main() {
 struct ip_mreq mreq;
 ; return 0; }
 EOF
-if { (eval echo configure:6175: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
+if { (eval echo configure:6225: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
   rm -rf conftest*
   cat >> confdefs.h <<\EOF
 #define HAVE_STRUCT_IP_MREQ 1
@@ -6184,16 +6234,16 @@ fi
 rm -f conftest*
 
 echo $ac_n "checking whether struct ipv6_mreq is in netinet/in.h""... $ac_c" 1>&6
-echo "configure:6191: checking whether struct ipv6_mreq is in netinet/in.h" >&5
+echo "configure:6241: checking whether struct ipv6_mreq is in netinet/in.h" >&5
 cat > conftest.$ac_ext <<EOF
-#line 6193 "configure"
+#line 6243 "configure"
 #include "confdefs.h"
 #include <netinet/in.h>
 int main() {
 struct ipv6_mreq mreq6;
 ; return 0; }
 EOF
-if { (eval echo configure:6200: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
+if { (eval echo configure:6250: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
   rm -rf conftest*
   cat >> confdefs.h <<\EOF
 #define HAVE_STRUCT_IPV6_MREQ 1
@@ -6209,16 +6259,16 @@ fi
 rm -f conftest*
 
 echo $ac_n "checking whether struct sockaddr_in6 is in netinet/in.h""... $ac_c" 1>&6
-echo "configure:6216: checking whether struct sockaddr_in6 is in netinet/in.h" >&5
+echo "configure:6266: checking whether struct sockaddr_in6 is in netinet/in.h" >&5
 cat > conftest.$ac_ext <<EOF
-#line 6218 "configure"
+#line 6268 "configure"
 #include "confdefs.h"
 #include <netinet/in.h>
 int main() {
 struct sockaddr_in6 addr6;
 ; return 0; }
 EOF
-if { (eval echo configure:6225: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
+if { (eval echo configure:6275: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
   rm -rf conftest*
   cat >> confdefs.h <<\EOF
 #define HAVE_INET6 1
@@ -6234,9 +6284,9 @@ fi
 rm -f conftest*
 
 echo $ac_n "checking for socklen_t in sys/socket.h""... $ac_c" 1>&6
-echo "configure:6241: checking for socklen_t in sys/socket.h" >&5
+echo "configure:6291: checking for socklen_t in sys/socket.h" >&5
 cat > conftest.$ac_ext <<EOF
-#line 6243 "configure"
+#line 6293 "configure"
 #include "confdefs.h"
 #define _POSIX_PII_SOCKET
 #include <sys/types.h>
@@ -6245,7 +6295,7 @@ int main() {
 socklen_t x = 5;
 ; return 0; }
 EOF
-if { (eval echo configure:6252: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
+if { (eval echo configure:6302: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
   rm -rf conftest*
   cat >> confdefs.h <<\EOF
 #define HAVE_SOCKLEN_T 1
@@ -6261,16 +6311,16 @@ fi
 rm -f conftest*
 
 echo $ac_n "checking for tm_gmtoff in struct tm""... $ac_c" 1>&6
-echo "configure:6268: checking for tm_gmtoff in struct tm" >&5
+echo "configure:6318: checking for tm_gmtoff in struct tm" >&5
 cat > conftest.$ac_ext <<EOF
-#line 6270 "configure"
+#line 6320 "configure"
 #include "confdefs.h"
 #include <time.h>
 int main() {
 struct tm tim; tim.tm_gmtoff = 0;
 ; return 0; }
 EOF
-if { (eval echo configure:6277: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
+if { (eval echo configure:6327: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
   rm -rf conftest*
   cat >> confdefs.h <<\EOF
 #define STRUCT_TM_HAS_GMTOFF 1
@@ -6283,16 +6333,16 @@ else
   rm -rf conftest*
   echo "$ac_t""no" 1>&6
    echo $ac_n "checking for global timezone variable""... $ac_c" 1>&6
-echo "configure:6290: checking for global timezone variable" >&5
+echo "configure:6340: checking for global timezone variable" >&5
                cat > conftest.$ac_ext <<EOF
-#line 6292 "configure"
+#line 6342 "configure"
 #include "confdefs.h"
 #include <time.h>
 int main() {
 void i(){long z2 = 2*timezone;}
 ; return 0; }
 EOF
-if { (eval echo configure:6299: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
+if { (eval echo configure:6349: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
   rm -rf conftest*
   cat >> confdefs.h <<\EOF
 #define HAVE_TIMEZONE 1
@@ -6305,16 +6355,16 @@ else
   rm -rf conftest*
   echo "$ac_t""no" 1>&6
        echo $ac_n "checking for global _timezone variable""... $ac_c" 1>&6
-echo "configure:6312: checking for global _timezone variable" >&5
+echo "configure:6362: checking for global _timezone variable" >&5
               cat > conftest.$ac_ext <<EOF
-#line 6314 "configure"
+#line 6364 "configure"
 #include "confdefs.h"
 #include <time.h>
 int main() {
 long z2 = _timezone;
 ; return 0; }
 EOF
-if { (eval echo configure:6321: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
+if { (eval echo configure:6371: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
   rm -rf conftest*
   cat >> confdefs.h <<\EOF
 #define HAVE_UNDERSCORE_TIMEZONE 1
@@ -6336,19 +6386,19 @@ rm -f conftest*
 # The Ultrix 4.2 mips builtin alloca declared by alloca.h only works
 # for constant arguments.  Useless!
 echo $ac_n "checking for working alloca.h""... $ac_c" 1>&6
-echo "configure:6343: checking for working alloca.h" >&5
+echo "configure:6393: checking for working alloca.h" >&5
 if eval "test \"`echo '$''{'ac_cv_header_alloca_h'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 6348 "configure"
+#line 6398 "configure"
 #include "confdefs.h"
 #include <alloca.h>
 int main() {
 char *p = alloca(2 * sizeof(int));
 ; return 0; }
 EOF
-if { (eval echo configure:6355: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:6405: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   ac_cv_header_alloca_h=yes
 else
@@ -6369,12 +6419,12 @@ EOF
 fi
 
 echo $ac_n "checking for alloca""... $ac_c" 1>&6
-echo "configure:6376: checking for alloca" >&5
+echo "configure:6426: checking for alloca" >&5
 if eval "test \"`echo '$''{'ac_cv_func_alloca_works'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 6381 "configure"
+#line 6431 "configure"
 #include "confdefs.h"
 
 #ifdef __GNUC__
@@ -6402,7 +6452,7 @@ int main() {
 char *p = (char *) alloca(1);
 ; return 0; }
 EOF
-if { (eval echo configure:6409: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:6459: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   ac_cv_func_alloca_works=yes
 else
@@ -6434,12 +6484,12 @@ EOF
 
 
 echo $ac_n "checking whether alloca needs Cray hooks""... $ac_c" 1>&6
-echo "configure:6441: checking whether alloca needs Cray hooks" >&5
+echo "configure:6491: checking whether alloca needs Cray hooks" >&5
 if eval "test \"`echo '$''{'ac_cv_os_cray'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 6446 "configure"
+#line 6496 "configure"
 #include "confdefs.h"
 #if defined(CRAY) && ! defined(CRAY2)
 webecray
@@ -6464,12 +6514,12 @@ echo "$ac_t""$ac_cv_os_cray" 1>&6
 if test $ac_cv_os_cray = yes; then
 for ac_func in _getb67 GETB67 getb67; do
   echo $ac_n "checking for $ac_func""... $ac_c" 1>&6
-echo "configure:6471: checking for $ac_func" >&5
+echo "configure:6521: checking for $ac_func" >&5
 if eval "test \"`echo '$''{'ac_cv_func_$ac_func'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 6476 "configure"
+#line 6526 "configure"
 #include "confdefs.h"
 /* System header to define __stub macros and hopefully few prototypes,
     which can conflict with char $ac_func(); below.  */
@@ -6492,7 +6542,7 @@ $ac_func();
 
 ; return 0; }
 EOF
-if { (eval echo configure:6499: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:6549: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_func_$ac_func=yes"
 else
@@ -6519,7 +6569,7 @@ done
 fi
 
 echo $ac_n "checking stack direction for C alloca""... $ac_c" 1>&6
-echo "configure:6526: checking stack direction for C alloca" >&5
+echo "configure:6576: checking stack direction for C alloca" >&5
 if eval "test \"`echo '$''{'ac_cv_c_stack_direction'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -6527,7 +6577,7 @@ else
   ac_cv_c_stack_direction=0
 else
   cat > conftest.$ac_ext <<EOF
-#line 6534 "configure"
+#line 6584 "configure"
 #include "confdefs.h"
 find_stack_direction ()
 {
@@ -6546,7 +6596,7 @@ main ()
   exit (find_stack_direction() < 0);
 }
 EOF
-if { (eval echo configure:6553: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null
+if { (eval echo configure:6603: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null
 then
   ac_cv_c_stack_direction=1
 else
@@ -6573,7 +6623,7 @@ do
 # Extract the first word of "$ac_prog", so it can be a program name with args.
 set dummy $ac_prog; ac_word=$2
 echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
-echo "configure:6580: checking for $ac_word" >&5
+echo "configure:6630: checking for $ac_word" >&5
 if eval "test \"`echo '$''{'ac_cv_prog_PERL'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
@@ -6672,7 +6722,7 @@ fi
 # Uses ac_ vars as temps to allow command line to override cache and checks.
 # --without-x overrides everything else, but does not touch the cache.
 echo $ac_n "checking for X""... $ac_c" 1>&6
-echo "configure:6679: checking for X" >&5
+echo "configure:6729: checking for X" >&5
 
 # Check whether --with-x or --without-x was given.
 if test "${with_x+set}" = set; then
@@ -6734,12 +6784,12 @@ if test "$ac_x_includes" = NO; then
 
   # First, try using that file with no special directory specified.
 cat > conftest.$ac_ext <<EOF
-#line 6741 "configure"
+#line 6791 "configure"
 #include "confdefs.h"
 #include <$x_direct_test_include>
 EOF
 ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
-{ (eval echo configure:6746: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
+{ (eval echo configure:6796: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
 ac_err=`grep -v '^ *+' conftest.out | grep -v "^conftest.${ac_ext}\$"`
 if test -z "$ac_err"; then
   rm -rf conftest*
@@ -6808,14 +6858,14 @@ if test "$ac_x_libraries" = NO; then
   ac_save_LIBS="$LIBS"
   LIBS="-l$x_direct_test_library $LIBS"
 cat > conftest.$ac_ext <<EOF
-#line 6815 "configure"
+#line 6865 "configure"
 #include "confdefs.h"
 
 int main() {
 ${x_direct_test_function}()
 ; return 0; }
 EOF
-if { (eval echo configure:6822: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:6872: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   LIBS="$ac_save_LIBS"
 # We can link X programs with no special library path.
@@ -6921,17 +6971,17 @@ else
     case "`(uname -sr) 2>/dev/null`" in
     "SunOS 5"*)
       echo $ac_n "checking whether -R must be followed by a space""... $ac_c" 1>&6
-echo "configure:6928: checking whether -R must be followed by a space" >&5
+echo "configure:6978: checking whether -R must be followed by a space" >&5
       ac_xsave_LIBS="$LIBS"; LIBS="$LIBS -R$x_libraries"
       cat > conftest.$ac_ext <<EOF
-#line 6931 "configure"
+#line 6981 "configure"
 #include "confdefs.h"
 
 int main() {
 
 ; return 0; }
 EOF
-if { (eval echo configure:6938: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:6988: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   ac_R_nospace=yes
 else
@@ -6947,14 +6997,14 @@ rm -f conftest*
       else
 	LIBS="$ac_xsave_LIBS -R $x_libraries"
 	cat > conftest.$ac_ext <<EOF
-#line 6954 "configure"
+#line 7004 "configure"
 #include "confdefs.h"
 
 int main() {
 
 ; return 0; }
 EOF
-if { (eval echo configure:6961: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:7011: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   ac_R_space=yes
 else
@@ -6986,7 +7036,7 @@ rm -f conftest*
     # libraries were built with DECnet support.  And karl@cs.umb.edu says
     # the Alpha needs dnet_stub (dnet does not exist).
     echo $ac_n "checking for dnet_ntoa in -ldnet""... $ac_c" 1>&6
-echo "configure:6993: checking for dnet_ntoa in -ldnet" >&5
+echo "configure:7043: checking for dnet_ntoa in -ldnet" >&5
 ac_lib_var=`echo dnet'_'dnet_ntoa | sed 'y%./+-%__p_%'`
 if eval "test \"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
@@ -6994,7 +7044,7 @@ else
   ac_save_LIBS="$LIBS"
 LIBS="-ldnet  $LIBS"
 cat > conftest.$ac_ext <<EOF
-#line 7001 "configure"
+#line 7051 "configure"
 #include "confdefs.h"
 /* Override any gcc2 internal prototype to avoid an error.  */
 /* We use char because int might match the return type of a gcc2
@@ -7005,7 +7055,7 @@ int main() {
 dnet_ntoa()
 ; return 0; }
 EOF
-if { (eval echo configure:7012: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:7062: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_lib_$ac_lib_var=yes"
 else
@@ -7027,7 +7077,7 @@ fi
 
     if test $ac_cv_lib_dnet_dnet_ntoa = no; then
       echo $ac_n "checking for dnet_ntoa in -ldnet_stub""... $ac_c" 1>&6
-echo "configure:7034: checking for dnet_ntoa in -ldnet_stub" >&5
+echo "configure:7084: checking for dnet_ntoa in -ldnet_stub" >&5
 ac_lib_var=`echo dnet_stub'_'dnet_ntoa | sed 'y%./+-%__p_%'`
 if eval "test \"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
@@ -7035,7 +7085,7 @@ else
   ac_save_LIBS="$LIBS"
 LIBS="-ldnet_stub  $LIBS"
 cat > conftest.$ac_ext <<EOF
-#line 7042 "configure"
+#line 7092 "configure"
 #include "confdefs.h"
 /* Override any gcc2 internal prototype to avoid an error.  */
 /* We use char because int might match the return type of a gcc2
@@ -7046,7 +7096,7 @@ int main() {
 dnet_ntoa()
 ; return 0; }
 EOF
-if { (eval echo configure:7053: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:7103: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_lib_$ac_lib_var=yes"
 else
@@ -7075,12 +7125,12 @@ fi
     # The nsl library prevents programs from opening the X display
     # on Irix 5.2, according to dickey@clark.net.
     echo $ac_n "checking for gethostbyname""... $ac_c" 1>&6
-echo "configure:7082: checking for gethostbyname" >&5
+echo "configure:7132: checking for gethostbyname" >&5
 if eval "test \"`echo '$''{'ac_cv_func_gethostbyname'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 7087 "configure"
+#line 7137 "configure"
 #include "confdefs.h"
 /* System header to define __stub macros and hopefully few prototypes,
     which can conflict with char gethostbyname(); below.  */
@@ -7103,7 +7153,7 @@ gethostbyname();
 
 ; return 0; }
 EOF
-if { (eval echo configure:7110: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:7160: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_func_gethostbyname=yes"
 else
@@ -7124,7 +7174,7 @@ fi
 
     if test $ac_cv_func_gethostbyname = no; then
       echo $ac_n "checking for gethostbyname in -lnsl""... $ac_c" 1>&6
-echo "configure:7131: checking for gethostbyname in -lnsl" >&5
+echo "configure:7181: checking for gethostbyname in -lnsl" >&5
 ac_lib_var=`echo nsl'_'gethostbyname | sed 'y%./+-%__p_%'`
 if eval "test \"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
@@ -7132,7 +7182,7 @@ else
   ac_save_LIBS="$LIBS"
 LIBS="-lnsl  $LIBS"
 cat > conftest.$ac_ext <<EOF
-#line 7139 "configure"
+#line 7189 "configure"
 #include "confdefs.h"
 /* Override any gcc2 internal prototype to avoid an error.  */
 /* We use char because int might match the return type of a gcc2
@@ -7143,7 +7193,7 @@ int main() {
 gethostbyname()
 ; return 0; }
 EOF
-if { (eval echo configure:7150: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:7200: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_lib_$ac_lib_var=yes"
 else
@@ -7173,12 +7223,12 @@ fi
     # -lsocket must be given before -lnsl if both are needed.
     # We assume that if connect needs -lnsl, so does gethostbyname.
     echo $ac_n "checking for connect""... $ac_c" 1>&6
-echo "configure:7180: checking for connect" >&5
+echo "configure:7230: checking for connect" >&5
 if eval "test \"`echo '$''{'ac_cv_func_connect'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 7185 "configure"
+#line 7235 "configure"
 #include "confdefs.h"
 /* System header to define __stub macros and hopefully few prototypes,
     which can conflict with char connect(); below.  */
@@ -7201,7 +7251,7 @@ connect();
 
 ; return 0; }
 EOF
-if { (eval echo configure:7208: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:7258: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_func_connect=yes"
 else
@@ -7222,7 +7272,7 @@ fi
 
     if test $ac_cv_func_connect = no; then
       echo $ac_n "checking for connect in -lsocket""... $ac_c" 1>&6
-echo "configure:7229: checking for connect in -lsocket" >&5
+echo "configure:7279: checking for connect in -lsocket" >&5
 ac_lib_var=`echo socket'_'connect | sed 'y%./+-%__p_%'`
 if eval "test \"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
@@ -7230,7 +7280,7 @@ else
   ac_save_LIBS="$LIBS"
 LIBS="-lsocket $X_EXTRA_LIBS $LIBS"
 cat > conftest.$ac_ext <<EOF
-#line 7237 "configure"
+#line 7287 "configure"
 #include "confdefs.h"
 /* Override any gcc2 internal prototype to avoid an error.  */
 /* We use char because int might match the return type of a gcc2
@@ -7241,7 +7291,7 @@ int main() {
 connect()
 ; return 0; }
 EOF
-if { (eval echo configure:7248: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:7298: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_lib_$ac_lib_var=yes"
 else
@@ -7265,12 +7315,12 @@ fi
 
     # gomez@mi.uni-erlangen.de says -lposix is necessary on A/UX.
     echo $ac_n "checking for remove""... $ac_c" 1>&6
-echo "configure:7272: checking for remove" >&5
+echo "configure:7322: checking for remove" >&5
 if eval "test \"`echo '$''{'ac_cv_func_remove'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 7277 "configure"
+#line 7327 "configure"
 #include "confdefs.h"
 /* System header to define __stub macros and hopefully few prototypes,
     which can conflict with char remove(); below.  */
@@ -7293,7 +7343,7 @@ remove();
 
 ; return 0; }
 EOF
-if { (eval echo configure:7300: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:7350: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_func_remove=yes"
 else
@@ -7314,7 +7364,7 @@ fi
 
     if test $ac_cv_func_remove = no; then
       echo $ac_n "checking for remove in -lposix""... $ac_c" 1>&6
-echo "configure:7321: checking for remove in -lposix" >&5
+echo "configure:7371: checking for remove in -lposix" >&5
 ac_lib_var=`echo posix'_'remove | sed 'y%./+-%__p_%'`
 if eval "test \"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
@@ -7322,7 +7372,7 @@ else
   ac_save_LIBS="$LIBS"
 LIBS="-lposix  $LIBS"
 cat > conftest.$ac_ext <<EOF
-#line 7329 "configure"
+#line 7379 "configure"
 #include "confdefs.h"
 /* Override any gcc2 internal prototype to avoid an error.  */
 /* We use char because int might match the return type of a gcc2
@@ -7333,7 +7383,7 @@ int main() {
 remove()
 ; return 0; }
 EOF
-if { (eval echo configure:7340: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:7390: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_lib_$ac_lib_var=yes"
 else
@@ -7357,12 +7407,12 @@ fi
 
     # BSDI BSD/OS 2.1 needs -lipc for XOpenDisplay.
     echo $ac_n "checking for shmat""... $ac_c" 1>&6
-echo "configure:7364: checking for shmat" >&5
+echo "configure:7414: checking for shmat" >&5
 if eval "test \"`echo '$''{'ac_cv_func_shmat'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 7369 "configure"
+#line 7419 "configure"
 #include "confdefs.h"
 /* System header to define __stub macros and hopefully few prototypes,
     which can conflict with char shmat(); below.  */
@@ -7385,7 +7435,7 @@ shmat();
 
 ; return 0; }
 EOF
-if { (eval echo configure:7392: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:7442: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_func_shmat=yes"
 else
@@ -7406,7 +7456,7 @@ fi
 
     if test $ac_cv_func_shmat = no; then
       echo $ac_n "checking for shmat in -lipc""... $ac_c" 1>&6
-echo "configure:7413: checking for shmat in -lipc" >&5
+echo "configure:7463: checking for shmat in -lipc" >&5
 ac_lib_var=`echo ipc'_'shmat | sed 'y%./+-%__p_%'`
 if eval "test \"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
@@ -7414,7 +7464,7 @@ else
   ac_save_LIBS="$LIBS"
 LIBS="-lipc  $LIBS"
 cat > conftest.$ac_ext <<EOF
-#line 7421 "configure"
+#line 7471 "configure"
 #include "confdefs.h"
 /* Override any gcc2 internal prototype to avoid an error.  */
 /* We use char because int might match the return type of a gcc2
@@ -7425,7 +7475,7 @@ int main() {
 shmat()
 ; return 0; }
 EOF
-if { (eval echo configure:7432: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:7482: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_lib_$ac_lib_var=yes"
 else
@@ -7458,7 +7508,7 @@ fi
   # libraries we check for below, so use a different variable.
   #  --interran@uluru.Stanford.EDU, kb@cs.umb.edu.
   echo $ac_n "checking for IceConnectionNumber in -lICE""... $ac_c" 1>&6
-echo "configure:7465: checking for IceConnectionNumber in -lICE" >&5
+echo "configure:7515: checking for IceConnectionNumber in -lICE" >&5
 ac_lib_var=`echo ICE'_'IceConnectionNumber | sed 'y%./+-%__p_%'`
 if eval "test \"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
@@ -7466,7 +7516,7 @@ else
   ac_save_LIBS="$LIBS"
 LIBS="-lICE $X_EXTRA_LIBS $LIBS"
 cat > conftest.$ac_ext <<EOF
-#line 7473 "configure"
+#line 7523 "configure"
 #include "confdefs.h"
 /* Override any gcc2 internal prototype to avoid an error.  */
 /* We use char because int might match the return type of a gcc2
@@ -7477,7 +7527,7 @@ int main() {
 IceConnectionNumber()
 ; return 0; }
 EOF
-if { (eval echo configure:7484: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+if { (eval echo configure:7534: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   rm -rf conftest*
   eval "ac_cv_lib_$ac_lib_var=yes"
 else
@@ -7787,6 +7837,7 @@ s%@DIVIDESPEC@%$DIVIDESPEC%g
 s%@CHECKREFSPEC@%$CHECKREFSPEC%g
 s%@EXCEPTIONSPEC@%$EXCEPTIONSPEC%g
 s%@IEEESPEC@%$IEEESPEC%g
+s%@CLASSPATH_SEP@%$CLASSPATH_SEP%g
 s%@CANADIAN_TRUE@%$CANADIAN_TRUE%g
 s%@CANADIAN_FALSE@%$CANADIAN_FALSE%g
 s%@NULL_TARGET_TRUE@%$NULL_TARGET_TRUE%g
diff --git a/libjava/configure.host b/libjava/configure.host
index 7f3b69f..bb7f178 100644
--- a/libjava/configure.host
+++ b/libjava/configure.host
@@ -174,6 +174,13 @@ case "${host}" in
   *-*-freebsd*)
 	slow_pthread_self=
 	;;
+  *-mingw*)
+  	# FIXME: win32_exception_handler( ) in win32.cc does not do the
+	# right stuff yet w.r.t. SEH. Live with the following for now.
+        can_unwind_signal=no
+	CHECKREFSPEC=-fcheck-references
+	DIVIDESPEC=-fuse-divide-subroutine
+	;;
   *-cygwin*)
   	# The cygwin linker doesn't do 8-byte alignment by default, so
 	# disable hash synchronization for now.
diff --git a/libjava/configure.in b/libjava/configure.in
index 502aeab..5c32796 100644
--- a/libjava/configure.in
+++ b/libjava/configure.in
@@ -1,4 +1,5 @@
 dnl Process this with autoconf to create configure
+AC_PREREQ(2.13)
 AC_INIT(java/lang/System.java)
 
 # This works around the fact that libtool configuration may change LD
@@ -23,8 +24,8 @@ LIBGCJ_CONFIGURE(.)
 
 AM_CONFIG_HEADER(include/config.h gcj/libgcj-config.h)
 
-# Only use libltdl for native builds.
-if test -z "${with_cross_host}"; then
+# Only use libltdl for non-newlib builds.
+if test "x${with_newlib}" = "x" || test "x${with_newlib}" = "xno"; then
    AC_LIBLTDL_CONVENIENCE
    AC_LIBTOOL_DLOPEN
    DIRLTDL=libltdl
@@ -491,16 +492,6 @@ if test "x${with_newlib}" = "xyes"; then
 
    dnl Assume we do not have getuid and friends.
    AC_DEFINE(NO_GETUID)
-
-   # If Canadian cross, then don't pick up tools from the build
-   # directory.
-   if test x"$build" != x"$with_cross_host" \
-        && test x"$build" != x"$target"; then
-      CANADIAN=yes
-      GCC_UNWIND_INCLUDE=
-      GCJ="${target_alias}-gcj"
-   fi
-   NATIVE=no
 else
    AC_CHECK_FUNCS(strerror ioctl select fstat open fsync sleep opendir)
    AC_CHECK_FUNCS(gmtime_r localtime_r readdir_r getpwuid_r getcwd)
@@ -731,15 +722,74 @@ changequote(<<,>>)
       builddotdot=`echo ${with_multisubdir} | sed -e 's:[^/][^/]*:..:g'`
 changequote([,])
    fi
-   if test -x "${builddotdot}/../../gcc/gcj"; then
-      dir="`cd ${builddotdot}/../../gcc && ${PWDCMD-pwd}`"
-      GCJ="$dir/gcj -B`${PWDCMD-pwd}`/ -B$dir/"
-   else
+fi
+
+case "${build}" in
+    *mingw*) CLASSPATH_SEP=';' ;;
+    *) CLASSPATH_SEP=':' ;;
+esac
+
+# Which gcj do we use?
+which_gcj=default
+built_gcc_dir="`cd ${builddotdot}/../../gcc && ${PWDCMD-pwd}`"
+if test -n "${with_cross_host}"; then
+  # We are being configured with a cross compiler. We can't
+  # use ac_exeext, because that is for the target platform.
+  NATIVE=no
+  cross_host_exeext=
+  case "${with_cross_host}" in
+     *mingw* | *cygwin*)
+         cross_host_exeext=.exe
+     ;;
+  esac
+  if test -x "${built_gcc_dir}/gcj${cross_host_exeext}"; then
+     if test x"$build" = x"$with_cross_host"; then
+        # Ordinary cross (host!=target and host=build)
+        which_gcj=built
+     else
+        # Canadian cross (host!=target and host!=build)
+        which_gcj=cross
+     fi
+  else
+     which_gcj=cross
+  fi
+else
+  # We are being configured with a native or crossed-native compiler
+  if test -x "${built_gcc_dir}/gcj${ac_exeext}"; then
+     if test x"$build" = x"$host"; then
+        # True native build (host=target and host=build)
+        which_gcj=built
+     else
+        # Crossed-native build (host=target and host!=build)
+        which_gcj=cross
+     fi
+  else
+     which_gcj=path
+  fi
+fi
+case "${which_gcj}" in
+   built)
+      GCJ="$built_gcc_dir/gcj -B`${PWDCMD-pwd}`/ -B$built_gcc_dir/"
+   ;;
+   cross)
+      # See the comment in Makefile.am about CANADIAN being a misnomer
+      CANADIAN=yes
+      NULL_TARGET=no
+      if test "x${with_newlib}" = "xyes"; then
+         # FIXME (comment): Why is this needed?
+         GCC_UNWIND_INCLUDE=
+         GCJ="${target_alias}-gcj"
+      else
+         GCJ="${target_alias}-gcj -B`${PWDCMD-pwd}`/"
+      fi
+   ;;
+   path)
+      # See the comment in Makefile.am about CANADIAN being a misnomer
       CANADIAN=yes
       NULL_TARGET=yes
       GCJ="gcj -B`${PWDCMD-pwd}`/"
-   fi
-fi
+   ;;
+esac
 
 # Create it, so that compile/link tests don't fail
 test -f libgcj.spec || touch libgcj.spec
@@ -790,6 +840,7 @@ AC_SUBST(DIVIDESPEC)
 AC_SUBST(CHECKREFSPEC)
 AC_SUBST(EXCEPTIONSPEC)
 AC_SUBST(IEEESPEC)
+AC_SUBST(CLASSPATH_SEP)
 
 AM_CONDITIONAL(CANADIAN, test "$CANADIAN" = yes)
 AM_CONDITIONAL(NULL_TARGET, test "$NULL_TARGET" = yes)
diff --git a/libjava/gcj/Makefile.in b/libjava/gcj/Makefile.in
index f74286d..5d8898f 100644
--- a/libjava/gcj/Makefile.in
+++ b/libjava/gcj/Makefile.in
@@ -68,6 +68,7 @@ AS = @AS@
 BACKTRACESPEC = @BACKTRACESPEC@
 CC = @CC@
 CHECKREFSPEC = @CHECKREFSPEC@
+CLASSPATH_SEP = @CLASSPATH_SEP@
 COMPPATH = @COMPPATH@
 CXX = @CXX@
 CXXCPP = @CXXCPP@
@@ -151,7 +152,7 @@ DIST_COMMON =  ./stamp-h2.in Makefile.am Makefile.in libgcj-config.h.in
 
 DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)
 
-TAR = gtar
+TAR = tar
 GZIP_ENV = --best
 all: all-redirect
 .SUFFIXES:
@@ -178,7 +179,7 @@ $(srcdir)/libgcj-config.h.in: @MAINTAINER_MODE_TRUE@$(srcdir)/stamp-h2.in
 		rm -f $(srcdir)/stamp-h2.in; \
 		$(MAKE) $(srcdir)/stamp-h2.in; \
 	else :; fi
-$(srcdir)/stamp-h2.in: $(top_srcdir)/configure.in $(ACLOCAL_M4) 
+$(srcdir)/stamp-h2.in: $(top_srcdir)/@CONFIGURE_AC@ $(ACLOCAL_M4) 
 	cd $(top_srcdir) && $(AUTOHEADER)
 	@echo timestamp > $(srcdir)/stamp-h2.in 2> /dev/null
 
diff --git a/libjava/include/Makefile.in b/libjava/include/Makefile.in
index f428794..2719cb1 100644
--- a/libjava/include/Makefile.in
+++ b/libjava/include/Makefile.in
@@ -68,6 +68,7 @@ AS = @AS@
 BACKTRACESPEC = @BACKTRACESPEC@
 CC = @CC@
 CHECKREFSPEC = @CHECKREFSPEC@
+CLASSPATH_SEP = @CLASSPATH_SEP@
 COMPPATH = @COMPPATH@
 CXX = @CXX@
 CXXCPP = @CXXCPP@
@@ -147,7 +148,7 @@ DIST_COMMON =  ./stamp-h1.in Makefile.am Makefile.in config.h.in
 
 DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)
 
-TAR = gtar
+TAR = tar
 GZIP_ENV = --best
 all: all-redirect
 .SUFFIXES:
@@ -174,7 +175,7 @@ $(srcdir)/config.h.in: @MAINTAINER_MODE_TRUE@$(srcdir)/stamp-h1.in
 		rm -f $(srcdir)/stamp-h1.in; \
 		$(MAKE) $(srcdir)/stamp-h1.in; \
 	else :; fi
-$(srcdir)/stamp-h1.in: $(top_srcdir)/configure.in $(ACLOCAL_M4) 
+$(srcdir)/stamp-h1.in: $(top_srcdir)/@CONFIGURE_AC@ $(ACLOCAL_M4) 
 	cd $(top_srcdir) && $(AUTOHEADER)
 	@echo timestamp > $(srcdir)/stamp-h1.in 2> /dev/null
 
diff --git a/libjava/include/jni.h b/libjava/include/jni.h
index 31f5798..1438340 100644
--- a/libjava/include/jni.h
+++ b/libjava/include/jni.h
@@ -178,22 +178,30 @@ typedef void *jmethodID;
 
 #define JNIIMPORT        __declspec(dllimport)
 #define JNIEXPORT        __declspec(dllexport)
+
 #define JNICALL          __stdcall
 
-#else
+/* These defines apply to symbols in libgcj */
+#ifdef __GCJ_DLL__
+# ifdef __GCJ_JNI_IMPL__
+#  define __GCJ_JNIIMPEXP__ JNIEXPORT
+# else
+#  define __GCJ_JNIIMPEXP__ JNIIMPORT
+# endif /* ! __GCJ_JNI_IMPL__ */
+#else /* ! __GCJ_DLL__ */
+# define __GCJ_JNIIMPEXP__
+#endif /*  __GCJ_DLL__ */
+
+#else /* !( _WIN32 || __WIN32__ || WIN32) */
 
 #define JNIIMPORT
 #define JNIEXPORT
 #define JNICALL
+#define __GCJ_JNIIMPEXP__
 
 #endif /* !( _WIN32 || __WIN32__ || WIN32) */
 
-#ifdef __GCJ_JNI_IMPL__
-#define JNIIMPEXP JNIEXPORT
-#else
-#define JNIIMPEXP JNIIMPORT
-#endif /* ! __GCJ_JNI_IMPL__ */
-
+ 
 #ifdef __cplusplus
 extern "C"
 {
@@ -206,9 +214,9 @@ extern JNIEXPORT void JNICALL JNI_OnUnload (JavaVM *, void *);
 
 /* These functions are called by user code to start using the
    invocation API.  */
-extern JNIIMPEXP jint JNICALL JNI_GetDefaultJavaVMInitArgs (void *);
-extern JNIIMPEXP jint JNICALL JNI_CreateJavaVM (JavaVM **, void **, void *);
-extern JNIIMPEXP jint JNICALL JNI_GetCreatedJavaVMs(JavaVM **, jsize, jsize *);
+extern __GCJ_JNIIMPEXP__ jint JNICALL JNI_GetDefaultJavaVMInitArgs (void *);
+extern __GCJ_JNIIMPEXP__ jint JNICALL JNI_CreateJavaVM (JavaVM **, void **, void *);
+extern __GCJ_JNIIMPEXP__ jint JNICALL JNI_GetCreatedJavaVMs(JavaVM **, jsize, jsize *);
 
 #ifdef __cplusplus
 };
diff --git a/libjava/include/win32.h b/libjava/include/win32.h
index 969af08..4e28cf4 100644
--- a/libjava/include/win32.h
+++ b/libjava/include/win32.h
@@ -27,16 +27,16 @@ details.  */
 #ifndef DISABLE_JAVA_NET
 
 // these errors cannot occur on Win32
-#define ENOTCONN 0
-#define ECONNRESET 0
+#define ENOTCONN WSAENOTCONN
+#define ECONNRESET WSAECONNRESET
 
 /* This is incorrect, but allows java/net/natPlainDatagramSocketImpl.cc
    to compile under MingW. This will be remedied in a subsequent gcj
    release where the Win32 and Posix networking code have been forked.  */
-#define ECONNREFUSED 0
+#define ECONNREFUSED WSAECONNREFUSED
 
 #ifndef ENOPROTOOPT
-#define ENOPROTOOPT 109
+#define ENOPROTOOPT WSAENOPROTOOPT
 #endif
 
 #endif // DISABLE_JAVA_NET
@@ -76,45 +76,45 @@ _Jv_socket (int domain, int type, int protocol)
 }
 
 inline int
-_Jv_connect (jint fd, sockaddr *ptr, int len)
+_Jv_connect (jint fd, struct sockaddr *ptr, int len)
 {
-  return ::connect (fd, ptr, len);
+  return ::connect ((SOCKET) fd, (const struct sockaddr*) ptr, len);
 }
 
 inline int
 _Jv_close (jint fd)
 {
-  return ::closesocket (fd);
+  return ::closesocket ((SOCKET) fd);
 }
 
 inline int
 _Jv_bind (int fd, struct sockaddr *addr, int addrlen)
 {
-  return ::bind (fd, addr, addrlen);
+  return ::bind ((SOCKET) fd, (const struct sockaddr *) addr, addrlen);
 }
 
 inline int
 _Jv_accept (int fd, struct sockaddr *addr, socklen_t *addrlen)
 {
-  return ::accept (fd, addr, addrlen);
+  return ::accept ((SOCKET) fd, addr, addrlen);
 }
 
 inline int
 _Jv_listen (int fd, int backlog)
 {
-  return ::listen (fd, backlog);
+  return ::listen ((SOCKET) fd, backlog);
 }
 
 inline int
 _Jv_write(int s, void *buf, int len)
 {
-  return ::send (s, (char*) buf, len, 0);
+  return ::send ((SOCKET) s, (char*) buf, len, 0);
 }
 
 inline int
 _Jv_read(int s, void *buf, int len)
 {
-  return ::recv (s, (char*) buf, len, 0);
+  return ::recv ((SOCKET) s, (char*) buf, len, 0);
 }
 
 #endif /* DISABLE_JAVA_NET */
diff --git a/libjava/java/io/natFileDescriptorWin32.cc b/libjava/java/io/natFileDescriptorWin32.cc
index 87f94e8..e35d0df 100644
--- a/libjava/java/io/natFileDescriptorWin32.cc
+++ b/libjava/java/io/natFileDescriptorWin32.cc
@@ -97,22 +97,27 @@ java::io::FileDescriptor::open (jstring path, jint jflags) {
   if ((jflags & READ) && (jflags & WRITE))
     {
       access = GENERIC_READ | GENERIC_WRITE;
-      if (jflags & APPEND)
-	create = OPEN_ALWAYS;
+      if (jflags & EXCL)
+ 	create = CREATE_NEW; // this will raise error if file exists.
       else
-	create = CREATE_ALWAYS;
+        create = OPEN_ALWAYS; // equivalent to O_CREAT
     }
-  else if(jflags & READ)
-    access = GENERIC_READ;
-  else
+  else if (jflags & READ)
     {
+      access = GENERIC_READ;
+      create = OPEN_EXISTING; // ignore EXCL
+    }
+  else
+    { 
       access = GENERIC_WRITE;
-      if (jflags & APPEND)
-	create = OPEN_ALWAYS;
+      if (jflags & EXCL)
+	create = CREATE_NEW;
+      else if (jflags & APPEND)
+        create = OPEN_ALWAYS;
       else
-        create = CREATE_ALWAYS;
+	create = CREATE_ALWAYS;
     }
-
+ 
   handle = CreateFile(buf, access, FILE_SHARE_READ | FILE_SHARE_WRITE, NULL, create, 0, NULL);
 
   if (handle == INVALID_HANDLE_VALUE)
diff --git a/libjava/java/io/natFileWin32.cc b/libjava/java/io/natFileWin32.cc
index 1e06832..9ac6082 100644
--- a/libjava/java/io/natFileWin32.cc
+++ b/libjava/java/io/natFileWin32.cc
@@ -125,7 +125,10 @@ java::io::File::getCanonicalPath (void)
 
   LPTSTR unused;
   char buf2[MAX_PATH];
-  if(!GetFullPathName(buf, MAX_PATH, buf2, &unused))
+
+  const char* thepath = *buf ? buf : ".";    // "" becomes "."
+
+  if(!GetFullPathName(thepath, MAX_PATH, buf2, &unused))
     throw new IOException (JvNewStringLatin1 ("GetFullPathName failed"));
 
   // FIXME: what encoding to assume for file names?  This affects many
diff --git a/libjava/java/lang/Win32Process.java b/libjava/java/lang/Win32Process.java
index b1c7e02..7a58727 100644
--- a/libjava/java/lang/Win32Process.java
+++ b/libjava/java/lang/Win32Process.java
@@ -67,6 +67,14 @@ final class ConcreteProcess extends Process
                           File dir)
     throws IOException
   {
+    for (int i = 0; i < progarray.length; i++)
+      {
+        String s = progarray[i];
+
+        if ( (s.indexOf (' ') >= 0) || (s.indexOf ('\t') >= 0))
+          progarray[i] = "\"" + s + "\"";
+      }
+
     startProcess (progarray, envp, dir);
   }
 
diff --git a/libjava/java/lang/natWin32Process.cc b/libjava/java/lang/natWin32Process.cc
index ff7ddb5..710753e 100644
--- a/libjava/java/lang/natWin32Process.cc
+++ b/libjava/java/lang/natWin32Process.cc
@@ -136,7 +136,7 @@ java::lang::ConcreteProcess::startProcess (jstringArray progarray,
   int cmdLineLen = 0;
 
   for (int i = 0; i < progarray->length; ++i)
-    cmdLineLen += (_Jv_GetStringUTFLength (elts[i]) + 3);
+    cmdLineLen += (_Jv_GetStringUTFLength (elts[i]) + 1);
 
   char *cmdLine = (char *) _Jv_Malloc (cmdLineLen + 1);
   char *cmdLineCurPos = cmdLine;
@@ -145,11 +145,9 @@ java::lang::ConcreteProcess::startProcess (jstringArray progarray,
     {
       if (i > 0)
         *cmdLineCurPos++ = ' ';
-      *cmdLineCurPos++ = '\"';
       jsize s = _Jv_GetStringUTFLength (elts[i]);
       _Jv_GetStringUTFRegion (elts[i], 0, s, cmdLineCurPos);
       cmdLineCurPos += s;
-      *cmdLineCurPos++ = '\"';
     }
   *cmdLineCurPos = '\0';
 
diff --git a/libjava/jni.cc b/libjava/jni.cc
index 7dd9836..6ca5edd 100644
--- a/libjava/jni.cc
+++ b/libjava/jni.cc
@@ -2359,7 +2359,7 @@ static jint
   return 0;
 }
 
-JNIEXPORT jint JNICALL
+jint JNICALL
 JNI_GetDefaultJavaVMInitArgs (void *args)
 {
   jint version = * (jint *) args;
@@ -2376,7 +2376,7 @@ JNI_GetDefaultJavaVMInitArgs (void *args)
   return 0;
 }
 
-JNIEXPORT jint JNICALL
+jint JNICALL
 JNI_CreateJavaVM (JavaVM **vm, void **penv, void *args)
 {
   JvAssert (! the_vm);
@@ -2441,7 +2441,7 @@ JNI_CreateJavaVM (JavaVM **vm, void **penv, void *args)
   return 0;
 }
 
-JNIEXPORT jint JNICALL
+jint JNICALL
 JNI_GetCreatedJavaVMs (JavaVM **vm_buffer, jsize buf_len, jsize *n_vms)
 {
   if (buf_len <= 0)
diff --git a/libjava/testsuite/Makefile.in b/libjava/testsuite/Makefile.in
index 56dbd5c..18ef48f 100644
--- a/libjava/testsuite/Makefile.in
+++ b/libjava/testsuite/Makefile.in
@@ -68,6 +68,7 @@ AS = @AS@
 BACKTRACESPEC = @BACKTRACESPEC@
 CC = @CC@
 CHECKREFSPEC = @CHECKREFSPEC@
+CLASSPATH_SEP = @CLASSPATH_SEP@
 COMPPATH = @COMPPATH@
 CXX = @CXX@
 CXXCPP = @CXXCPP@
@@ -156,7 +157,7 @@ DIST_COMMON =  ChangeLog Makefile.am Makefile.in
 
 DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)
 
-TAR = gtar
+TAR = tar
 GZIP_ENV = --best
 all: all-redirect
 .SUFFIXES:
diff --git a/libobjc/Makefile.in b/libobjc/Makefile.in
index 244f1e7..d977c79 100644
--- a/libobjc/Makefile.in
+++ b/libobjc/Makefile.in
@@ -99,7 +99,8 @@ INCLUDES = -I$(srcdir)/objc  -I$(srcdir)/$(MULTISRCTOP)../gcc \
   -I$(srcdir)/$(MULTISRCTOP)../gcc/config -I$(MULTIBUILDTOP)../../gcc \
   -I$(srcdir)/$(MULTISRCTOP)../include
 
-OBJC_GCFLAGS=-DOBJC_WITH_GC=1
+OBJC_GCFLAGS=-DOBJC_WITH_GC=1 \
+  -I$(srcdir)/$(MULTISRCTOP)../boehm-gc/include
 OBJC_THREAD_FILE=thr-objc
 OBJC_BOEHM_GC=@OBJC_BOEHM_GC@
 
@@ -200,6 +201,10 @@ linking_gc.lo: linking.m
 	$(LIBTOOL_COMPILE) $(CC) -fgnu-runtime -c -o $@ $(ALL_CFLAGS) \
 		$(OBJC_GCFLAGS) $(INCLUDES) $<
 
+misc.lo: misc.c
+	$(LIBTOOL_COMPILE) $(CC) -c $(ALL_CFLAGS) -o $@ -mnop-fun-dllimport \
+		$(INCLUDES) $<
+
 misc_gc.lo: misc.c
 	$(LIBTOOL_COMPILE) $(CC) -c $(ALL_CFLAGS) -o $@ $(OBJC_GCFLAGS) \
 		$(INCLUDES) $<
diff --git a/libstdc++-v3/config/os/mingw32/os_defines.h b/libstdc++-v3/config/os/mingw32/os_defines.h
index 5c99e09..cca62fe 100644
--- a/libstdc++-v3/config/os/mingw32/os_defines.h
+++ b/libstdc++-v3/config/os/mingw32/os_defines.h
@@ -34,4 +34,21 @@
 // System-specific #define, typedefs, corrections, etc, go here.  This
 // file will come before all others.
 
+//  Define as 0 to enable inlining of gthread interface to win32api.
+//  By default, don't pollute libstdc++ with win32api names.
+#if !defined (__GTHREAD_HIDE_WIN32API)
+# define __GTHREAD_HIDE_WIN32API 1
+#endif
+
+// Prevent win32api windef.h from defining min and max as macros.
+#undef NOMINMAX
+#define NOMINMAX 1
+
+// mingw32 local hack: Override  _GLIBCPP_USE_WCHAR_T for wstring
+#define _GLIBCPP_USE_WSTRING 1
+
+// mingw32 local hack: Cast long double to doubles to workaround
+// printf bug.	
+#define _GLIBCPP_NO_LONG_DOUBLE_IO 1
+
 #endif
diff --git a/libstdc++-v3/configure.target b/libstdc++-v3/configure.target
index c1d1cb1..7cbbf1a 100644
--- a/libstdc++-v3/configure.target
+++ b/libstdc++-v3/configure.target
@@ -150,6 +150,9 @@ case "${target_os}" in
     ;;
   mingw32*)
     os_include_dir="os/mingw32"
+    ATOMICITYH="cpu/i486"
+#   cmodel=c
+#   c_compatibility=yes
     ;;
   netbsd*)
     os_include_dir="os/bsd/netbsd"
diff --git a/libstdc++-v3/include/bits/char_traits.h b/libstdc++-v3/include/bits/char_traits.h
index 2b733cd..25b4bd4 100644
--- a/libstdc++-v3/include/bits/char_traits.h
+++ b/libstdc++-v3/include/bits/char_traits.h
@@ -181,7 +181,7 @@ namespace std
   };
 
 
-#ifdef _GLIBCPP_USE_WCHAR_T
+#if defined (_GLIBCPP_USE_WCHAR_T) || defined (_GLIBCPP_USE_WSTRING)
   /// 21.1.3.2  char_traits specializations
   template<>
     struct char_traits<wchar_t>
@@ -189,9 +189,11 @@ namespace std
       typedef wchar_t 		char_type;
       typedef wint_t 		int_type;
       typedef streamoff 	off_type;
+#if defined (_GLIBCPP_USE_WCHAR_T)
       typedef wstreampos 	pos_type;
       typedef mbstate_t 	state_type;
-      
+#endif
+
       static void 
       assign(char_type& __c1, const char_type& __c2)
       { __c1 = __c2; }
diff --git a/libstdc++-v3/include/bits/locale_facets.tcc b/libstdc++-v3/include/bits/locale_facets.tcc
index 2bbf0a4..f1a604b 100644
--- a/libstdc++-v3/include/bits/locale_facets.tcc
+++ b/libstdc++-v3/include/bits/locale_facets.tcc
@@ -598,8 +598,14 @@ namespace std
       string __xtrc;
       __xtrc.reserve(32);
       __beg = _M_extract_float(__beg, __end, __io, __err, __xtrc);
+#if defined (GLIBCPP_NO_LONG_DOUBLE_IO) && !defined(_GLIBCPP_USE_C99)
+      double __vd;
+      __convert_to_v(__xtrc.c_str(), __vd, __err, _S_c_locale);
+      __v = static_cast<long double>(__vd);	
+#else
       __convert_to_v(__xtrc.c_str(), __v, __err, _S_c_locale);
       return __beg;
+#endif
     }
 
   template<typename _CharT, typename _InIter>
@@ -1062,8 +1068,15 @@ namespace std
     num_put<_CharT, _OutIter>::
     do_put(iter_type __s, ios_base& __io, char_type __fill, 
 	   long double __v) const
-    { return _M_convert_float(__s, __io, __fill, 'L', __v); }
-
+    {
+#ifdef  _GLIBCPP_NO_LONG_DOUBLE_IO
+      return _M_convert_float(__s, __io, __fill, char_type(),
+			      static_cast<double>(__v));
+#else
+      return _M_convert_float(__s, __io, __fill, 'L', __v);
+#endif
+    }
+ 
   template<typename _CharT, typename _OutIter>
     _OutIter
     num_put<_CharT, _OutIter>::
@@ -1094,17 +1107,22 @@ namespace std
     money_get<_CharT, _InIter>::
     do_get(iter_type __beg, iter_type __end, bool __intl, ios_base& __io, 
 	   ios_base::iostate& __err, long double& __units) const
-    { 
+    {
       string_type __str;
       __beg = this->do_get(__beg, __end, __intl, __io, __err, __str); 
-
       const int __cs_size = __str.size() + 1;
       char* __cs = static_cast<char*>(__builtin_alloca(__cs_size));
       const locale __loc = __io.getloc();
       const ctype<_CharT>& __ctype = use_facet<ctype<_CharT> >(__loc); 
       const _CharT* __wcs = __str.c_str();
-      __ctype.narrow(__wcs, __wcs + __cs_size, char(), __cs);      
+      __ctype.narrow(__wcs, __wcs + __str.size() + 1, char(), __cs);      
+#if defined _GLIBCPP_NO_LONG_DOUBLE_IO  && !defined (_GLIBCPP_USE_C99)
+      double __dunits;
+      __convert_to_v(__cs, __dunits, __err, _S_c_locale);
+      __units = static_cast<long double>(__dunits);	
+#else  //  _GLIBCPP_NO_LONG_DOUBLE_IO && !defined (_GLIBCPP_USE_C99)
       __convert_to_v(__cs, __units, __err, _S_c_locale);
+#endif  //  _GLIBCPP_NO_LONG_DOUBLE_IO
       return __beg;
     }
 
@@ -1312,6 +1330,31 @@ namespace std
     { 
       const locale __loc = __io.getloc();
       const ctype<_CharT>& __ctype = use_facet<ctype<_CharT> >(__loc);
+#ifdef  _GLIBCPP_NO_LONG_DOUBLE_IO
+      double __dunits = static_cast<double>(__units);
+#ifdef _GLIBCPP_USE_C99
+      // First try a buffer perhaps big enough.
+      int __cs_size = 64;
+      char* __cs = static_cast<char*>(__builtin_alloca(__cs_size));
+      int __len = __convert_from_v(__cs, __cs_size, "%.01f", __dunits, 
+				   _S_c_locale);
+      // If the buffer was not large enough, try again with the correct size.
+      if (__len >= __cs_size)
+	{
+	  __cs_size = __len + 1;
+	  __cs = static_cast<char*>(__builtin_alloca(__cs_size));
+	  __len = __convert_from_v(__cs, __cs_size, "%.01f", __dunits, 
+				   _S_c_locale);
+	}
+#else
+      // max_exponent10 + 1 for the integer part, + 4 for sign, decimal point,
+      // decimal digit, '\0'. 
+      const int __cs_size = numeric_limits<long double>::max_exponent10 + 5;
+      char* __cs = static_cast<char*>(__builtin_alloca(__cs_size));
+      int __len = __convert_from_v(__cs, 0, "%.01f", __dunits, _S_c_locale);
+#endif
+
+#else // _GLIBCPP_NO_LONG_DOUBLE_IO
 #ifdef _GLIBCPP_USE_C99
       // First try a buffer perhaps big enough.
       int __cs_size = 64;
@@ -1334,6 +1377,7 @@ namespace std
       char* __cs = static_cast<char*>(__builtin_alloca(__cs_size));
       int __len = __convert_from_v(__cs, 0, "%.0Lf", __units, _S_c_locale);
 #endif
+#endif  // _GLIBCPP_NO_LONG_DOUBLE_IO
       _CharT* __ws = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT) 
 							   * __cs_size));
       __ctype.widen(__cs, __cs + __len, __ws);
diff --git a/libstdc++-v3/include/bits/stl_threads.h b/libstdc++-v3/include/bits/stl_threads.h
index b21ebdd..53baf25 100644
--- a/libstdc++-v3/include/bits/stl_threads.h
+++ b/libstdc++-v3/include/bits/stl_threads.h
@@ -97,35 +97,6 @@ namespace std
       return __tmp;
     }
   };
-
-  // Atomic swap on unsigned long
-  // This is guaranteed to behave as though it were atomic only if all
-  // possibly concurrent updates use _Atomic_swap.
-  // In some cases the operation is emulated with a lock.
-#if defined (__GTHREAD_MUTEX_INIT)
-  // This could be optimized to use the atomicity.h abstraction layer.
-  // vyzo: simple _Atomic_swap implementation following the guidelines above
-  // We use a template here only to get a unique initialized instance.
-  template<int __dummy>
-    struct _Swap_lock_struct 
-    { static __gthread_mutex_t _S_swap_lock; };
-
-  template<int __dummy>
-    __gthread_mutex_t
-    _Swap_lock_struct<__dummy>::_S_swap_lock = __GTHREAD_MUTEX_INIT;
-
-  // This should be portable, but performance is expected to be quite
-  // awful.  This really needs platform specific code.
-  inline unsigned long 
-  _Atomic_swap(unsigned long * __p, unsigned long __q) 
-  {
-    __gthread_mutex_lock(&_Swap_lock_struct<0>::_S_swap_lock);
-    unsigned long __result = *__p;
-    *__p = __q;
-    __gthread_mutex_unlock(&_Swap_lock_struct<0>::_S_swap_lock);
-    return __result;
-  }
-#endif
 } //namespace std
 
   // Locking class.  Note that this class *does not have a
diff --git a/libstdc++-v3/include/bits/stringfwd.h b/libstdc++-v3/include/bits/stringfwd.h
index db40bef..e962b54 100644
--- a/libstdc++-v3/include/bits/stringfwd.h
+++ b/libstdc++-v3/include/bits/stringfwd.h
@@ -59,7 +59,7 @@ namespace std
 
   typedef basic_string<char>    string;
 
-#ifdef _GLIBCPP_USE_WCHAR_T
+#if defined (_GLIBCPP_USE_WCHAR_T) || defined (_GLIBCPP_USE_WSTRING)
   template<> struct char_traits<wchar_t>;
 
   typedef basic_string<wchar_t> wstring;
diff --git a/libstdc++-v3/include/ext/ropeimpl.h b/libstdc++-v3/include/ext/ropeimpl.h
index f3f09f5..a19269c 100644
--- a/libstdc++-v3/include/ext/ropeimpl.h
+++ b/libstdc++-v3/include/ext/ropeimpl.h
@@ -46,7 +46,7 @@
  */
 
 #include <cstdio>     
-#include <iostream>
+#include <ostream>
 #include <bits/functexcept.h>
 
 #include <ext/algorithm> // For copy_n and lexicographical_compare_3way
@@ -1447,30 +1447,22 @@ template<class _CharT, class _Alloc>
 const _CharT* rope<_CharT,_Alloc>::c_str() const {
     if (0 == _M_tree_ptr) {
         _S_empty_c_str[0] = _S_eos((_CharT*)0);  // Possibly redundant,
-					     // but probably fast.
-        return _S_empty_c_str;
-    }
-    __GC_CONST _CharT* __old_c_string = _M_tree_ptr->_M_c_string;
-    if (0 != __old_c_string) return(__old_c_string);
-    size_t __s = size();
-    _CharT* __result = _Data_allocate(__s + 1);
-    _S_flatten(_M_tree_ptr, __result);
-    __result[__s] = _S_eos((_CharT*)0);
-#   ifdef __GC
-	_M_tree_ptr->_M_c_string = __result;
-#   else
-      if ((__old_c_string = (__GC_CONST _CharT*)
-             std::_Atomic_swap((unsigned long *)(&(_M_tree_ptr->_M_c_string)),
-			  (unsigned long)__result)) != 0) {
-	// It must have been added in the interim.  Hence it had to have been
-	// separately allocated.  Deallocate the old copy, since we just
-	// replaced it.
-	_Destroy(__old_c_string, __old_c_string + __s + 1);
-	_Data_deallocate(__old_c_string, __s + 1);
+					         // but probably fast.
+          return _S_empty_c_str;
       }
-#   endif
-    return(__result);
-}
+    __gthread_mutex_lock (&this->_M_tree_ptr->_M_c_string_lock);
+    __GC_CONST _CharT* __result = this->_M_tree_ptr->_M_c_string;
+    if (0 == __result)
+      {
+	size_t __s = size();
+	__result = _Data_allocate(__s + 1);
+	_S_flatten(this->_M_tree_ptr, __result);
+	__result[__s] = _S_eos((_CharT*)0);
+	this->_M_tree_ptr->_M_c_string = __result;
+      }
+     __gthread_mutex_unlock (&this->_M_tree_ptr->_M_c_string_lock);
+      return(__result);
+  }
 
 template<class _CharT, class _Alloc>
 const _CharT* rope<_CharT,_Alloc>::replace_with_c_str() {
diff --git a/libstdc++-v3/include/ext/stl_rope.h b/libstdc++-v3/include/ext/stl_rope.h
index eae2613..db2f239 100644
--- a/libstdc++-v3/include/ext/stl_rope.h
+++ b/libstdc++-v3/include/ext/stl_rope.h
@@ -483,6 +483,7 @@ struct _Rope_RopeRep : public _Rope_rep_base<_CharT,_Alloc>
     bool _M_is_balanced:8;
     unsigned char _M_depth;
     __GC_CONST _CharT* _M_c_string;
+    __gthread_mutex_t _M_c_string_lock;
                         /* Flattened version of string, if needed.  */
                         /* typically 0.                             */
                         /* If it's not 0, then the memory is owned  */
@@ -498,7 +499,15 @@ struct _Rope_RopeRep : public _Rope_rep_base<_CharT,_Alloc>
           _Refcount_Base(1),
 #         endif
           _M_tag(__t), _M_is_balanced(__b), _M_depth(__d), _M_c_string(0)
-    { }
+#ifdef __GTHREAD_MUTEX_INIT
+    {
+	// Do not copy a POSIX/gthr mutex once in use.  However, bits are bits.
+	__gthread_mutex_t __tmp = __GTHREAD_MUTEX_INIT;
+	_M_c_string_lock = __tmp;
+    }
+#else
+    { __GTHREAD_MUTEX_INIT_FUNCTION (&_M_c_string_lock); }
+#endif
 #   ifdef __GC
         void _M_incr () {}
 #   endif
diff --git a/libstdc++-v3/libsupc++/Makefile.in b/libstdc++-v3/libsupc++/Makefile.in
index 843c7f4..208fb9d 100644
--- a/libstdc++-v3/libsupc++/Makefile.in
+++ b/libstdc++-v3/libsupc++/Makefile.in
@@ -164,7 +164,7 @@ OPTIMIZE_CXXFLAGS = @OPTIMIZE_CXXFLAGS@
 # These bits are all figured out from configure. Look in acinclude.m4
 # or configure.in to see how they are set. See GLIBCPP_EXPORT_FLAGS
 CONFIG_CXXFLAGS = \
-	@SECTION_FLAGS@ @EXTRA_CXX_FLAGS@ 
+	@EXTRA_CXX_FLAGS@ 
 
 
 # Warning flags to use.
diff --git a/libstdc++-v3/libsupc++/eh_alloc.cc b/libstdc++-v3/libsupc++/eh_alloc.cc
index b328acb..4f3e286 100644
--- a/libstdc++-v3/libsupc++/eh_alloc.cc
+++ b/libstdc++-v3/libsupc++/eh_alloc.cc
@@ -36,6 +36,9 @@
 #include <exception>
 #include "unwind-cxx.h"
 #include "bits/c++config.h"
+#ifdef __MINGW32__
+#undef __GTHREAD_HIDE_WIN32API
+#endif
 #include "bits/gthr.h"
 
 using namespace __cxxabiv1;
diff --git a/libstdc++-v3/libsupc++/eh_catch.cc b/libstdc++-v3/libsupc++/eh_catch.cc
index 4a678eb..14f4259 100644
--- a/libstdc++-v3/libsupc++/eh_catch.cc
+++ b/libstdc++-v3/libsupc++/eh_catch.cc
@@ -1,5 +1,5 @@
 // -*- C++ -*- Exception handling routines for catching.
-// Copyright (C) 2001, 2003 Free Software Foundation, Inc.
+// Copyright (C) 2001, 2003, 2004 Free Software Foundation, Inc.
 //
 // This file is part of GNU CC.
 //
@@ -65,10 +65,12 @@ __cxa_begin_catch (void *exc_obj_in)
     // This exception was rethrown from an immediately enclosing region.
     count = -count + 1;
   else
-    count += 1;
+    {
+      count += 1;
+      globals->uncaughtExceptions -= 1;
+    }
   header->handlerCount = count;
 
-  globals->uncaughtExceptions -= 1;
   if (header != prev)
     {
       header->nextException = prev;
diff --git a/libstdc++-v3/libsupc++/eh_globals.cc b/libstdc++-v3/libsupc++/eh_globals.cc
index 3033619..a0ccb8e 100644
--- a/libstdc++-v3/libsupc++/eh_globals.cc
+++ b/libstdc++-v3/libsupc++/eh_globals.cc
@@ -32,6 +32,9 @@
 #include <cstdlib>
 #include "unwind-cxx.h"
 #include "bits/c++config.h"
+#ifdef __MINGW32__
+#undef __GTHREAD_HIDE_WIN32API
+#endif
 #include "bits/gthr.h"
 
 using namespace __cxxabiv1;
diff --git a/libstdc++-v3/libsupc++/eh_terminate.cc b/libstdc++-v3/libsupc++/eh_terminate.cc
index 58a6ea4..c40ede2 100644
--- a/libstdc++-v3/libsupc++/eh_terminate.cc
+++ b/libstdc++-v3/libsupc++/eh_terminate.cc
@@ -36,9 +36,11 @@
 
 using namespace __cxxabiv1;
 
+#if !(defined (__MINGW32__) || defined (__CYGWIN__))
 /* The current installed user handlers.  */
 std::terminate_handler __cxxabiv1::__terminate_handler = std::abort;
 std::unexpected_handler __cxxabiv1::__unexpected_handler = std::terminate;
+#endif
 
 void
 __cxxabiv1::__terminate (std::terminate_handler handler)
@@ -54,7 +56,12 @@ __cxxabiv1::__terminate (std::terminate_handler handler)
 void
 std::terminate ()
 {
-  __terminate (__terminate_handler);
+#if 0 // (defined (__MINGW32__) || defined (__CYGWIN__))
+  if (__terminate_handler == NULL )
+    std::abort;
+  else
+#endif
+    __terminate (__terminate_handler);
 }
 
 void
@@ -67,7 +74,12 @@ __cxxabiv1::__unexpected (std::unexpected_handler handler)
 void
 std::unexpected ()
 {
-  __unexpected (__unexpected_handler);
+#if 0 // (defined (__MINGW32__) || defined (__CYGWIN__))
+  if (unexpected_handler == NULL)
+    std::terminate();
+  else
+#endif
+    __unexpected (__unexpected_handler);
 }
 
 std::terminate_handler
diff --git a/libstdc++-v3/libsupc++/typeinfo b/libstdc++-v3/libsupc++/typeinfo
index 88a2639..07181d4 100644
--- a/libstdc++-v3/libsupc++/typeinfo
+++ b/libstdc++-v3/libsupc++/typeinfo
@@ -44,7 +44,7 @@ namespace __cxxabiv1
   class __class_type_info;
 } // namespace __cxxabiv1
 
-#if !__GXX_WEAK__
+#if !__GXX_WEAK__ || defined (__MINGW32__) || defined (__CYGWIN__)
   // If weak symbols are not supported, typeinfo names are not merged.
   #define __GXX_MERGED_TYPEINFO_NAMES 0
 #else
diff --git a/libstdc++-v3/libsupc++/unwind-cxx.h b/libstdc++-v3/libsupc++/unwind-cxx.h
index b0b0b36..df3a13b 100644
--- a/libstdc++-v3/libsupc++/unwind-cxx.h
+++ b/libstdc++-v3/libsupc++/unwind-cxx.h
@@ -125,9 +125,16 @@ extern "C" void __cxa_call_unexpected (void *) __attribute__((noreturn));
 extern void __terminate(std::terminate_handler) __attribute__((noreturn));
 extern void __unexpected(std::unexpected_handler) __attribute__((noreturn));
 
-// The current installed user handlers.
+ // The current installed user handlers.
+#if defined  (__MINGW32__) || defined (__CYGWIN__)
+extern "C" void** __w32_sharedptr_terminate;
+extern "C" void** __w32_sharedptr_unexpected;
+#define __terminate_handler (*(std::terminate_handler*)(__w32_sharedptr_terminate))
+#define __unexpected_handler (*(std::unexpected_handler*)(__w32_sharedptr_unexpected))
+#else
 extern std::terminate_handler __terminate_handler;
 extern std::unexpected_handler __unexpected_handler;
+#endif
 
 // These are explicitly GNU C++ specific.
 
diff --git a/libstdc++-v3/src/Makefile.in b/libstdc++-v3/src/Makefile.in
index 4340810..8e0aa39 100644
--- a/libstdc++-v3/src/Makefile.in
+++ b/libstdc++-v3/src/Makefile.in
@@ -158,7 +158,7 @@ OPTIMIZE_CXXFLAGS = @OPTIMIZE_CXXFLAGS@
 # These bits are all figured out from configure. Look in acinclude.m4
 # or configure.in to see how they are set. See GLIBCPP_EXPORT_FLAGS
 CONFIG_CXXFLAGS = \
-	@SECTION_FLAGS@ @EXTRA_CXX_FLAGS@ 
+	@EXTRA_CXX_FLAGS@ 
 
 
 # Warning flags to use.
@@ -210,6 +210,7 @@ sources = \
 	fstream.cc \
 	fstream-inst.cc \
 	functexcept.cc \
+	functexcept-ios.cc \
 	globals.cc \
 	io-inst.cc \
 	ios.cc \
@@ -310,7 +311,7 @@ LDFLAGS = @LDFLAGS@
 LIBS = @LIBS@
 libstdc___la_OBJECTS =  bitset.lo codecvt.lo complex_io.lo \
 concept-inst.lo ctype.lo ext-inst.lo fstream.lo fstream-inst.lo \
-functexcept.lo globals.lo io-inst.lo ios.lo istream-inst.lo limits.lo \
+functexcept.lo functexcept-ios.lo globals.lo io-inst.lo ios.lo istream-inst.lo limits.lo \
 locale.lo locale-inst.lo localename.lo misc-inst.lo ostream-inst.lo \
 sstream-inst.lo stdexcept.lo stl-inst.lo streambuf-inst.lo \
 string-inst.lo strstream.lo valarray-inst.lo vterminate.lo \
diff --git a/libstdc++-v3/src/functexcept-ios.cc b/libstdc++-v3/src/functexcept-ios.cc
new file mode 100644
index 0000000..69da9bf
--- /dev/null
+++ b/libstdc++-v3/src/functexcept-ios.cc
@@ -0,0 +1,47 @@
+// Copyright (C) 2001, 2002, 2003 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 2, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// You should have received a copy of the GNU General Public License along
+// with this library; see the file COPYING.  If not, write to the Free
+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
+// USA.
+
+// As a special exception, you may use this file as part of a free software
+// library without restriction.  Specifically, if other files instantiate
+// templates or use macros or inline functions from this file, or you compile
+// this file and link it with other files to produce an executable, this
+// file does not by itself cause the resulting executable to be covered by
+// the GNU General Public License.  This exception does not however
+// invalidate any other reasons why the executable file might be covered by
+// the GNU General Public License.
+
+#include <bits/functexcept.h>
+#include <cstdlib>
+#include <exception>
+#include <stdexcept>
+#include <new>
+#include <typeinfo>
+#include <ios>
+
+namespace std 
+{
+#if __EXCEPTIONS
+  void
+  __throw_ios_failure(const char* __s)
+  { throw ios_base::failure(__s); }
+#else
+  void
+  __throw_ios_failure(const char*)
+  { abort(); }
+#endif //__EXCEPTIONS
+}
diff --git a/libstdc++-v3/src/functexcept.cc b/libstdc++-v3/src/functexcept.cc
index dab6f2f..2ad4a69 100644
--- a/libstdc++-v3/src/functexcept.cc
+++ b/libstdc++-v3/src/functexcept.cc
@@ -31,7 +31,6 @@
 #include <stdexcept>
 #include <new>
 #include <typeinfo>
-#include <ios>
 
 namespace std 
 {
@@ -88,9 +87,6 @@ namespace std
   __throw_underflow_error(const char* __s)
   { throw underflow_error(__s); }
 
-  void
-  __throw_ios_failure(const char* __s)
-  { throw ios_base::failure(__s); }
 #else
   void
   __throw_bad_exception(void)
@@ -144,8 +140,5 @@ namespace std
   __throw_underflow_error(const char*)
   { abort(); }
 
-  void
-  __throw_ios_failure(const char*)
-  { abort(); }
 #endif //__EXCEPTIONS
 }
diff --git a/libstdc++-v3/src/globals.cc b/libstdc++-v3/src/globals.cc
index efbfdbe..1f320d8 100644
--- a/libstdc++-v3/src/globals.cc
+++ b/libstdc++-v3/src/globals.cc
@@ -26,6 +26,9 @@
 // the GNU General Public License.
 
 #include "bits/c++config.h"
+#ifdef __MINGW32__
+#undef __GTHREAD_HIDE_WIN32API
+#endif
 #include "bits/gthr.h"
 #include <fstream>
 #include <istream>
@@ -264,9 +267,6 @@ namespace __gnu_cxx
   // allows static initialization of these objects on systems that need a
   // function call to initialize a mutex.  For example, see stl_threads.h.
 #ifdef __GTHREAD_MUTEX_INIT
-  // Need to provide explicit instantiations of static data for
-  // systems with broken weak linkage support.
-  template __gthread_mutex_t _Swap_lock_struct<0>::_S_swap_lock;
 #elif defined(__GTHREAD_MUTEX_INIT_FUNCTION)
   __gthread_once_t _GLIBCPP_once = __GTHREAD_ONCE_INIT;
   __gthread_mutex_t _GLIBCPP_mutex;
diff --git a/libstdc++-v3/src/locale.cc b/libstdc++-v3/src/locale.cc
index 7453275..f54530b 100644
--- a/libstdc++-v3/src/locale.cc
+++ b/libstdc++-v3/src/locale.cc
@@ -551,8 +551,16 @@ namespace std
 
     // For long long types.
     if (__modl)
+#ifndef __MINGW32__
       *__fptr++ = __modl;
-
+#else
+      {
+	__fptr--;
+	*__fptr++ = 'I';
+	*__fptr++ = '6';
+	*__fptr++ = '4';
+      }
+#endif
     ios_base::fmtflags __bsefield = __flags & ios_base::basefield;
     if (__bsefield == ios_base::hex)
       *__fptr++ = (__flags & ios_base::uppercase) ? 'X' : 'x';
