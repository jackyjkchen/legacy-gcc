diff --git a/gcc/testsuite/g++.dg/torture/pr40081.C b/gcc/testsuite/g++.dg/torture/pr40081.C
new file mode 100644
index 000000000..e65c5a843
--- /dev/null
+++ b/gcc/testsuite/g++.dg/torture/pr40081.C
@@ -0,0 +1,16 @@
+struct Atomic_t {
+    Atomic_t(int i) : val(i) { }
+    volatile int val;
+};
+class RefCount {
+public:
+    RefCount(Atomic_t c) : m_count(c)  { }
+    Atomic_t m_count;
+};
+class IntrusiveCountableBase {
+    RefCount m_useCount;
+protected:
+    IntrusiveCountableBase();
+};
+IntrusiveCountableBase::IntrusiveCountableBase() : m_useCount(0)  { }
+
diff --git a/gcc/tree-sra.c b/gcc/tree-sra.c
index b0200cd1f..9a1de3be8 100644
--- a/gcc/tree-sra.c
+++ b/gcc/tree-sra.c
@@ -274,6 +274,10 @@ sra_type_can_be_decomposed_p (tree type)
 		      != TYPE_PRECISION (TREE_TYPE (t))))
 		goto fail;
 
+	      /* And volatile fields.  */
+	      if (TREE_THIS_VOLATILE (t))
+		goto fail;
+
 	      saw_one_field = true;
 	    }
 
