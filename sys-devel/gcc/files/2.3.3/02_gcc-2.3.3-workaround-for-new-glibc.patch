diff --git a/cccp.c b/cccp.c
index 6dcc347..b9fa746 100644
--- a/cccp.c
+++ b/cccp.c
@@ -1846,8 +1846,8 @@ main (argc, argv)
     fatal ("I/O error on output");
 
   if (errors)
-    exit (FAILURE_EXIT_CODE);
-  exit (SUCCESS_EXIT_CODE);
+    _exit (FAILURE_EXIT_CODE);
+  _exit (SUCCESS_EXIT_CODE);
 
  perror:
   pfatal_with_name (in_fname);
@@ -5851,7 +5851,7 @@ do_error (buf, limit, op, keyword)
   copy[length] = 0;
   SKIP_WHITE_SPACE (copy);
   error ("#error %s", copy);
-  exit (FAILURE_EXIT_CODE);
+  _exit (FAILURE_EXIT_CODE);
   /* NOTREACHED */
   return 0;
 }
@@ -8558,7 +8558,7 @@ fatal (str, arg)
   fprintf (stderr, "%s: ", progname);
   fprintf (stderr, str, arg);
   fprintf (stderr, "\n");
-  exit (FAILURE_EXIT_CODE);
+  _exit (FAILURE_EXIT_CODE);
 }
 
 /* More 'friendly' abort that prints the line and file.
@@ -8585,9 +8585,9 @@ pfatal_with_name (name)
 {
   perror_with_name (name);
 #ifdef VMS
-  exit (vaxc$errno);
+  _exit (vaxc$errno);
 #else
-  exit (FAILURE_EXIT_CODE);
+  _exit (FAILURE_EXIT_CODE);
 #endif
 }
 
diff --git a/collect2.c b/collect2.c
index 50b9b9c..2732c8d 100644
--- a/collect2.c
+++ b/collect2.c
@@ -260,7 +260,7 @@ my_exit (status)
   if (o_file != 0 && o_file[0])
     maybe_unlink (o_file);
 
-  exit (status);
+  _exit (status);
 }
 
 
diff --git a/cp-edsel.c b/cp-edsel.c
index 52aa56c..eeb51b0 100644
--- a/cp-edsel.c
+++ b/cp-edsel.c
@@ -205,7 +205,7 @@ init_cadillac ()
 
       default:
 	perror ("Editor to kernel connection");
-	exit (0);
+	_exit (0);
       }
 }
 
diff --git a/dbxout.c b/dbxout.c
index fe7887d..c31b4de 100644
--- a/dbxout.c
+++ b/dbxout.c
@@ -348,7 +348,7 @@ abspath (rel_filename)
 
               	  fprintf (stderr, "%s: invalid file name: %s\n",
 			   pname, rel_filename);
-              	  exit (1);
+              	  _exit (1);
               	}
                     *++outp = '\0';
                     continue;
diff --git a/enquire.c b/enquire.c
index 808bb96..1a66fd1 100644
--- a/enquire.c
+++ b/enquire.c
@@ -586,13 +586,13 @@ int setmode(s) char *s; {
 #endif
 
 Procedure farewell(bugs) int bugs; {
-	if (bugs == 0) exit(0);
+	if (bugs == 0) _exit(0);
 	printf("\n%sFor hints on dealing with the ", co);
 	if (bugs == 1) printf("problem");
 	else printf("%d problems", bugs);
 	printf(" above\n   see the section 'TROUBLESHOOTING' in the file ");
 	printf("%s%s\n", FILENAME, oc);
-	exit(bugs);
+	_exit(bugs);
 }
 
 /* The program has received a signal where it wasn't expecting one */
@@ -606,7 +606,7 @@ char *xmalloc(size) unsigned size; {
 	char *value = (char *)malloc(size);
 	if (value == 0) {
 		fprintf(stderr, "Virtual memory exceeded\n");
-		exit(bugs+1);
+		_exit(bugs+1);
 	}
 	return value;
 }
@@ -670,7 +670,7 @@ int main(argc, argv) int argc; char *argv[]; {
 		fprintf(stderr,
 			"Usage: %s [-vlf]\n  v=Verbose l=Limits.h f=Float.h\n",
 			argv[0]);
-		exit(1);
+		_exit(1);
 	}
 	if (L || F) {
 		co[0]= '/'; oc[0]= ' ';
diff --git a/gcc.c b/gcc.c
index 70f950d..8917b50 100644
--- a/gcc.c
+++ b/gcc.c
@@ -1618,7 +1618,7 @@ pexecute (search_flag, program, argv, not_last)
       /* Exec the program.  */
       (*func) (program, argv);
       perror_exec (program);
-      exit (-1);
+      _exit (-1);
       /* NOTREACHED */
       return 0;
 
@@ -1990,12 +1990,12 @@ process_command (argc, argv)
 	  printf ("*predefines:\n%s\n\n", cpp_predefines);
 	  printf ("*cross_compile:\n%d\n\n", cross_compile);
 
-	  exit (0);
+	  _exit (0);
 	}
       else if (! strcmp (argv[i], "-dumpversion"))
 	{
 	  printf ("%s\n", version_string);
-	  exit (0);
+	  _exit (0);
 	}
       else if (! strcmp (argv[i], "-print-libgcc-file-name"))
 	{
@@ -3437,7 +3437,7 @@ main (argc, argv)
   if (print_libgcc_file_name)
     {
       printf ("%s\n", find_file ("libgcc.a"));
-      exit (0);
+      _exit (0);
     }
 
   /* Obey some of the options.  */
@@ -3446,7 +3446,7 @@ main (argc, argv)
     {
       fprintf (stderr, "gcc version %s\n", version_string);
       if (n_infiles == 0)
-	exit (0);
+	_exit (0);
     }
 
   if (n_infiles == 0)
@@ -3611,7 +3611,7 @@ main (argc, argv)
     delete_failure_queue ();
   delete_temp_files ();
 
-  exit (error_count > 0 ? (signal_count ? 2 : 1) : 0);
+  _exit (error_count > 0 ? (signal_count ? 2 : 1) : 0);
   /* NOTREACHED */
   return 0;
 }
@@ -3800,7 +3800,7 @@ fatal VPROTO((char *format, ...))
   va_end (ap);
   fprintf (stderr, "\n");
   delete_temp_files ();
-  exit (1);
+  _exit (1);
 }
 
 static void
@@ -3832,7 +3832,7 @@ fatal (msg, arg1, arg2)
 {
   error (msg, arg1, arg2);
   delete_temp_files ();
-  exit (1);
+  _exit (1);
 }
 
 static void
diff --git a/genattr.c b/genattr.c
index 8341cf0..9a2dac6 100644
--- a/genattr.c
+++ b/genattr.c
@@ -220,7 +220,7 @@ fatal (s, a1, a2)
   fprintf (stderr, "genattr: ");
   fprintf (stderr, s, a1, a2);
   fprintf (stderr, "\n");
-  exit (FATAL_EXIT_CODE);
+  _exit (FATAL_EXIT_CODE);
 }
 
 /* More 'friendly' abort that prints the line and file.
@@ -264,7 +264,7 @@ main (argc, argv)
   if (infile == 0)
     {
       perror (argv[1]);
-      exit (FATAL_EXIT_CODE);
+      _exit (FATAL_EXIT_CODE);
     }
 
   init_rtl ();
@@ -408,7 +408,7 @@ from the machine description file `md'.  */\n\n");
     }
 
   fflush (stdout);
-  exit (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);
+  _exit (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);
   /* NOTREACHED */
   return 0;
 }
diff --git a/genattrtab.c b/genattrtab.c
index 61ff5fb..926dbf4 100644
--- a/genattrtab.c
+++ b/genattrtab.c
@@ -5423,7 +5423,7 @@ fatal (s, a1, a2)
   fprintf (stderr, "genattrtab: ");
   fprintf (stderr, s, a1, a2);
   fprintf (stderr, "\n");
-  exit (FATAL_EXIT_CODE);
+  _exit (FATAL_EXIT_CODE);
 }
 
 /* More 'friendly' abort that prints the line and file.
@@ -5510,7 +5510,7 @@ main (argc, argv)
   if (infile == 0)
     {
       perror (argv[1]);
-      exit (FATAL_EXIT_CODE);
+      _exit (FATAL_EXIT_CODE);
     }
 
   init_rtl ();
@@ -5656,7 +5656,7 @@ from the machine description file `md'.  */\n\n");
   write_const_num_delay_slots ();
 
   fflush (stdout);
-  exit (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);
+  _exit (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);
   /* NOTREACHED */
   return 0;
 }
diff --git a/gencodes.c b/gencodes.c
index 255e2aa..0c4cd09 100644
--- a/gencodes.c
+++ b/gencodes.c
@@ -81,7 +81,7 @@ fatal (s, a1, a2)
   fprintf (stderr, "gencodes: ");
   fprintf (stderr, s, a1, a2);
   fprintf (stderr, "\n");
-  exit (FATAL_EXIT_CODE);
+  _exit (FATAL_EXIT_CODE);
 }
 
 /* More 'friendly' abort that prints the line and file.
@@ -111,7 +111,7 @@ main (argc, argv)
   if (infile == 0)
     {
       perror (argv[1]);
-      exit (FATAL_EXIT_CODE);
+      _exit (FATAL_EXIT_CODE);
     }
 
   init_rtl ();
@@ -153,7 +153,7 @@ from the machine description file `md'.  */\n\n");
   printf ("#endif /* MAX_INSN_CODE */\n");
 
   fflush (stdout);
-  exit (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);
+  _exit (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);
   /* NOTREACHED */
   return 0;
 }
diff --git a/genconfig.c b/genconfig.c
index da230f1..cda9d35 100644
--- a/genconfig.c
+++ b/genconfig.c
@@ -265,7 +265,7 @@ fatal (s, a1, a2)
   fprintf (stderr, "genconfig: ");
   fprintf (stderr, s, a1, a2);
   fprintf (stderr, "\n");
-  exit (FATAL_EXIT_CODE);
+  _exit (FATAL_EXIT_CODE);
 }
 
 /* More 'friendly' abort that prints the line and file.
@@ -295,7 +295,7 @@ main (argc, argv)
   if (infile == 0)
     {
       perror (argv[1]);
-      exit (FATAL_EXIT_CODE);
+      _exit (FATAL_EXIT_CODE);
     }
 
   init_rtl ();
@@ -349,7 +349,7 @@ from the machine description file `md'.  */\n\n");
     printf ("#define HAVE_lo_sum\n");
 
   fflush (stdout);
-  exit (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);
+  _exit (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);
   /* NOTREACHED */
   return 0;
 }
diff --git a/genemit.c b/genemit.c
index 4bdd2d5..5adbedf 100644
--- a/genemit.c
+++ b/genemit.c
@@ -695,7 +695,7 @@ fatal (s, a1, a2)
   fprintf (stderr, "genemit: ");
   fprintf (stderr, s, a1, a2);
   fprintf (stderr, "\n");
-  exit (FATAL_EXIT_CODE);
+  _exit (FATAL_EXIT_CODE);
 }
 
 /* More 'friendly' abort that prints the line and file.
@@ -725,7 +725,7 @@ main (argc, argv)
   if (infile == 0)
     {
       perror (argv[1]);
-      exit (FATAL_EXIT_CODE);
+      _exit (FATAL_EXIT_CODE);
     }
 
   init_rtl ();
@@ -792,7 +792,7 @@ from the machine description file `md'.  */\n\n");
   output_init_mov_optab ();
 
   fflush (stdout);
-  exit (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);
+  _exit (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);
   /* NOTREACHED */
   return 0;
 }
diff --git a/genextract.c b/genextract.c
index 09f783f..cbbef79 100644
--- a/genextract.c
+++ b/genextract.c
@@ -349,7 +349,7 @@ fatal (s, a1, a2)
   fprintf (stderr, "genextract: ");
   fprintf (stderr, s, a1, a2);
   fprintf (stderr, "\n");
-  exit (FATAL_EXIT_CODE);
+  _exit (FATAL_EXIT_CODE);
 }
 
 /* More 'friendly' abort that prints the line and file.
@@ -405,7 +405,7 @@ main (argc, argv)
   if (infile == 0)
     {
       perror (argv[1]);
-      exit (FATAL_EXIT_CODE);
+      _exit (FATAL_EXIT_CODE);
     }
 
   init_rtl ();
@@ -533,7 +533,7 @@ from the machine description file `md'.  */\n\n");
   printf ("    }\n}\n");
 
   fflush (stdout);
-  exit (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);
+  _exit (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);
   /* NOTREACHED */
   return 0;
 }
diff --git a/genflags.c b/genflags.c
index 5642e5f..0a1cae6 100644
--- a/genflags.c
+++ b/genflags.c
@@ -196,7 +196,7 @@ fatal (s, a1, a2)
   fprintf (stderr, "genflags: ");
   fprintf (stderr, s, a1, a2);
   fprintf (stderr, "\n");
-  exit (FATAL_EXIT_CODE);
+  _exit (FATAL_EXIT_CODE);
 }
 
 /* More 'friendly' abort that prints the line and file.
@@ -232,7 +232,7 @@ main (argc, argv)
   if (infile == 0)
     {
       perror (argv[1]);
-      exit (FATAL_EXIT_CODE);
+      _exit (FATAL_EXIT_CODE);
     }
 
   init_rtl ();
@@ -285,7 +285,7 @@ from the machine description file `md'.  */\n\n");
   printf ("#endif  /* NO_MD_PROTOTYPES */\n");
 
   fflush (stdout);
-  exit (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);
+  _exit (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);
   /* NOTREACHED */
   return 0;
 }
diff --git a/genoutput.c b/genoutput.c
index 336cd85..d06c3fd 100644
--- a/genoutput.c
+++ b/genoutput.c
@@ -900,7 +900,7 @@ fatal (s, a1, a2, a3, a4)
   fprintf (stderr, "genoutput: ");
   fprintf (stderr, s, a1, a2, a3, a4);
   fprintf (stderr, "\n");
-  exit (FATAL_EXIT_CODE);
+  _exit (FATAL_EXIT_CODE);
 }
 
 /* More 'friendly' abort that prints the line and file.
@@ -939,7 +939,7 @@ main (argc, argv)
   if (infile == 0)
     {
       perror (argv[1]);
-      exit (FATAL_EXIT_CODE);
+      _exit (FATAL_EXIT_CODE);
     }
 
   init_rtl ();
@@ -973,7 +973,7 @@ main (argc, argv)
   output_epilogue ();
 
   fflush (stdout);
-  exit (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);
+  _exit (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);
   /* NOTREACHED */
   return 0;
 }
diff --git a/genpeep.c b/genpeep.c
index 1e11a68..b7b849a 100644
--- a/genpeep.c
+++ b/genpeep.c
@@ -413,7 +413,7 @@ fatal (s, a1, a2)
   fprintf (stderr, "genpeep: ");
   fprintf (stderr, s, a1, a2);
   fprintf (stderr, "\n");
-  exit (FATAL_EXIT_CODE);
+  _exit (FATAL_EXIT_CODE);
 }
 
 /* More 'friendly' abort that prints the line and file.
@@ -445,7 +445,7 @@ main (argc, argv)
   if (infile == 0)
     {
       perror (argv[1]);
-      exit (FATAL_EXIT_CODE);
+      _exit (FATAL_EXIT_CODE);
     }
 
   init_rtl ();
@@ -502,7 +502,7 @@ from the machine description file `md'.  */\n\n");
   printf ("rtx peep_operand[%d];\n", max_opno + 1);
 
   fflush (stdout);
-  exit (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);
+  _exit (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);
   /* NOTREACHED */
   return 0;
 }
diff --git a/genrecog.c b/genrecog.c
index a247e2e..8f0baae 100644
--- a/genrecog.c
+++ b/genrecog.c
@@ -1659,7 +1659,7 @@ fatal (s, a1, a2)
   fprintf (stderr, s, a1, a2);
   fprintf (stderr, "\n");
   fprintf (stderr, "after %d definitions\n", next_index);
-  exit (FATAL_EXIT_CODE);
+  _exit (FATAL_EXIT_CODE);
 }
 
 /* More 'friendly' abort that prints the line and file.
@@ -1692,7 +1692,7 @@ main (argc, argv)
   if (infile == 0)
     {
       perror (argv[1]);
-      exit (FATAL_EXIT_CODE);
+      _exit (FATAL_EXIT_CODE);
     }
 
   init_rtl ();
@@ -1775,7 +1775,7 @@ from the machine description file `md'.  */\n\n");
   write_subroutine (split_tree.first, SPLIT);
 
   fflush (stdout);
-  exit (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);
+  _exit (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);
   /* NOTREACHED */
   return 0;
 }
diff --git a/getopt.c b/getopt.c
index edfa645..99ae86c 100644
--- a/getopt.c
+++ b/getopt.c
@@ -677,7 +677,7 @@ main (argc, argv)
       printf ("\n");
     }
 
-  exit (0);
+  _exit (0);
 }
 
 #endif /* TEST */
diff --git a/getopt1.c b/getopt1.c
index c702aea..a7906bc 100644
--- a/getopt1.c
+++ b/getopt1.c
@@ -155,7 +155,7 @@ main (argc, argv)
       printf ("\n");
     }
 
-  exit (0);
+  _exit (0);
 }
 
 #endif /* TEST */
diff --git a/objc-actions.c b/objc-actions.c
index edfc0b0..80ddc0d 100644
--- a/objc-actions.c
+++ b/objc-actions.c
@@ -1338,7 +1338,7 @@ build_ivar_chain (interface)
 	  /* fatal did not work with 2 args...should fix */
 	  error ("Cannot find interface declaration for `%s', superclass of `%s'",
 		 IDENTIFIER_POINTER (super_name), IDENTIFIER_POINTER (my_name));
-	  exit (34);
+	  _exit (34);
         }
       if (super_interface == interface)
         {
@@ -3509,7 +3509,7 @@ start_class (code, class_name, super_name)
 	{
 	  error ("Cannot find interface declaration for `%s'",
 		 IDENTIFIER_POINTER (class_name));
-	  exit (1);
+	  _exit (1);
 	}
       else
         add_category (class_category_is_assoc_with, class);
@@ -3537,7 +3537,7 @@ start_class (code, class_name, super_name)
         {
 	  error ("Cannot find interface declaration for `%s'",
 		 IDENTIFIER_POINTER (class_name));
-	  exit (1);
+	  _exit (1);
         }
     }
   return class;
diff --git a/objc/core.c b/objc/core.c
index 2d23184..db5bf74 100644
--- a/objc/core.c
+++ b/objc/core.c
@@ -182,7 +182,7 @@ fatal (msg, arg1, arg2)
      char *msg, *arg1, *arg2;
 {
   error (msg, arg1, arg2);
-  exit (1);
+  _exit (1);
 }
 
 static void *
diff --git a/protoize.c b/protoize.c
index 97b036c..edf60bb 100644
--- a/protoize.c
+++ b/protoize.c
@@ -141,7 +141,7 @@ extern int fprintf (FILE *, const char *, ...);
 extern int printf (const char *, ...);
 extern int open (const char *, int, ...);
 #endif /* 0 */
-extern void exit ();
+extern void _exit ();
 extern pointer_type malloc ();
 extern pointer_type realloc ();
 extern void free ();
@@ -611,7 +611,7 @@ xmalloc (byte_count)
   if (rv == NULL)
     {
       fprintf (stderr, "\n%s: virtual memory exceeded\n", pname);
-      exit (1);
+      _exit (1);
       return 0;		/* avoid warnings */
     }
   else
@@ -631,7 +631,7 @@ xrealloc (old_space, byte_count)
   if (rv == NULL)
     {
       fprintf (stderr, "\n%s: virtual memory exceeded\n", pname);
-      exit (1);
+      _exit (1);
       return 0;		/* avoid warnings */
     }
   else
@@ -684,7 +684,7 @@ void
 fancy_abort ()
 {
   fprintf (stderr, "%s: internal abort\n", pname);
-  exit (1);
+  _exit (1);
 }
 
 /* Make a duplicate of a given string in a newly allocated area.  */
@@ -775,7 +775,7 @@ usage ()
   fprintf (stderr, "%s: usage '%s [ -VqfnkNlgC ] [ -B <diname> ] [ filename ... ]'\n",
 	   pname, pname);
 #endif /* !defined (UNPROTOIZE) */
-  exit (1);
+  _exit (1);
 }
 
 /* Return true if the given filename (assumed to be an absolute filename)
@@ -1269,7 +1269,7 @@ abspath (cwd, rel_filename)
 
               	  fprintf (stderr, "%s: invalid file name: %s\n",
 			   pname, rel_filename);
-              	  exit (1);
+              	  _exit (1);
               	}
                     *++outp = '\0';
                     continue;
@@ -1439,7 +1439,7 @@ aux_info_corrupted ()
 {
   fprintf (stderr, "\n%s: fatal error: aux info file corrupted at line %d\n",
 	   pname, current_aux_info_lineno);
-  exit (1);
+  _exit (1);
 }
 
 /* ??? This comment is vague.  Say what the condition is for.  */
@@ -1758,7 +1758,7 @@ save_def_or_dec (l, is_syscalls)
 			 def_dec_p->file->hash_entry->symbol,
 			 def_dec_p->line,
 			 def_dec_p->hash_entry->symbol);
-                exit (1);
+                _exit (1);
               }
             free_def_dec (def_dec_p);
             return;
@@ -4492,7 +4492,7 @@ main (argc, argv)
     {
       fprintf (stderr, "%s: cannot get working directory: %s\n",
 	       pname, sys_errlist[errno]);
-      exit (1);
+      _exit (1);
     }
 
   /* By default, convert the files in the current directory.  */
@@ -4618,8 +4618,8 @@ main (argc, argv)
       do_processing ();
     }
   if (errors)
-    exit (1);
+    _exit (1);
   else
-    exit (0);
+    _exit (0);
   return 1;
 }
diff --git a/toplev.c b/toplev.c
index c700ce3..5a059b3 100644
--- a/toplev.c
+++ b/toplev.c
@@ -820,7 +820,7 @@ pfatal_with_name (name)
 {
   fprintf (stderr, "%s: ", progname);
   perror (name);
-  exit (35);
+  _exit (35);
 }
 
 void
@@ -828,7 +828,7 @@ fatal_io_error (name)
      char *name;
 {
   fprintf (stderr, "%s: %s: I/O error\n", progname, name);
-  exit (35);
+  _exit (35);
 }
 
 void
@@ -837,7 +837,7 @@ fatal (s, v)
      int v;
 {
   error (s, v);
-  exit (34);
+  _exit (34);
 }
 
 /* Called to give a better error message when we don't have an insn to match
@@ -3304,10 +3304,10 @@ You Lose!  You must define PREFERRED_DEBUGGING_TYPE!
 #endif /* not OS2 */
 
   if (errorcount)
-    exit (FATAL_EXIT_CODE);
+    _exit (FATAL_EXIT_CODE);
   if (sorrycount)
-    exit (FATAL_EXIT_CODE);
-  exit (SUCCESS_EXIT_CODE);
+    _exit (FATAL_EXIT_CODE);
+  _exit (SUCCESS_EXIT_CODE);
   return 34;
 }
 
