diff --git a/gcc/testsuite/gcc.target/arm/acle/pr100856.c b/gcc/testsuite/gcc.target/arm/acle/pr100856.c
deleted file mode 100644
index 5bc030e2e..000000000
--- a/gcc/testsuite/gcc.target/arm/acle/pr100856.c
+++ /dev/null
@@ -1,10 +0,0 @@
-/* { dg-do run } */
-/* { dg-require-effective-target arm_v8_1m_main_cde_mve_ok } */
-/* { dg-add-options arm_v8_1m_main_cde_mve } */
-
-#include "arm_cde.h"
-
-int main()
-{
-  return 0;
-}
diff --git a/gcc/testsuite/gcc.target/arm/bfloat16_scalar_typecheck.c b/gcc/testsuite/gcc.target/arm/bfloat16_scalar_typecheck.c
index 8c80c55bc..458e4655b 100644
--- a/gcc/testsuite/gcc.target/arm/bfloat16_scalar_typecheck.c
+++ b/gcc/testsuite/gcc.target/arm/bfloat16_scalar_typecheck.c
@@ -1,4 +1,4 @@
-/* { dg-do assemble { target { arm*-*-* } } } */
+/* { dg-do assemble { target { arm*-*-*eabihf* } } } */
 /* { dg-skip-if "" { *-*-* } { "-fno-fat-lto-objects" } } */
 /* { dg-require-effective-target arm_v8_2a_fp16_neon_ok } */
 /* { dg-require-effective-target arm_v8_2a_bf16_neon_ok } */
diff --git a/gcc/testsuite/gcc.target/arm/bfloat16_vector_typecheck_1.c b/gcc/testsuite/gcc.target/arm/bfloat16_vector_typecheck_1.c
index f3c350b4c..52e3ac031 100644
--- a/gcc/testsuite/gcc.target/arm/bfloat16_vector_typecheck_1.c
+++ b/gcc/testsuite/gcc.target/arm/bfloat16_vector_typecheck_1.c
@@ -1,4 +1,4 @@
-/* { dg-do assemble { target { arm*-*-* } } } */
+/* { dg-do assemble { target { arm*-*-*eabihf* } } } */
 /* { dg-skip-if "" { *-*-* } { "-fno-fat-lto-objects" } } */
 /* { dg-require-effective-target arm_v8_2a_fp16_neon_ok } */
 /* { dg-require-effective-target arm_v8_2a_bf16_neon_ok } */
diff --git a/gcc/testsuite/gcc.target/arm/bfloat16_vector_typecheck_2.c b/gcc/testsuite/gcc.target/arm/bfloat16_vector_typecheck_2.c
index de0ade52c..d10460acf 100644
--- a/gcc/testsuite/gcc.target/arm/bfloat16_vector_typecheck_2.c
+++ b/gcc/testsuite/gcc.target/arm/bfloat16_vector_typecheck_2.c
@@ -1,4 +1,4 @@
-/* { dg-do assemble { target { arm*-*-* } } } */
+/* { dg-do assemble { target { arm*-*-*eabihf* } } } */
 /* { dg-skip-if "" { *-*-* } { "-fno-fat-lto-objects" } } */
 /* { dg-require-effective-target arm_v8_2a_fp16_neon_ok } */
 /* { dg-require-effective-target arm_v8_2a_bf16_neon_ok } */
diff --git a/gcc/testsuite/gcc.target/arm/neon-vceq_p64.c b/gcc/testsuite/gcc.target/arm/neon-vceq_p64.c
index 21a6a78a2..e1ecd94e5 100644
--- a/gcc/testsuite/gcc.target/arm/neon-vceq_p64.c
+++ b/gcc/testsuite/gcc.target/arm/neon-vceq_p64.c
@@ -1,4 +1,5 @@
 /* { dg-do run } */
+/* { dg-options "-Wno-format" } */
 /* { dg-require-effective-target arm_crypto_ok } */
 /* { dg-require-effective-target arm_neon_hw } */
 /* { dg-add-options arm_crypto } */
diff --git a/gcc/testsuite/gcc.target/arm/neon-vtst_p64.c b/gcc/testsuite/gcc.target/arm/neon-vtst_p64.c
index 3a0b117c2..391aa54a6 100644
--- a/gcc/testsuite/gcc.target/arm/neon-vtst_p64.c
+++ b/gcc/testsuite/gcc.target/arm/neon-vtst_p64.c
@@ -1,4 +1,5 @@
 /* { dg-do run } */
+/* { dg-options "-Wno-format" } */
 /* { dg-require-effective-target arm_crypto_ok } */
 /* { dg-require-effective-target arm_neon_hw } */
 /* { dg-add-options arm_crypto } */
diff --git a/gcc/testsuite/gcc.target/arm/simd/vld1_bf16_1.c b/gcc/testsuite/gcc.target/arm/simd/vld1_bf16_1.c
index b6b00dc03..f5791b08d 100644
--- a/gcc/testsuite/gcc.target/arm/simd/vld1_bf16_1.c
+++ b/gcc/testsuite/gcc.target/arm/simd/vld1_bf16_1.c
@@ -1,4 +1,4 @@
-/* { dg-do assemble } */
+/* { dg-do assemble { target { arm*-*-*eabihf* } } } */
 /* { dg-require-effective-target arm_v8_2a_bf16_neon_ok } */
 /* { dg-add-options arm_v8_2a_bf16_neon } */
 /* { dg-additional-options "-save-temps -O2 -mfloat-abi=hard" }  */
diff --git a/gcc/testsuite/gcc.target/arm/simd/vldn_lane_bf16_1.c b/gcc/testsuite/gcc.target/arm/simd/vldn_lane_bf16_1.c
index b235b1f33..8ebca7ae2 100644
--- a/gcc/testsuite/gcc.target/arm/simd/vldn_lane_bf16_1.c
+++ b/gcc/testsuite/gcc.target/arm/simd/vldn_lane_bf16_1.c
@@ -1,4 +1,4 @@
-/* { dg-do assemble } */
+/* { dg-do assemble { target { arm*-*-*eabihf* } } } */
 /* { dg-require-effective-target arm_v8_2a_bf16_neon_ok } */
 /* { dg-add-options arm_v8_2a_bf16_neon } */
 /* { dg-additional-options "-save-temps -O2 -mfloat-abi=hard" }  */
diff --git a/gcc/testsuite/gcc.target/arm/simd/vst1_bf16_1.c b/gcc/testsuite/gcc.target/arm/simd/vst1_bf16_1.c
index 06fb58ecd..cfd6efbc2 100644
--- a/gcc/testsuite/gcc.target/arm/simd/vst1_bf16_1.c
+++ b/gcc/testsuite/gcc.target/arm/simd/vst1_bf16_1.c
@@ -1,4 +1,4 @@
-/* { dg-do assemble } */
+/* { dg-do assemble { target { arm*-*-*eabihf* } } } */
 /* { dg-require-effective-target arm_v8_2a_bf16_neon_ok } */
 /* { dg-add-options arm_v8_2a_bf16_neon } */
 /* { dg-additional-options "-save-temps -O2 -mfloat-abi=hard" }  */
diff --git a/gcc/testsuite/gcc.target/arm/simd/vstn_lane_bf16_1.c b/gcc/testsuite/gcc.target/arm/simd/vstn_lane_bf16_1.c
index 416ae77d1..8b4e11079 100644
--- a/gcc/testsuite/gcc.target/arm/simd/vstn_lane_bf16_1.c
+++ b/gcc/testsuite/gcc.target/arm/simd/vstn_lane_bf16_1.c
@@ -1,4 +1,4 @@
-/* { dg-do assemble } */
+/* { dg-do assemble { target { arm*-*-*eabihf* } } } */
 /* { dg-require-effective-target arm_v8_2a_bf16_neon_ok } */
 /* { dg-add-options arm_v8_2a_bf16_neon } */
 /* { dg-additional-options "-save-temps -O2 -mfloat-abi=hard" }  */
diff --git a/gcc/testsuite/gfortran.dg/ieee/ieee_9.f90 b/gcc/testsuite/gfortran.dg/ieee/ieee_9.f90
deleted file mode 100644
index 5e0ac36f0..000000000
--- a/gcc/testsuite/gfortran.dg/ieee/ieee_9.f90
+++ /dev/null
@@ -1,71 +0,0 @@
-! { dg-do run { xfail arm*-*-gnueabi arm*-*-gnueabihf } }
-! { dg-skip-if "PR89639" { hppa*-*-linux* } }
-program foo
-   use ieee_arithmetic
-   use iso_fortran_env
-   integer i, p
-   real x
-   x = 4
-   i = 4
-
-   if (int8 > 0) then
-      if (real32 > 0) then
-         p = int(ieee_scalb(real(x, real32), int(i, int8)))
-         if (p /= 64) stop 1
-      endif
-      if (real64 > 0) then
-         p = int(ieee_scalb(real(x, real64), int(i, int8)))
-         if (p /= 64) stop 2
-      endif
-      if (real128 > 0) then
-         p = int(ieee_scalb(real(x, real128), int(i, int8)))
-         if (p /= 64) stop 3
-      end if
-   end if
-
-   if (int16 > 0) then
-      if (real32 > 0) then
-         p = int(ieee_scalb(real(x, real32), int(i, int16)))
-         if (p /= 64) stop 4
-      endif
-      if (real64 > 0) then
-         p = int(ieee_scalb(real(x, real64), int(i, int16)))
-         if (p /= 64) stop 5
-      endif
-      if (real128 > 0) then
-         p = int(ieee_scalb(real(x, real128), int(i, int16)))
-         if (p /= 64) stop 6
-      end if
-   end if
-
-   if (int32 > 0) then
-      if (real32 > 0) then
-         p = int(ieee_scalb(real(x, real32), int(i, int32)))
-         if (p /= 64) stop 7
-      endif
-      if (real64 > 0) then
-         p = int(ieee_scalb(real(x, real64), int(i, int32)))
-         if (p /= 64) stop 8
-      endif
-      if (real128 > 0) then
-         p = int(ieee_scalb(real(x, real128), int(i, int32)))
-         if (p /= 64) stop 9
-      end if
-   end if
-
-   if (int64 > 0) then
-      if (real32 > 0) then
-         p = int(ieee_scalb(real(x, real32), int(i, int64)))
-         if (p /= 64) stop 10
-      endif
-      if (real64 > 0) then
-         p = int(ieee_scalb(real(x, real64), int(i, int64)))
-         if (p /= 64) stop 11
-      endif
-      if (real128 > 0) then
-         p = int(ieee_scalb(real(x, real128), int(i, int64)))
-         if (p /= 64) stop 12
-      end if
-   end if
-
-end program foo
