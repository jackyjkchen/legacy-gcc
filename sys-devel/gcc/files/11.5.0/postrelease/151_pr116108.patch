diff --git a/gcc/cp/decl.c b/gcc/cp/decl.c
index 512ec44e9..592538935 100644
--- a/gcc/cp/decl.c
+++ b/gcc/cp/decl.c
@@ -13891,7 +13891,8 @@ grokdeclarator (const cp_declarator *declarator,
 	  }
 	else if (!staticp
 		 && ((current_class_type
-		      && same_type_p (type, current_class_type))
+		      && same_type_p (TYPE_MAIN_VARIANT (type),
+				      current_class_type))
 		     || (!dependent_type_p (type)
 			 && !COMPLETE_TYPE_P (complete_type (type))
 			 && (!complete_or_array_type_p (type)
diff --git a/gcc/testsuite/g++.dg/cpp1z/class-deduction117.C b/gcc/testsuite/g++.dg/cpp1z/class-deduction117.C
new file mode 100644
index 000000000..8ab910183
--- /dev/null
+++ b/gcc/testsuite/g++.dg/cpp1z/class-deduction117.C
@@ -0,0 +1,7 @@
+// PR c++/116108
+// { dg-do compile { target c++11 } }
+template <class T>
+struct S { const S s = 1; };	// { dg-error "field 's' has incomplete type 'const S<T>'" }
+S t{2};				// { dg-error "invalid use of template-name 'S' without an argument list" "" { target c++14_down } }
+// { dg-error "class template argument deduction failed" "" { target c++17 } .-1 }
+// { dg-error "no matching function for call to 'S\\\(int\\\)'" "" { target c++17 } .-2 }
