diff --git a/gcc/cp/decl2.c b/gcc/cp/decl2.c
index f37fea3ae..1de307f86 100644
--- a/gcc/cp/decl2.c
+++ b/gcc/cp/decl2.c
@@ -175,6 +175,8 @@ change_return_type (tree new_ret, tree fntype)
   else
     newtype = build_method_type_directly
       (class_of_this_parm (fntype), new_ret, TREE_CHAIN (args));
+  if (FUNCTION_REF_QUALIFIED (fntype))
+    newtype = build_ref_qualified_type (newtype, type_memfn_rqual (fntype));
   if (raises)
     newtype = build_exception_variant (newtype, raises);
   if (attrs)
diff --git a/gcc/testsuite/g++.dg/cpp1y/pr60943.C b/gcc/testsuite/g++.dg/cpp1y/pr60943.C
new file mode 100644
index 000000000..43857af9a
--- /dev/null
+++ b/gcc/testsuite/g++.dg/cpp1y/pr60943.C
@@ -0,0 +1,16 @@
+// { dg-options "-std=c++14" }
+
+struct A {
+  auto f() & {}
+  auto f() && {}
+};
+
+void Foo (A &a)
+{
+  a.f();
+}
+
+void Bar (A &&a)
+{
+  a.f ();
+}
