diff --git a/gcc/cp/decl.c b/gcc/cp/decl.c
index 84f20a1a8..e0ce593a8 100644
--- a/gcc/cp/decl.c
+++ b/gcc/cp/decl.c
@@ -2218,8 +2218,17 @@ duplicate_decls (tree newdecl, tree olddecl, bool newdecl_is_friend)
 	}
       else
 	{
-	  if (DECL_PENDING_INLINE_INFO (newdecl) == 0)
-	    DECL_PENDING_INLINE_INFO (newdecl) = DECL_PENDING_INLINE_INFO (olddecl);
+	  if (DECL_PENDING_INLINE_P (olddecl))
+	    {
+	      DECL_PENDING_INLINE_P (newdecl) = 1;
+	      DECL_PENDING_INLINE_INFO (newdecl)
+		= DECL_PENDING_INLINE_INFO (olddecl);
+	    }
+	  else if (DECL_PENDING_INLINE_P (newdecl))
+	    ;
+	  else if (DECL_SAVED_FUNCTION_DATA (newdecl) == NULL)
+	    DECL_SAVED_FUNCTION_DATA (newdecl)
+	      = DECL_SAVED_FUNCTION_DATA (olddecl);
 
 	  DECL_DECLARED_INLINE_P (newdecl) |= DECL_DECLARED_INLINE_P (olddecl);
 
diff --git a/gcc/cp/friend.c b/gcc/cp/friend.c
index dab674e83..4cc23c614 100644
--- a/gcc/cp/friend.c
+++ b/gcc/cp/friend.c
@@ -148,7 +148,8 @@ add_friend (tree type, tree decl, bool complain)
 	      if (decl == TREE_VALUE (friends))
 		{
 		  if (complain)
-		    warning (0, "%qD is already a friend of class %qT",
+		    warning (OPT_Wredundant_decls,
+			     "%qD is already a friend of class %qT",
 			     decl, type);
 		  return;
 		}
@@ -376,7 +377,8 @@ make_friend_class (tree type, tree friend_type, bool complain)
 	  if (friend_type == probe)
 	    {
 	      if (complain)
-		warning (0, "%qD is already a friend of %qT", probe, type);
+		warning (OPT_Wredundant_decls,
+			 "%qD is already a friend of %qT", probe, type);
 	      break;
 	    }
 	}
@@ -385,7 +387,8 @@ make_friend_class (tree type, tree friend_type, bool complain)
 	  if (same_type_p (probe, friend_type))
 	    {
 	      if (complain)
-		warning (0, "%qT is already a friend of %qT", probe, type);
+		warning (OPT_Wredundant_decls,
+			 "%qT is already a friend of %qT", probe, type);
 	      break;
 	    }
 	}
diff --git a/gcc/testsuite/g++.dg/other/friend6.C b/gcc/testsuite/g++.dg/other/friend6.C
new file mode 100644
index 000000000..851cd2523
--- /dev/null
+++ b/gcc/testsuite/g++.dg/other/friend6.C
@@ -0,0 +1,15 @@
+// PR c++/27100
+// This used to fail at link time with an "undefined reference to 'foo'" error.
+// { dg-do run }
+
+struct A
+{
+  friend void foo (const A&) { }
+  friend void foo (const A&);
+};
+
+int
+main ()
+{
+  foo (A ());
+}
