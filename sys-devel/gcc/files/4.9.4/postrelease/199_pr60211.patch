diff --git a/gcc/cp/parser.c b/gcc/cp/parser.c
index 1233720e7..823e88c1b 100644
--- a/gcc/cp/parser.c
+++ b/gcc/cp/parser.c
@@ -31764,6 +31764,12 @@ cp_parser_pragma (cp_parser *parser, enum pragma_context context)
 
     case PRAGMA_IVDEP:
       {
+	if (context == pragma_external)
+	  {
+	    error_at (pragma_tok->location,
+		      "%<#pragma GCC ivdep%> must be inside a function");
+	    break;
+	  }
 	cp_parser_skip_to_pragma_eol (parser, pragma_tok);
 	cp_token *tok;
 	tok = cp_lexer_peek_token (the_parser->lexer);
diff --git a/gcc/testsuite/g++.dg/parse/ivdep-2.C b/gcc/testsuite/g++.dg/parse/ivdep-2.C
new file mode 100644
index 000000000..2b90109a8
--- /dev/null
+++ b/gcc/testsuite/g++.dg/parse/ivdep-2.C
@@ -0,0 +1,9 @@
+// PR c++/60211
+
+void foo()
+{}
+  int i;
+#pragma GCC ivdep  // { dg-error "must be inside a function" }
+  for (i = 0; i < 2; ++i)  // { dg-error "expected|type" }
+    ;
+}  // { dg-error "expected" }
diff --git a/gcc/testsuite/g++.dg/parse/ivdep-3.C b/gcc/testsuite/g++.dg/parse/ivdep-3.C
new file mode 100644
index 000000000..6d8541e36
--- /dev/null
+++ b/gcc/testsuite/g++.dg/parse/ivdep-3.C
@@ -0,0 +1,8 @@
+// PR c++/60211
+
+void foo()
+{}
+#pragma GCC ivdep  // { dg-error "must be inside a function" }
+  for (int i = 0; i < 2; ++i)  // { dg-error "expected|type" }
+    ;
+}  // { dg-error "expected" }
