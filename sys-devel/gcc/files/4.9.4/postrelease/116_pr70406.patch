diff --git a/gcc/config/i386/i386.md b/gcc/config/i386/i386.md
index 97a4f1087..ec3e7b5d7 100644
--- a/gcc/config/i386/i386.md
+++ b/gcc/config/i386/i386.md
@@ -7708,10 +7708,10 @@
    (clobber (reg:CC FLAGS_REG))]
   "TARGET_AVX512F && !TARGET_BMI && reload_completed"
   [(set (match_dup 0)
-	(not:HI (match_dup 0)))
+	(not:SWI12 (match_dup 0)))
    (parallel [(set (match_dup 0)
-		   (and:HI (match_dup 0)
-			   (match_dup 1)))
+		   (and:SWI12 (match_dup 0)
+			      (match_dup 1)))
 	      (clobber (reg:CC FLAGS_REG))])])
 
 ;; Turn *anddi_1 into *andsi_1_zext if possible.
diff --git a/gcc/testsuite/gcc.target/i386/pr70406.c b/gcc/testsuite/gcc.target/i386/pr70406.c
new file mode 100644
index 000000000..b75a5af45
--- /dev/null
+++ b/gcc/testsuite/gcc.target/i386/pr70406.c
@@ -0,0 +1,13 @@
+/* { dg-do compile } */
+/* { dg-require-effective-target ia32 } */
+/* { dg-options "-O -mtune=pentium2 -mavx512f" } */
+
+typedef int v4si __attribute__ ((vector_size (16)));
+
+unsigned
+foo (unsigned char i, unsigned x, v4si u, v4si v, v4si w)
+{
+  i &= (unsigned)~x;
+  v <<= w[x];
+  return i + u[x] + v[i];
+}
