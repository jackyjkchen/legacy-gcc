diff --git a/gcc/cp/pt.c b/gcc/cp/pt.c
index bef7ca2d2..17535b0fe 100644
--- a/gcc/cp/pt.c
+++ b/gcc/cp/pt.c
@@ -10757,6 +10757,14 @@ instantiate_class_template_1 (tree type)
 			      cxx_incomplete_type_error (r, rtype);
 			      TREE_TYPE (r) = error_mark_node;
 			    }
+			  else if (TREE_CODE (rtype) == ARRAY_TYPE
+				   && TYPE_DOMAIN (rtype) == NULL_TREE
+				   && (TREE_CODE (type) == UNION_TYPE
+				       || TREE_CODE (type) == QUAL_UNION_TYPE))
+			    {
+			      error ("flexible array member %qD in union", r);
+			      TREE_TYPE (r) = error_mark_node;
+			    }
 			}
 
 		      /* If it is a TYPE_DECL for a class-scoped ENUMERAL_TYPE,
diff --git a/gcc/testsuite/g++.dg/ext/flexary30.C b/gcc/testsuite/g++.dg/ext/flexary30.C
new file mode 100644
index 000000000..59b758759
--- /dev/null
+++ b/gcc/testsuite/g++.dg/ext/flexary30.C
@@ -0,0 +1,8 @@
+// PR c++/85285
+
+template<typename T> union A
+{
+  T x;				// { dg-error "flexible array" }
+};
+
+A<int[]> a;
