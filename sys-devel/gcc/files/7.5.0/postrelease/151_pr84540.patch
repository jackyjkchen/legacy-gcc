diff --git a/gcc/cp/pt.c b/gcc/cp/pt.c
index 1e634ab55..62822e0f9 100644
--- a/gcc/cp/pt.c
+++ b/gcc/cp/pt.c
@@ -10250,9 +10250,8 @@ tsubst_attributes (tree attributes, tree args,
 	    if (subst != t)
 	      {
 		*p = subst;
-		do
+		while (*p)
 		  p = &TREE_CHAIN (*p);
-		while (*p);
 		*p = TREE_CHAIN (t);
 		continue;
 	      }
@@ -10319,9 +10318,8 @@ apply_late_template_attributes (tree *decl_p, tree attributes, int attr_flags,
 	      *p = TREE_CHAIN (t);
 	      TREE_CHAIN (t) = NULL_TREE;
 	      *q = tsubst_attribute (t, decl_p, args, complain, in_decl);
-	      do
+	      while (*q)
 		q = &TREE_CHAIN (*q);
-	      while (*q);
 	    }
 	  else
 	    p = &TREE_CHAIN (t);
diff --git a/gcc/testsuite/g++.dg/cpp0x/alignas14.C b/gcc/testsuite/g++.dg/cpp0x/alignas14.C
new file mode 100644
index 000000000..498e9754d
--- /dev/null
+++ b/gcc/testsuite/g++.dg/cpp0x/alignas14.C
@@ -0,0 +1,6 @@
+// PR c++/84540
+// { dg-do compile { target c++11 } }
+
+template<typename... T> struct alignas(alignof(T)...) A {};
+
+A<> a;
diff --git a/gcc/testsuite/g++.dg/cpp0x/alignas15.C b/gcc/testsuite/g++.dg/cpp0x/alignas15.C
new file mode 100644
index 000000000..7244dce5b
--- /dev/null
+++ b/gcc/testsuite/g++.dg/cpp0x/alignas15.C
@@ -0,0 +1,6 @@
+// PR c++/84540
+// { dg-do compile { target c++11 } }
+
+template<typename... T> struct A { enum alignas(alignof(T)...) E {}; };
+
+A<> a;
