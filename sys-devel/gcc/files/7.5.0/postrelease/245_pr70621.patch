diff --git a/gcc/cp/decl.c b/gcc/cp/decl.c
index 49580fd5d..93b51a47a 100644
--- a/gcc/cp/decl.c
+++ b/gcc/cp/decl.c
@@ -5098,11 +5098,12 @@ start_decl (const cp_declarator *declarator,
 		 about this situation, and so we check here.  */
 	      if (initialized && DECL_INITIALIZED_IN_CLASS_P (field))
 		error ("duplicate initialization of %qD", decl);
-	      if (duplicate_decls (decl, field, /*newdecl_is_friend=*/false))
+	      field = duplicate_decls (decl, field,
+				       /*newdecl_is_friend=*/false);
+	      if (field == error_mark_node)
+		return error_mark_node;
+	      else if (field)
 		decl = field;
-              if (decl_spec_seq_has_spec_p (declspecs, ds_constexpr)
-                  && !DECL_DECLARED_CONSTEXPR_P (field))
-                error ("%qD declared %<constexpr%> outside its class", field);
 	    }
 	}
       else
diff --git a/gcc/testsuite/g++.dg/torture/pr70621.C b/gcc/testsuite/g++.dg/torture/pr70621.C
new file mode 100644
index 000000000..63eb92805
--- /dev/null
+++ b/gcc/testsuite/g++.dg/torture/pr70621.C
@@ -0,0 +1,13 @@
+float foo();
+
+struct A
+{
+  static float x;  // { dg-message "previous declaration" }
+};
+
+double A::x = foo();  // { dg-error "conflicting declaration" }
+
+void bar()
+{
+  A::x = 0;
+}
