diff --git a/gcc/cp/decl.c b/gcc/cp/decl.c
index d649cf8a2..16e408b01 100644
--- a/gcc/cp/decl.c
+++ b/gcc/cp/decl.c
@@ -11737,15 +11737,16 @@ grokdeclarator (const cp_declarator *declarator,
       if (reqs)
 	error_at (location_of (reqs), "requires-clause on typedef");
 
+      if (id_declarator && declarator->u.id.qualifying_scope)
+	{
+	  error ("typedef name may not be a nested-name-specifier");
+	  type = error_mark_node;
+	}
+
       if (decl_context == FIELD)
 	decl = build_lang_decl (TYPE_DECL, unqualified_id, type);
       else
 	decl = build_decl (input_location, TYPE_DECL, unqualified_id, type);
-      if (id_declarator && declarator->u.id.qualifying_scope) {
-	error_at (DECL_SOURCE_LOCATION (decl), 
-		  "typedef name may not be a nested-name-specifier");
-	TREE_TYPE (decl) = error_mark_node;
-      }
 
       if (decl_context != FIELD)
 	{
diff --git a/gcc/testsuite/g++.dg/other/pr84792-1.C b/gcc/testsuite/g++.dg/other/pr84792-1.C
new file mode 100644
index 000000000..23df8ae18
--- /dev/null
+++ b/gcc/testsuite/g++.dg/other/pr84792-1.C
@@ -0,0 +1,6 @@
+struct A {};
+
+typedef struct
+{
+  virtual void foo() {}
+} A::B;  // { dg-error "typedef" }
diff --git a/gcc/testsuite/g++.dg/other/pr84792-2.C b/gcc/testsuite/g++.dg/other/pr84792-2.C
new file mode 100644
index 000000000..a393d5771
--- /dev/null
+++ b/gcc/testsuite/g++.dg/other/pr84792-2.C
@@ -0,0 +1,6 @@
+struct A {};
+
+typedef struct
+{
+  void foo() {}
+} A::B;  // { dg-error "typedef" }
