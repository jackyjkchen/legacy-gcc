diff --git a/gcc/fortran/match.c b/gcc/fortran/match.c
index 0200366d4..df50a5e6b 100644
--- a/gcc/fortran/match.c
+++ b/gcc/fortran/match.c
@@ -1362,6 +1362,9 @@ gfc_match_assignment (void)
 
   gfc_check_do_variable (lvalue->symtree);
 
+  if (lvalue->ts.type == BT_CLASS)
+    gfc_find_vtab (&rvalue->ts);
+
   return MATCH_YES;
 }
 
diff --git a/gcc/testsuite/gfortran.dg/class_assign_2.f90 b/gcc/testsuite/gfortran.dg/class_assign_2.f90
new file mode 100644
index 000000000..3b8db4ade
--- /dev/null
+++ b/gcc/testsuite/gfortran.dg/class_assign_2.f90
@@ -0,0 +1,22 @@
+! { dg-do link }
+!
+! PR 86484:[OOP] Undefined symbol when using polymorphic intrinsic assignment
+!
+! Contributed by Rich Townsend <townsend@astro.wisc.edu>
+
+program test_assign
+
+  implicit none
+
+  type :: foo_t
+  end type
+
+  type, extends (foo_t) :: bar_t
+  end type
+
+  class(foo_t), allocatable :: f
+  type(bar_t)               :: b
+
+  f = b
+
+end
diff --git a/gcc/testsuite/gfortran.dg/class_assign_3.f90 b/gcc/testsuite/gfortran.dg/class_assign_3.f90
new file mode 100644
index 000000000..e51651e6a
--- /dev/null
+++ b/gcc/testsuite/gfortran.dg/class_assign_3.f90
@@ -0,0 +1,9 @@
+! { dg-do link }
+!
+! PR 84543: undefined reference to __copy_INTEGER_4_.3788
+!
+! Contributed by Neil Carlson <neil.n.carlson@gmail.com>
+
+class(*), allocatable :: x
+x = 42
+end
