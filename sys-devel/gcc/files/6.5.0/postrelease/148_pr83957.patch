diff --git a/gcc/omp-low.c b/gcc/omp-low.c
index 304cde821..dff1b5b39 100644
--- a/gcc/omp-low.c
+++ b/gcc/omp-low.c
@@ -9185,6 +9185,9 @@ expand_omp_for_generic (struct omp_region *region,
 	      gphi *nphi;
 	      gphi *exit_phi = psi.phi ();
 
+	      if (virtual_operand_p (gimple_phi_result (exit_phi)))
+		continue;
+
 	      edge l2_to_l3 = find_edge (l2_bb, l3_bb);
 	      tree exit_res = PHI_ARG_DEF_FROM_EDGE (exit_phi, l2_to_l3);
 
@@ -9207,7 +9210,7 @@ expand_omp_for_generic (struct omp_region *region,
 	      add_phi_arg (nphi, exit_res, l2_to_l0, UNKNOWN_LOCATION);
 
 	      add_phi_arg (inner_phi, new_res, l0_to_l1, UNKNOWN_LOCATION);
-	    };
+	    }
 	}
 
       set_immediate_dominator (CDI_DOMINATORS, l2_bb,
diff --git a/gcc/testsuite/gcc.dg/autopar/pr83957.c b/gcc/testsuite/gcc.dg/autopar/pr83957.c
new file mode 100644
index 000000000..7d13ee19c
--- /dev/null
+++ b/gcc/testsuite/gcc.dg/autopar/pr83957.c
@@ -0,0 +1,11 @@
+/* PR tree-optimization/83957 */
+/* { dg-do compile } */
+/* { dg-options "-O1 -ftree-parallelize-loops=2 -fno-tree-dce --param parloops-schedule=dynamic" } */
+
+void
+foo (int *x, int y)
+{
+  if (y < 0)
+    for (; y < 1; ++y)
+      x = &y;
+}
