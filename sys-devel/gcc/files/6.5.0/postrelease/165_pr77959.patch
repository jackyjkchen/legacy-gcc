diff --git a/gcc/expr.c b/gcc/expr.c
index 60fd8d6e0..decf93f6b 100644
--- a/gcc/expr.c
+++ b/gcc/expr.c
@@ -9852,6 +9852,19 @@ expand_expr_real_1 (tree exp, rtx target, machine_mode tmode,
       }
 
     case CONST_DECL:
+      if (modifier == EXPAND_WRITE)
+	{
+	  /* Writing into CONST_DECL is always invalid, but handle it
+	     gracefully.  */
+	  addr_space_t as = TYPE_ADDR_SPACE (TREE_TYPE (exp));
+	  machine_mode address_mode = targetm.addr_space.address_mode (as);
+	  op0 = expand_expr_addr_expr_1 (exp, NULL_RTX, address_mode,
+					 EXPAND_NORMAL, as);
+	  op0 = memory_address_addr_space (mode, op0, as);
+	  temp = gen_rtx_MEM (mode, op0);
+	  set_mem_addr_space (temp, as);
+	  return temp;
+	}
       return expand_expr (DECL_INITIAL (exp), target, VOIDmode, modifier);
 
     case REAL_CST:
diff --git a/gcc/testsuite/gfortran.dg/pr77959.f90 b/gcc/testsuite/gfortran.dg/pr77959.f90
new file mode 100644
index 000000000..36754a0bd
--- /dev/null
+++ b/gcc/testsuite/gfortran.dg/pr77959.f90
@@ -0,0 +1,16 @@
+! PR middle-end/77959
+! { dg-do compile }
+! { dg-options "-O2" }
+
+program pr77959
+  interface
+    subroutine foo(x)  ! { dg-warning "Type mismatch in argument" }
+      real :: x
+    end
+  end interface
+  call foo(1.0)
+end
+subroutine foo(x)
+  complex :: x
+  x = x + 1
+end
