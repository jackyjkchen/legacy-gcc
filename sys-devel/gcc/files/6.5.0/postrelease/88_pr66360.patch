diff --git a/gcc/cp/pt.c b/gcc/cp/pt.c
index 08f06dbba..60967299b 100644
--- a/gcc/cp/pt.c
+++ b/gcc/cp/pt.c
@@ -13979,6 +13979,8 @@ tsubst_init (tree init, tree decl, tree args,
 			       complain);
       if (TREE_CODE (init) == AGGR_INIT_EXPR)
 	init = get_target_expr_sfinae (init, complain);
+      if (TREE_CODE (init) == TARGET_EXPR)
+	TARGET_EXPR_DIRECT_INIT_P (init) = true;
     }
 
   return init;
diff --git a/gcc/testsuite/g++.dg/cpp0x/variadic-init2.C b/gcc/testsuite/g++.dg/cpp0x/variadic-init2.C
new file mode 100644
index 000000000..8d5228c93
--- /dev/null
+++ b/gcc/testsuite/g++.dg/cpp0x/variadic-init2.C
@@ -0,0 +1,20 @@
+// { dg-do compile { target c++11 } }
+
+struct MoveOnly {
+  MoveOnly() = default;
+  MoveOnly(MoveOnly const&) = delete;
+  MoveOnly(MoveOnly&&) = default;
+};
+
+struct StoresMoveOnly {
+  StoresMoveOnly() {}
+  ~StoresMoveOnly() = default;
+    
+  MoveOnly value;
+};
+
+template <class ...Args> void test(Args... args) {
+  StoresMoveOnly s(args...);
+}
+
+int main() { test(); }
