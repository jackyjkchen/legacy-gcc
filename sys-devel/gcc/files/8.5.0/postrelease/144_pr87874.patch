diff --git a/gcc/lra.c b/gcc/lra.c
index 65ea4536a..274afa0e0 100644
--- a/gcc/lra.c
+++ b/gcc/lra.c
@@ -1937,7 +1937,7 @@ lra_substitute_pseudo (rtx *loc, int old_regno, rtx new_reg, bool subreg_p,
       machine_mode inner_mode = GET_MODE (new_reg);
 
       if (mode != inner_mode
-	  && ! (CONST_INT_P (new_reg) && SCALAR_INT_MODE_P (mode)))
+	  && ! (CONST_SCALAR_INT_P (new_reg) && SCALAR_INT_MODE_P (mode)))
 	{
 	  poly_uint64 offset = 0;
 	  if (partial_subreg_p (mode, inner_mode)
diff --git a/gcc/testsuite/gcc.dg/pr87874.c b/gcc/testsuite/gcc.dg/pr87874.c
new file mode 100644
index 000000000..3ab5dcf68
--- /dev/null
+++ b/gcc/testsuite/gcc.dg/pr87874.c
@@ -0,0 +1,35 @@
+/* { dg-do compile } */
+/* { dg-options "-g -O1 -fgcse -fno-dce -fno-tree-ccp -fno-tree-coalesce-vars -fno-tree-copy-prop -fno-tree-dce -fno-tree-dominator-opts -fno-tree-fre -fno-tree-loop-optimize -fno-tree-sink" } */
+
+int *vk;
+int m2;
+#if __SIZEOF_INT128__
+__int128 nb;
+
+void
+em (int u5, int fo, int s7)
+{
+  for (;;)
+    {
+      long int es;
+
+      es = !!u5 ? (!!fo && !!m2) : fo;
+      if (es == 0)
+        if (nb == *vk)
+          {
+            const unsigned long int uint64_max = 18446744073709551615ul;
+            __int128 ks = uint64_max / 2 + 1;
+
+            while (s7 < 1)
+              while (nb < 2)
+                {
+                  for (ks = 0; ks < 3; ++ks)
+                    {
+                    }
+
+                  ++nb;
+                }
+          }
+    }
+}
+#endif
