diff --git a/gcc/expr.c b/gcc/expr.c
index c7f64954..de8ddbf0 100644
--- a/gcc/expr.c
+++ b/gcc/expr.c
@@ -7364,7 +7364,8 @@ expand_expr_real_1 (tree exp, rtx target, enum machine_mode tmode,
 	  return REDUCE_BIT_FIELD (op0);
 	}
 
-      op0 = expand_expr (TREE_OPERAND (exp, 0), NULL_RTX, mode, modifier);
+      op0 = expand_expr (TREE_OPERAND (exp, 0), NULL_RTX, mode,
+			 modifier == EXPAND_SUM ? EXPAND_NORMAL : modifier);
       if (GET_MODE (op0) == mode)
 	;
 
diff --git a/gcc/testsuite/gcc.dg/pr29250.c b/gcc/testsuite/gcc.dg/pr29250.c
new file mode 100644
index 00000000..b7bc0663
--- /dev/null
+++ b/gcc/testsuite/gcc.dg/pr29250.c
@@ -0,0 +1,29 @@
+/* { dg-do compile } */
+/* { dg-options "-O1 -fPIC" } */
+
+struct TSparseEntry
+{
+ int feat_index;
+ double entry;
+};
+struct TSparse
+{
+ int vec_index;
+ int num_feat_entries;
+ struct TSparseEntry* features;
+};
+void
+get_full_feature_matrix(struct TSparse* sparse_feature_matrix, int num_vec)
+{
+   double* fm;
+   int v, f;
+   for (v=0; v<num_vec; v++)
+    {
+     for (f=0; f<sparse_feature_matrix[v].num_feat_entries; f++)
+     {
+      long long offs = sparse_feature_matrix[v].vec_index 
+           + sparse_feature_matrix[v].features[f].feat_index;
+      fm[offs]= sparse_feature_matrix[v].features[f].entry;
+     }
+    }
+}
