diff --git a/gcc/cp/decl.c b/gcc/cp/decl.c
index c1a03a7d..8d73dc7d 100644
--- a/gcc/cp/decl.c
+++ b/gcc/cp/decl.c
@@ -7607,8 +7607,10 @@ grokdeclarator (const cp_declarator *declarator,
 	decl = build_lang_decl (TYPE_DECL, unqualified_id, type);
       else
 	decl = build_decl (TYPE_DECL, unqualified_id, type);
-      if (id_declarator && declarator->u.id.qualifying_scope)
+      if (id_declarator && declarator->u.id.qualifying_scope) {
 	error ("%Jtypedef name may not be a nested-name-specifier", decl);
+	TREE_TYPE (decl) = error_mark_node;
+      }
 
       if (decl_context != FIELD)
 	{
diff --git a/gcc/testsuite/g++.dg/parse/error32.C b/gcc/testsuite/g++.dg/parse/error32.C
new file mode 100644
index 00000000..aad961bc
--- /dev/null
+++ b/gcc/testsuite/g++.dg/parse/error32.C
@@ -0,0 +1,12 @@
+/* PR c++/37555 */
+/* { dg-do "compile" } */
+
+struct A {};
+
+typedef void (A::T)(); /* { dg-error "typedef name may not be a nested-name-specifier" } */
+
+void foo()
+{
+  T t;
+  t; /* { dg-error "was not declared" } */
+}
