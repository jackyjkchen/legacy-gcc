diff --git a/bi-arity.c b/bi-arity.c
index ea1f3e1..91d09a3 100644
--- a/bi-arity.c
+++ b/bi-arity.c
@@ -57,7 +57,7 @@ main ()
       }
 
   fflush (stdout);
-  exit (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);
+  _exit (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);
   /* NOTREACHED */
   return 0;
 }
@@ -74,7 +74,7 @@ xmalloc (nbytes)
   if (!tmp)
     {
       fprintf (stderr, "can't allocate %d bytes (out of virtual memory)\n", nbytes);
-      exit (FATAL_EXIT_CODE);
+      _exit (FATAL_EXIT_CODE);
     }
 
   return tmp;
@@ -87,5 +87,5 @@ void
 fancy_abort ()
 {
   fprintf (stderr, "Internal gcc abort.\n");
-  exit (FATAL_EXIT_CODE);
+  _exit (FATAL_EXIT_CODE);
 }
diff --git a/bi-lexer.c b/bi-lexer.c
index 0ec0b1d..a22a186 100644
--- a/bi-lexer.c
+++ b/bi-lexer.c
@@ -35,7 +35,7 @@ xmalloc (nbytes)
   if (!tmp)
     {
       fprintf (stderr, "can't allocate %d bytes (out of virtual memory)\n", nbytes);
-      exit (FATAL_EXIT_CODE);
+      _exit (FATAL_EXIT_CODE);
     }
 
   return tmp;
@@ -57,7 +57,7 @@ xrealloc (block, nbytes)
   if (!tmp)
     {
       fprintf (stderr, "can't reallocate %d bytes (out of virtual memory)\n", nbytes);
-      exit (FATAL_EXIT_CODE);
+      _exit (FATAL_EXIT_CODE);
     }
 
   return tmp;
diff --git a/bi-opcode.c b/bi-opcode.c
index 795bb6f..5ef157f 100644
--- a/bi-opcode.c
+++ b/bi-opcode.c
@@ -55,7 +55,7 @@ main(argc, argv)
     fprintf (stderr, "(Number of opcodes is %d)\n", i);
 
   fflush (stdout);
-  exit (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);
+  _exit (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);
   /* NOTREACHED */
   return 0;
 }
@@ -72,7 +72,7 @@ xmalloc (nbytes)
   if (!tmp)
     {
       fprintf (stderr, "can't allocate %d bytes (out of virtual memory)\n", nbytes);
-      exit (FATAL_EXIT_CODE);
+      _exit (FATAL_EXIT_CODE);
     }
 
   return tmp;
@@ -85,5 +85,5 @@ void
 fancy_abort ()
 {
   fprintf (stderr, "Internal gcc abort.\n");
-  exit (FATAL_EXIT_CODE);
+  _exit (FATAL_EXIT_CODE);
 }
diff --git a/bi-opname.c b/bi-opname.c
index 2f41dd2..854e920 100644
--- a/bi-opname.c
+++ b/bi-opname.c
@@ -36,7 +36,7 @@ main()
       printf("\"%s%s\",\n", d->basename, v->name);
 
   fflush (stdout);
-  exit (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);
+  _exit (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);
   /* NOTREACHED */
   return 0;
 }
@@ -53,7 +53,7 @@ xmalloc (nbytes)
   if (!tmp)
     {
       fprintf (stderr, "can't allocate %d bytes (out of virtual memory)\n", nbytes);
-      exit (FATAL_EXIT_CODE);
+      _exit (FATAL_EXIT_CODE);
     }
 
   return tmp;
@@ -66,5 +66,5 @@ void
 fancy_abort ()
 {
   fprintf (stderr, "Internal gcc abort.\n");
-  exit (FATAL_EXIT_CODE);
+  _exit (FATAL_EXIT_CODE);
 }
diff --git a/bi-parser.c b/bi-parser.c
index f673fc6..c88cc9c 100644
--- a/bi-parser.c
+++ b/bi-parser.c
@@ -964,5 +964,5 @@ yyerror (s)
      char *s;
 {
   fprintf (stderr, "syntax error in input\n");
-  exit (FATAL_EXIT_CODE);
+  _exit (FATAL_EXIT_CODE);
 }
diff --git a/bi-parser.y b/bi-parser.y
index 0a03d0f..aa80d48 100644
--- a/bi-parser.y
+++ b/bi-parser.y
@@ -165,5 +165,5 @@ yyerror (s)
      char *s;
 {
   fprintf (stderr, "syntax error in input\n");
-  exit (FATAL_EXIT_CODE);
+  _exit (FATAL_EXIT_CODE);
 }
diff --git a/cccp.c b/cccp.c
index 28ff4ca..37fceaf 100644
--- a/cccp.c
+++ b/cccp.c
@@ -2200,8 +2200,8 @@ main (argc, argv)
     fatal ("I/O error on output");
 
   if (errors)
-    exit (FATAL_EXIT_CODE);
-  exit (SUCCESS_EXIT_CODE);
+    _exit (FATAL_EXIT_CODE);
+  _exit (SUCCESS_EXIT_CODE);
 
  perror:
   pfatal_with_name (in_fname);
@@ -10062,7 +10062,7 @@ fatal (PRINTF_ALIST (msg))
   vfprintf (stderr, msg, args);
   va_end (args);
   fprintf (stderr, "\n");
-  exit (FATAL_EXIT_CODE);
+  _exit (FATAL_EXIT_CODE);
 }
 
 /* More 'friendly' abort that prints the line and file.
@@ -10088,9 +10088,9 @@ pfatal_with_name (name)
 {
   perror_with_name (name);
 #ifdef VMS
-  exit (vaxc$errno);
+  _exit (vaxc$errno);
 #else
-  exit (FATAL_EXIT_CODE);
+  _exit (FATAL_EXIT_CODE);
 #endif
 }
 
diff --git a/collect2.c b/collect2.c
index 7730ecc..caac321 100644
--- a/collect2.c
+++ b/collect2.c
@@ -384,7 +384,7 @@ collect_exit (status)
   if (status != 0 && output_file != 0 && output_file[0])
     maybe_unlink (output_file);
 
-  exit (status);
+  _exit (status);
 }
 
 
diff --git a/cplus-dem.c b/cplus-dem.c
index ad4116b..d0f0898 100644
--- a/cplus-dem.c
+++ b/cplus-dem.c
@@ -3112,7 +3112,7 @@ Usage: %s [-_] [-n] [-s {gnu,lucid,arm}] [--strip-underscores]\n\
       [--no-strip-underscores] [--format={gnu,lucid,arm}]\n\
       [--help] [--version] [arg...]\n",
 	   program_name);
-  exit (status);
+  _exit (status);
 }
 
 #define MBUF_SIZE 512
@@ -3168,7 +3168,7 @@ main (argc, argv)
 	  break;
 	case 'v':
 	  printf ("GNU %s version %s\n", program_name, program_version);
-	  exit (0);
+	  _exit (0);
 	case '_':
 	  strip_underscore = 1;
 	  break;
@@ -3192,7 +3192,7 @@ main (argc, argv)
 	    {
 	      fprintf (stderr, "%s: unknown demangling style `%s'\n",
 		       program_name, optarg);
-	      exit (1);
+	      _exit (1);
 	    }
 	  break;
 	}
@@ -3252,7 +3252,7 @@ main (argc, argv)
 	}
     }
 
-  exit (0);
+  _exit (0);
 }
 
 static void
@@ -3260,7 +3260,7 @@ fatal (str)
      char *str;
 {
   fprintf (stderr, "%s: %s\n", program_name, str);
-  exit (1);
+  _exit (1);
 }
 
 char * malloc ();
diff --git a/cppalloc.c b/cppalloc.c
index 79d4c9b..cc5b2d3 100644
--- a/cppalloc.c
+++ b/cppalloc.c
@@ -30,7 +30,7 @@ static void
 memory_full ()
 {
   fprintf (stderr, "%s: Memory exhausted.\n", progname);
-  exit (FATAL_EXIT_CODE);
+  _exit (FATAL_EXIT_CODE);
 }
 
 char *
diff --git a/cpperror.c b/cpperror.c
index 0cf24b9..975a584 100644
--- a/cpperror.c
+++ b/cpperror.c
@@ -129,8 +129,8 @@ cpp_pfatal_with_name (pfile, name)
 {
   cpp_perror_with_name (pfile, name);
 #ifdef VMS
-  exit (vaxc$errno);
+  _exit (vaxc$errno);
 #else
-  exit (FATAL_EXIT_CODE);
+  _exit (FATAL_EXIT_CODE);
 #endif
 }
diff --git a/cppmain.c b/cppmain.c
index 83bbe94..e5e9248 100644
--- a/cppmain.c
+++ b/cppmain.c
@@ -69,12 +69,12 @@ main (argc, argv)
   if (argi < argc && ! CPP_FATAL_ERRORS (&parse_in))
     cpp_fatal (&parse_in, "Invalid option `%s'", argv[argi]);
   if (CPP_FATAL_ERRORS (&parse_in))
-    exit (FATAL_EXIT_CODE);
+    _exit (FATAL_EXIT_CODE);
       
   parse_in.show_column = 1;
 
   if (! cpp_start_read (&parse_in, opts->in_fname))
-    exit (FATAL_EXIT_CODE);
+    _exit (FATAL_EXIT_CODE);
 
   /* Now that we know the input file is valid, open the output.  */
 
@@ -99,6 +99,6 @@ main (argc, argv)
   cpp_finish (&parse_in);
 
   if (parse_in.errors)
-    exit (FATAL_EXIT_CODE);
-  exit (SUCCESS_EXIT_CODE);
+    _exit (FATAL_EXIT_CODE);
+  _exit (SUCCESS_EXIT_CODE);
 }
diff --git a/enquire.c b/enquire.c
index b46c7d3..00fbac2 100644
--- a/enquire.c
+++ b/enquire.c
@@ -613,13 +613,13 @@ int setmode(s) char *s; {
 #endif
 
 Procedure farewell(bugs) int bugs; {
-	if (bugs == 0) exit(0);
+	if (bugs == 0) _exit(0);
 	printf("\n%sFor hints on dealing with the ", co);
 	if (bugs == 1) printf("problem");
 	else printf("%d problems", bugs);
 	printf(" above\n   see the section 'TROUBLESHOOTING' in the file ");
 	printf("%s%s\n", FILENAME, oc);
-	exit(bugs);
+	_exit(bugs);
 }
 
 /* The program has received a signal where it wasn't expecting one */
@@ -633,7 +633,7 @@ char *xmalloc(size) unsigned size; {
 	char *value = (char *)malloc(size);
 	if (value == 0) {
 		fprintf(stderr, "Virtual memory exceeded\n");
-		exit(bugs+1);
+		_exit(bugs+1);
 	}
 	return value;
 }
diff --git a/fix-header.c b/fix-header.c
index 32ab31c..c4c3d75 100644
--- a/fix-header.c
+++ b/fix-header.c
@@ -627,10 +627,10 @@ read_scan_file (in_fname, argc, argv)
   if (i < argc && ! CPP_FATAL_ERRORS (&scan_in))
     cpp_fatal (&scan_in, "Invalid option `%s'", argv[i]);
   if (CPP_FATAL_ERRORS (&scan_in))
-    exit (FATAL_EXIT_CODE);
+    _exit (FATAL_EXIT_CODE);
 
   if (! cpp_start_read (&scan_in, in_fname))
-    exit (FATAL_EXIT_CODE);
+    _exit (FATAL_EXIT_CODE);
   CPP_OPTIONS (&scan_in)->no_line_commands = 1;
 
   scan_decls (&scan_in, argc, argv);
@@ -641,7 +641,7 @@ read_scan_file (in_fname, argc, argv)
     fprintf (stderr, "(%s: %d errors and %d warnings from cpp)\n",
 	     inc_filename, scan_in.errors, warnings);
   if (scan_in.errors)
-    exit (SUCCESS_EXIT_CODE);
+    _exit (SUCCESS_EXIT_CODE);
 
   /* Traditionally, getc and putc are defined in terms of _filbuf and _flsbuf.
      If so, those functions are also required.  */
@@ -706,7 +706,7 @@ read_scan_file (in_fname, argc, argv)
     {
       if (verbose)
 	fprintf (stderr, "%s: OK, nothing needs to be done.\n", inc_filename);
-      exit (SUCCESS_EXIT_CODE);
+      _exit (SUCCESS_EXIT_CODE);
     }
   if (!verbose)
     fprintf (stderr, "%s: fixing %s\n", progname, inc_filename);
@@ -1094,7 +1094,7 @@ main (argc, argv)
     {
       fprintf (stderr, "%s: Usage: foo.h infile.h outfile.h options\n",
 	       progname);
-      exit (FATAL_EXIT_CODE);
+      _exit (FATAL_EXIT_CODE);
     }
 
   inc_filename = argv[1];
@@ -1112,7 +1112,7 @@ main (argc, argv)
 	    {
 	      if (verbose)
 		fprintf (stderr, "%s: ignoring %s\n", progname, inc_filename);
-	      exit (SUCCESS_EXIT_CODE);
+	      _exit (SUCCESS_EXIT_CODE);
 	    }
 	}
 	  
@@ -1175,13 +1175,13 @@ main (argc, argv)
       fprintf (stderr, "%s: Cannot open '%s' for reading -",
 	       progname, argv[2]);
       perror (NULL);
-      exit (FATAL_EXIT_CODE);
+      _exit (FATAL_EXIT_CODE);
     }
   if (fstat (inf_fd, &sbuf) < 0)
     {
       fprintf (stderr, "%s: Cannot get size of '%s' -", progname, argv[2]);
       perror (NULL);
-      exit (FATAL_EXIT_CODE);
+      _exit (FATAL_EXIT_CODE);
     }
   inf_size = sbuf.st_size;
   inf_buffer = (char *) xmalloc (inf_size + 2);
@@ -1198,7 +1198,7 @@ main (argc, argv)
 	{
 	  fprintf (stderr, "%s: Failed to read '%s' -", progname, argv[2]);
 	  perror (NULL);
-	  exit (FATAL_EXIT_CODE);
+	  _exit (FATAL_EXIT_CODE);
 	}
       if (i == 0)
 	{
@@ -1221,7 +1221,7 @@ main (argc, argv)
       fprintf (stderr, "%s: Cannot open '%s' for writing -",
 	       progname, argv[3]);
       perror (NULL);
-      exit (FATAL_EXIT_CODE);
+      _exit (FATAL_EXIT_CODE);
     }
 
   lineno = 1;
@@ -1353,7 +1353,7 @@ fatal (str, arg)
   fprintf (stderr, "%s: %s: ", progname, inc_filename);
   fprintf (stderr, str, arg);
   fprintf (stderr, "\n");
-  exit (FATAL_EXIT_CODE);
+  _exit (FATAL_EXIT_CODE);
 }
 
 void
@@ -1370,5 +1370,5 @@ cpp_pfatal_with_name (pfile, name)
      char *name;
 {
   cpp_perror_with_name (pfile, name);
-  exit (FATAL_EXIT_CODE);
+  _exit (FATAL_EXIT_CODE);
 }
diff --git a/gcc.c b/gcc.c
index c548d7f..e191b80 100644
--- a/gcc.c
+++ b/gcc.c
@@ -2529,12 +2529,12 @@ process_command (argc, argv)
 	  init_spec ();
 	  for (sl = specs; sl; sl = sl->next)
 	    printf ("*%s:\n%s\n\n", sl->name, *(sl->ptr_spec));
-	  exit (0);
+	  _exit (0);
 	}
       else if (! strcmp (argv[i], "-dumpversion"))
 	{
 	  printf ("%s\n", spec_version);
-	  exit (0);
+	  _exit (0);
 	}
       else if (! strcmp (argv[i], "-dumpmachine"))
 	{
@@ -4599,26 +4599,26 @@ main (argc, argv)
       printf ("install: %s%s\n", standard_exec_prefix, machine_suffix);
       printf ("programs: %s\n", build_search_list (&exec_prefixes, "", 0));
       printf ("libraries: %s\n", build_search_list (&startfile_prefixes, "", 0));
-      exit (0);
+      _exit (0);
     }
 
   if (print_file_name)
     {
       printf ("%s\n", find_file (print_file_name));
-      exit (0);
+      _exit (0);
     }
 
   if (print_prog_name)
     {
       char *newname = find_a_file (&exec_prefixes, print_prog_name, X_OK);
       printf ("%s\n", (newname ? newname : print_prog_name));
-      exit (0);
+      _exit (0);
     }
 
   if (print_multi_lib)
     {
       print_multilib_info ();
-      exit (0);
+      _exit (0);
     }
 
   if (print_multi_directory)
@@ -4627,7 +4627,7 @@ main (argc, argv)
 	printf (".\n");
       else
 	printf ("%s\n", multilib_dir);
-      exit (0);
+      _exit (0);
     }
 
   if (verbose_flag)
@@ -4818,7 +4818,7 @@ main (argc, argv)
     delete_failure_queue ();
   delete_temp_files ();
 
-  exit (error_count > 0 ? (signal_count ? 2 : 1) : 0);
+  _exit (error_count > 0 ? (signal_count ? 2 : 1) : 0);
   /* NOTREACHED */
   return 0;
 }
@@ -5044,7 +5044,7 @@ fatal VPROTO((char *format, ...))
   va_end (ap);
   fprintf (stderr, "\n");
   delete_temp_files ();
-  exit (1);
+  _exit (1);
 }
 
 static void
@@ -5076,7 +5076,7 @@ fatal (msg, arg1, arg2)
 {
   error (msg, arg1, arg2);
   delete_temp_files ();
-  exit (1);
+  _exit (1);
 }
 
 static void
diff --git a/gcov.c b/gcov.c
index 2dda0d4..d694d42 100644
--- a/gcov.c
+++ b/gcov.c
@@ -263,7 +263,7 @@ xmalloc (size)
   if (value == 0)
     {
       fprintf (stderr, "error: virtual memory exhausted");
-      exit (FATAL_EXIT_CODE);
+      _exit (FATAL_EXIT_CODE);
     }
   return value;
 }
@@ -275,7 +275,7 @@ void
 fancy_abort ()
 {
   fprintf (stderr, "Internal gcc abort.\n");
-  exit (FATAL_EXIT_CODE);
+  _exit (FATAL_EXIT_CODE);
 }
 
 /* Print a usage message and exit.  */
@@ -284,7 +284,7 @@ static void
 print_usage ()
 {
   fprintf (stderr, "gcov [-b] [-v] [-n] [-l] [-f] [-o OBJDIR] file\n");
-  exit (FATAL_EXIT_CODE);
+  _exit (FATAL_EXIT_CODE);
 }
 
 /* Parse the command line.  */
@@ -402,7 +402,7 @@ open_files ()
   if (bb_file == NULL)
     {
       fprintf (stderr, "Could not open basic block file %s.\n", bb_file_name);
-      exit (FATAL_EXIT_CODE);
+      _exit (FATAL_EXIT_CODE);
     }
 
   /* If none of the functions in the file were executed, then there won't
@@ -419,7 +419,7 @@ open_files ()
     {
       fprintf (stderr, "Could not open program flow graph file %s.\n",
 	       bbg_file_name);
-      exit (FATAL_EXIT_CODE);
+      _exit (FATAL_EXIT_CODE);
     }
 
   /* Check for empty .bbg file.  This indicates that there is no executable
@@ -430,7 +430,7 @@ open_files ()
     {
       fprintf (stderr, "No executable code associated with file %s.\n",
 	       input_file_name);
-      exit (FATAL_EXIT_CODE);
+      _exit (FATAL_EXIT_CODE);
     }
 }
 
diff --git a/gen-protos.c b/gen-protos.c
index 0284c18..16fb317 100644
--- a/gen-protos.c
+++ b/gen-protos.c
@@ -214,5 +214,5 @@ fatal (s)
      char *s;
 {
   fprintf (stderr, "%s: %s\n", "gen-protos", s);
-  exit (FATAL_EXIT_CODE);
+  _exit (FATAL_EXIT_CODE);
 }
diff --git a/genattr.c b/genattr.c
index c351fc5..d8bbbab 100644
--- a/genattr.c
+++ b/genattr.c
@@ -220,7 +220,7 @@ fatal (s, a1, a2)
   fprintf (stderr, "genattr: ");
   fprintf (stderr, s, a1, a2);
   fprintf (stderr, "\n");
-  exit (FATAL_EXIT_CODE);
+  _exit (FATAL_EXIT_CODE);
 }
 
 /* More 'friendly' abort that prints the line and file.
@@ -264,7 +264,7 @@ main (argc, argv)
   if (infile == 0)
     {
       perror (argv[1]);
-      exit (FATAL_EXIT_CODE);
+      _exit (FATAL_EXIT_CODE);
     }
 
   init_rtl ();
@@ -418,7 +418,7 @@ from the machine description file `md'.  */\n\n");
   printf("#define ATTR_FLAG_very_unlikely\t0x20\n");
 
   fflush (stdout);
-  exit (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);
+  _exit (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);
   /* NOTREACHED */
   return 0;
 }
diff --git a/genattrtab.c b/genattrtab.c
index c29f370..99de41f 100644
--- a/genattrtab.c
+++ b/genattrtab.c
@@ -5529,7 +5529,7 @@ fatal (s, a1, a2)
   fprintf (stderr, "genattrtab: ");
   fprintf (stderr, s, a1, a2);
   fprintf (stderr, "\n");
-  exit (FATAL_EXIT_CODE);
+  _exit (FATAL_EXIT_CODE);
 }
 
 /* More 'friendly' abort that prints the line and file.
@@ -5616,7 +5616,7 @@ main (argc, argv)
   if (infile == 0)
     {
       perror (argv[1]);
-      exit (FATAL_EXIT_CODE);
+      _exit (FATAL_EXIT_CODE);
     }
 
   init_rtl ();
@@ -5768,7 +5768,7 @@ from the machine description file `md'.  */\n\n");
   write_const_num_delay_slots ();
 
   fflush (stdout);
-  exit (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);
+  _exit (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);
   /* NOTREACHED */
   return 0;
 }
diff --git a/gencodes.c b/gencodes.c
index 8baf3b8..f943cc9 100644
--- a/gencodes.c
+++ b/gencodes.c
@@ -83,7 +83,7 @@ fatal (s, a1, a2)
   fprintf (stderr, "gencodes: ");
   fprintf (stderr, s, a1, a2);
   fprintf (stderr, "\n");
-  exit (FATAL_EXIT_CODE);
+  _exit (FATAL_EXIT_CODE);
 }
 
 /* More 'friendly' abort that prints the line and file.
@@ -113,7 +113,7 @@ main (argc, argv)
   if (infile == 0)
     {
       perror (argv[1]);
-      exit (FATAL_EXIT_CODE);
+      _exit (FATAL_EXIT_CODE);
     }
 
   init_rtl ();
@@ -155,7 +155,7 @@ from the machine description file `md'.  */\n\n");
   printf ("#endif /* MAX_INSN_CODE */\n");
 
   fflush (stdout);
-  exit (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);
+  _exit (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);
   /* NOTREACHED */
   return 0;
 }
diff --git a/genconfig.c b/genconfig.c
index 7bcf0f2..0ffe070 100644
--- a/genconfig.c
+++ b/genconfig.c
@@ -268,7 +268,7 @@ fatal (s, a1, a2)
   fprintf (stderr, "genconfig: ");
   fprintf (stderr, s, a1, a2);
   fprintf (stderr, "\n");
-  exit (FATAL_EXIT_CODE);
+  _exit (FATAL_EXIT_CODE);
 }
 
 /* More 'friendly' abort that prints the line and file.
@@ -298,7 +298,7 @@ main (argc, argv)
   if (infile == 0)
     {
       perror (argv[1]);
-      exit (FATAL_EXIT_CODE);
+      _exit (FATAL_EXIT_CODE);
     }
 
   init_rtl ();
@@ -352,7 +352,7 @@ from the machine description file `md'.  */\n\n");
     printf ("#define HAVE_lo_sum\n");
 
   fflush (stdout);
-  exit (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);
+  _exit (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);
   /* NOTREACHED */
   return 0;
 }
diff --git a/genemit.c b/genemit.c
index dce0e1e..040d414 100644
--- a/genemit.c
+++ b/genemit.c
@@ -698,7 +698,7 @@ fatal (s, a1, a2)
   fprintf (stderr, "genemit: ");
   fprintf (stderr, s, a1, a2);
   fprintf (stderr, "\n");
-  exit (FATAL_EXIT_CODE);
+  _exit (FATAL_EXIT_CODE);
 }
 
 /* More 'friendly' abort that prints the line and file.
@@ -728,7 +728,7 @@ main (argc, argv)
   if (infile == 0)
     {
       perror (argv[1]);
-      exit (FATAL_EXIT_CODE);
+      _exit (FATAL_EXIT_CODE);
     }
 
   init_rtl ();
@@ -797,7 +797,7 @@ from the machine description file `md'.  */\n\n");
   output_init_mov_optab ();
 
   fflush (stdout);
-  exit (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);
+  _exit (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);
   /* NOTREACHED */
   return 0;
 }
diff --git a/genextract.c b/genextract.c
index b0c0b27..585c666 100644
--- a/genextract.c
+++ b/genextract.c
@@ -371,7 +371,7 @@ fatal (s, a1, a2)
   fprintf (stderr, "genextract: ");
   fprintf (stderr, s, a1, a2);
   fprintf (stderr, "\n");
-  exit (FATAL_EXIT_CODE);
+  _exit (FATAL_EXIT_CODE);
 }
 
 /* More 'friendly' abort that prints the line and file.
@@ -427,7 +427,7 @@ main (argc, argv)
   if (infile == 0)
     {
       perror (argv[1]);
-      exit (FATAL_EXIT_CODE);
+      _exit (FATAL_EXIT_CODE);
     }
 
   init_rtl ();
@@ -552,7 +552,7 @@ from the machine description file `md'.  */\n\n");
   printf ("    }\n}\n");
 
   fflush (stdout);
-  exit (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);
+  _exit (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);
   /* NOTREACHED */
   return 0;
 }
diff --git a/genflags.c b/genflags.c
index f8b3983..96d6fbc 100644
--- a/genflags.c
+++ b/genflags.c
@@ -202,7 +202,7 @@ fatal (s, a1, a2)
   fprintf (stderr, "genflags: ");
   fprintf (stderr, s, a1, a2);
   fprintf (stderr, "\n");
-  exit (FATAL_EXIT_CODE);
+  _exit (FATAL_EXIT_CODE);
 }
 
 /* More 'friendly' abort that prints the line and file.
@@ -238,7 +238,7 @@ main (argc, argv)
   if (infile == 0)
     {
       perror (argv[1]);
-      exit (FATAL_EXIT_CODE);
+      _exit (FATAL_EXIT_CODE);
     }
 
   init_rtl ();
@@ -291,7 +291,7 @@ from the machine description file `md'.  */\n\n");
   printf ("#endif  /* NO_MD_PROTOTYPES */\n");
 
   fflush (stdout);
-  exit (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);
+  _exit (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);
   /* NOTREACHED */
   return 0;
 }
diff --git a/genopinit.c b/genopinit.c
index 1d4c0a4..f27a471 100644
--- a/genopinit.c
+++ b/genopinit.c
@@ -313,7 +313,7 @@ fatal (s, a1, a2)
   fprintf (stderr, "genopinit: ");
   fprintf (stderr, s, a1, a2);
   fprintf (stderr, "\n");
-  exit (FATAL_EXIT_CODE);
+  _exit (FATAL_EXIT_CODE);
 }
 
 /* More 'friendly' abort that prints the line and file.
@@ -345,7 +345,7 @@ main (argc, argv)
   if (infile == 0)
     {
       perror (argv[1]);
-      exit (FATAL_EXIT_CODE);
+      _exit (FATAL_EXIT_CODE);
     }
 
   init_rtl ();
@@ -383,7 +383,7 @@ from the machine description file `md'.  */\n\n");
   printf ("}\n");
 
   fflush (stdout);
-  exit (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);
+  _exit (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);
   /* NOTREACHED */
   return 0;
 }
diff --git a/genoutput.c b/genoutput.c
index 4520267..46eb209 100644
--- a/genoutput.c
+++ b/genoutput.c
@@ -918,7 +918,7 @@ fatal (s, a1, a2, a3, a4)
   fprintf (stderr, "genoutput: ");
   fprintf (stderr, s, a1, a2, a3, a4);
   fprintf (stderr, "\n");
-  exit (FATAL_EXIT_CODE);
+  _exit (FATAL_EXIT_CODE);
 }
 
 /* More 'friendly' abort that prints the line and file.
@@ -959,7 +959,7 @@ main (argc, argv)
   if (infile == 0)
     {
       perror (argv[1]);
-      exit (FATAL_EXIT_CODE);
+      _exit (FATAL_EXIT_CODE);
     }
 
   init_rtl ();
@@ -993,7 +993,7 @@ main (argc, argv)
   output_epilogue ();
 
   fflush (stdout);
-  exit (ferror (stdout) != 0 || have_error
+  _exit (ferror (stdout) != 0 || have_error
 	? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);
 
   /* NOTREACHED */
diff --git a/genpeep.c b/genpeep.c
index b20fd0d..6cc882a 100644
--- a/genpeep.c
+++ b/genpeep.c
@@ -416,7 +416,7 @@ fatal (s, a1, a2)
   fprintf (stderr, "genpeep: ");
   fprintf (stderr, s, a1, a2);
   fprintf (stderr, "\n");
-  exit (FATAL_EXIT_CODE);
+  _exit (FATAL_EXIT_CODE);
 }
 
 /* More 'friendly' abort that prints the line and file.
@@ -448,7 +448,7 @@ main (argc, argv)
   if (infile == 0)
     {
       perror (argv[1]);
-      exit (FATAL_EXIT_CODE);
+      _exit (FATAL_EXIT_CODE);
     }
 
   init_rtl ();
@@ -506,7 +506,7 @@ from the machine description file `md'.  */\n\n");
   printf ("rtx peep_operand[%d];\n", max_opno + 1);
 
   fflush (stdout);
-  exit (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);
+  _exit (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);
   /* NOTREACHED */
   return 0;
 }
diff --git a/genrecog.c b/genrecog.c
index f75f1b4..05eb0bc 100644
--- a/genrecog.c
+++ b/genrecog.c
@@ -1699,7 +1699,7 @@ fatal (s)
   fprintf (stderr, s);
   fprintf (stderr, "\n");
   fprintf (stderr, "after %d definitions\n", next_index);
-  exit (FATAL_EXIT_CODE);
+  _exit (FATAL_EXIT_CODE);
 }
 
 /* More 'friendly' abort that prints the line and file.
@@ -1732,7 +1732,7 @@ main (argc, argv)
   if (infile == 0)
     {
       perror (argv[1]);
-      exit (FATAL_EXIT_CODE);
+      _exit (FATAL_EXIT_CODE);
     }
 
   init_rtl ();
@@ -1816,7 +1816,7 @@ from the machine description file `md'.  */\n\n");
   write_subroutine (split_tree.first, SPLIT);
 
   fflush (stdout);
-  exit (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);
+  _exit (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);
   /* NOTREACHED */
   return 0;
 }
diff --git a/getopt.c b/getopt.c
index fc87ce6..6d38f22 100644
--- a/getopt.c
+++ b/getopt.c
@@ -1038,7 +1038,7 @@ main (argc, argv)
       printf ("\n");
     }
 
-  exit (0);
+  _exit (0);
 }
 
 #endif /* TEST */
diff --git a/getopt1.c b/getopt1.c
index af8e681..ec669d9 100644
--- a/getopt1.c
+++ b/getopt1.c
@@ -183,7 +183,7 @@ main (argc, argv)
       printf ("\n");
     }
 
-  exit (0);
+  _exit (0);
 }
 
 #endif /* TEST */
diff --git a/libgcc2.c b/libgcc2.c
index dcf4cb9..a4b6087 100644
--- a/libgcc2.c
+++ b/libgcc2.c
@@ -2530,7 +2530,7 @@ __default_new_handler ()
      do.  We need a standard, clean way to get at the name.  */
   write (2, MESSAGE, sizeof (MESSAGE));
 #endif
-  /* don't call exit () because that may call global destructors which
+  /* don't call _exit () because that may call global destructors which
      may cause a loop.  */
   _exit (-1);
 }
@@ -2777,7 +2777,7 @@ __enable_execute_stack (char *addr)
   if (r != KERN_SUCCESS)
     {
       mach_error("vm_protect VM_PROT_ALL", r);
-      exit(1);
+      _exit(1);
     }
 
   /* We inline the i-cache invalidation for speed */
diff --git a/obstack.c b/obstack.c
index fb66d0c..291b5ec 100644
--- a/obstack.c
+++ b/obstack.c
@@ -466,7 +466,7 @@ static void
 print_and_abort ()
 {
   fputs (_("memory exhausted\n"), stderr);
-  exit (obstack_exit_failure);
+  _exit (obstack_exit_failure);
 }
 
 #if 0
diff --git a/pexecute.c b/pexecute.c
index 5c2779f..5739050 100644
--- a/pexecute.c
+++ b/pexecute.c
@@ -618,7 +618,7 @@ pexecute (program, argv, this_pname, temp_base, errmsg_fmt, errmsg_arg, flags)
 #else
       fprintf (stderr, ": %s\n", xstrerror (errno));
 #endif
-      exit (-1);
+      _exit (-1);
       /* NOTREACHED */
       return 0;
 
diff --git a/protoize.c b/protoize.c
index 34f8fe5..50c7591 100644
--- a/protoize.c
+++ b/protoize.c
@@ -675,7 +675,7 @@ xmalloc (byte_count)
   if (rv == NULL)
     {
       fprintf (stderr, "\n%s: virtual memory exceeded\n", pname);
-      exit (FATAL_EXIT_CODE);
+      _exit (FATAL_EXIT_CODE);
       return 0;		/* avoid warnings */
     }
   else
@@ -695,7 +695,7 @@ xrealloc (old_space, byte_count)
   if (rv == NULL)
     {
       fprintf (stderr, "\n%s: virtual memory exceeded\n", pname);
-      exit (FATAL_EXIT_CODE);
+      _exit (FATAL_EXIT_CODE);
       return 0;		/* avoid warnings */
     }
   else
@@ -748,7 +748,7 @@ void
 fancy_abort ()
 {
   fprintf (stderr, "%s: internal abort\n", pname);
-  exit (FATAL_EXIT_CODE);
+  _exit (FATAL_EXIT_CODE);
 }
 
 /* Make a duplicate of the first N bytes of a given string in a newly
@@ -887,7 +887,7 @@ usage ()
   fprintf (stderr, "%s: usage '%s [ -VqfnkNlgC ] [ -B <dirname> ] [ filename ... ]'\n",
 	   pname, pname);
 #endif /* !defined (UNPROTOIZE) */
-  exit (FATAL_EXIT_CODE);
+  _exit (FATAL_EXIT_CODE);
 }
 
 /* Return true if the given filename (assumed to be an absolute filename)
@@ -1553,7 +1553,7 @@ aux_info_corrupted ()
 {
   fprintf (stderr, "\n%s: fatal error: aux info file corrupted at line %d\n",
 	   pname, current_aux_info_lineno);
-  exit (FATAL_EXIT_CODE);
+  _exit (FATAL_EXIT_CODE);
 }
 
 /* ??? This comment is vague.  Say what the condition is for.  */
@@ -1879,7 +1879,7 @@ save_def_or_dec (l, is_syscalls)
 			 def_dec_p->file->hash_entry->symbol,
 			 def_dec_p->line,
 			 def_dec_p->hash_entry->symbol);
-                exit (FATAL_EXIT_CODE);
+                _exit (FATAL_EXIT_CODE);
               }
             free_def_dec (def_dec_p);
             return;
@@ -4613,7 +4613,7 @@ main (argc, argv)
     {
       fprintf (stderr, "%s: cannot get working directory: %s\n",
 	       pname, my_strerror(errno));
-      exit (FATAL_EXIT_CODE);
+      _exit (FATAL_EXIT_CODE);
     }
 
   /* By default, convert the files in the current directory.  */
@@ -4739,7 +4739,7 @@ main (argc, argv)
       do_processing ();
     }
 
-  exit (errors ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);
+  _exit (errors ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);
 
   return 1;
 }
diff --git a/toplev.c b/toplev.c
index 45831c0..0982e1a 100644
--- a/toplev.c
+++ b/toplev.c
@@ -1030,7 +1030,7 @@ pfatal_with_name (name)
 {
   fprintf (stderr, "%s: ", progname);
   perror (name);
-  exit (FATAL_EXIT_CODE);
+  _exit (FATAL_EXIT_CODE);
 }
 
 void
@@ -1038,7 +1038,7 @@ fatal_io_error (name)
      char *name;
 {
   fprintf (stderr, "%s: %s: I/O error\n", progname, name);
-  exit (FATAL_EXIT_CODE);
+  _exit (FATAL_EXIT_CODE);
 }
 
 /* Called to give a better error message for a bad insn rather than
@@ -1501,7 +1501,7 @@ vfatal (s, ap)
      va_list ap;
 {
   verror (s, ap);
-  exit (FATAL_EXIT_CODE);
+  _exit (FATAL_EXIT_CODE);
 }
 
 void
@@ -4372,10 +4372,10 @@ main (argc, argv, envp)
 #endif /* ! OS2 && ! VMS && (! _WIN32 || CYGWIN32) */
 
   if (errorcount)
-    exit (FATAL_EXIT_CODE);
+    _exit (FATAL_EXIT_CODE);
   if (sorrycount)
-    exit (FATAL_EXIT_CODE);
-  exit (SUCCESS_EXIT_CODE);
+    _exit (FATAL_EXIT_CODE);
+  _exit (SUCCESS_EXIT_CODE);
   return 0;
 }
 
diff --git a/cp/typeck2.c b/cp/typeck2.c
index fae9668..1cb7d42 100644
--- a/cp/typeck2.c
+++ b/cp/typeck2.c
@@ -327,7 +327,7 @@ my_friendly_abort (i)
       else
 	error ("confused by earlier errors, bailing out");
       
-      exit (34);
+      _exit (34);
     }
   ++abortcount;
 
diff --git a/objc/objc-act.c b/objc/objc-act.c
index 6b0de8d..5f0f260 100644
--- a/objc/objc-act.c
+++ b/objc/objc-act.c
@@ -580,7 +580,7 @@ generate_struct_by_value_array ()
       printf ("\n};\n");
     }
  
-  exit (0);
+  _exit (0);
 }
 
 void
@@ -2512,7 +2512,7 @@ build_ivar_chain (interface, copy)
 	  error ("Cannot find interface declaration for `%s', superclass of `%s'",
 		 IDENTIFIER_POINTER (super_name),
 		 IDENTIFIER_POINTER (my_name));
-	  exit (FATAL_EXIT_CODE);
+	  _exit (FATAL_EXIT_CODE);
         }
 
       if (super_interface == interface)
@@ -6171,7 +6171,7 @@ start_class (code, class_name, super_name, protocol_list)
 	{
 	  error ("Cannot find interface declaration for `%s'",
 		 IDENTIFIER_POINTER (class_name));
-	  exit (FATAL_EXIT_CODE);
+	  _exit (FATAL_EXIT_CODE);
 	}
       else
         add_category (class_category_is_assoc_with, class);
@@ -6207,7 +6207,7 @@ start_class (code, class_name, super_name, protocol_list)
         {
 	  error ("Cannot find interface declaration for `%s'",
 		 IDENTIFIER_POINTER (class_name));
-	  exit (FATAL_EXIT_CODE);
+	  _exit (FATAL_EXIT_CODE);
         }
     }
   return class;
