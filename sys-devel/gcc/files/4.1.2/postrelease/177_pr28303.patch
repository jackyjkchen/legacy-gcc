diff --git a/gcc/cp/decl.c b/gcc/cp/decl.c
index 29b8aefc..b7dd098b 100644
--- a/gcc/cp/decl.c
+++ b/gcc/cp/decl.c
@@ -7048,7 +7048,11 @@ grokdeclarator (const cp_declarator *declarator,
   /* If there were multiple types specified in the decl-specifier-seq,
      issue an error message.  */
   if (declspecs->multiple_types_p)
-    error ("two or more data types in declaration of %qs", name);
+    {
+      error ("two or more data types in declaration of %qs", name);
+      return error_mark_node;
+    }
+
   /* Extract the basic type from the decl-specifier-seq.  */
   type = declspecs->type;
   if (type == error_mark_node)
diff --git a/gcc/testsuite/g++.dg/init/error1.C b/gcc/testsuite/g++.dg/init/error1.C
index e930fc75..dd12e4cc 100644
--- a/gcc/testsuite/g++.dg/init/error1.C
+++ b/gcc/testsuite/g++.dg/init/error1.C
@@ -1,7 +1,7 @@
 // PR c++/12696
 
 struct A {
-  static float b[10]; // { dg-error "" }
+  static float b[10];
 }
 
 float A::b[] = {1,2,3}; // { dg-error "" }
diff --git a/gcc/testsuite/g++.dg/template/typedef6.C b/gcc/testsuite/g++.dg/template/typedef6.C
new file mode 100644
index 00000000..cd2db634
--- /dev/null
+++ b/gcc/testsuite/g++.dg/template/typedef6.C
@@ -0,0 +1,8 @@
+//PR c++/28303
+
+template<typename T> struct A
+{
+  typedef struct typename T::X X;       // { dg-error "expected identifier|two or more" }
+};
+
+template<typename T> A<T>::X::X() {}    // { dg-error "not a type|forbids declaration" }
