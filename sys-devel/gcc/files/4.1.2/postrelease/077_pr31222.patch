diff --git a/gcc/fortran/check.c b/gcc/fortran/check.c
index 10a43fe2..4058d02b 100644
--- a/gcc/fortran/check.c
+++ b/gcc/fortran/check.c
@@ -57,6 +57,18 @@ numeric_check (gfc_expr * e, int n)
   if (gfc_numeric_ts (&e->ts))
     return SUCCESS;
 
+  /* If the expression has not got a type, check if its namespace can
+     offer a default type.  */
+  if ((e->expr_type == EXPR_VARIABLE || e->expr_type == EXPR_VARIABLE)
+	&& e->symtree->n.sym->ts.type == BT_UNKNOWN
+	&& gfc_set_default_type (e->symtree->n.sym, 0,
+				 e->symtree->n.sym->ns) == SUCCESS
+	&& gfc_numeric_ts (&e->symtree->n.sym->ts))
+    {
+      e->ts = e->symtree->n.sym->ts;
+      return SUCCESS;
+    }
+
   gfc_error ("'%s' argument of '%s' intrinsic at %L must be a numeric type",
 	     gfc_current_intrinsic_arg[n], gfc_current_intrinsic, &e->where);
 
diff --git a/gcc/testsuite/gfortran.dg/default_numeric_type_1.f90 b/gcc/testsuite/gfortran.dg/default_numeric_type_1.f90
new file mode 100644
index 00000000..e8f8d350
--- /dev/null
+++ b/gcc/testsuite/gfortran.dg/default_numeric_type_1.f90
@@ -0,0 +1,18 @@
+! { dg-do compile}
+! { dg-options "-fdump-tree-original" }
+! Tests the fix for PR 31222, in which the type of the arguments of abs
+! and int below were not detected to be of default numeric type..
+!
+! Contributed by Tobias Burnus <burnus@gcc.gnu.org>
+!
+subroutine mysub1(a,b,mode,dis)
+!  integer :: mode
+!  real :: dis
+  dimension a(abs(mode)),b(int(dis))
+  print *, mod
+  write (*,*) abs(mode), nint(dis)
+end subroutine
+
+program testprog
+  call mysub1((/1.,2./),(/1.,2.,3./),-2, 3.2)
+end
