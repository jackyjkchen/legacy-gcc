diff --git a/gcc/cp/pt.c b/gcc/cp/pt.c
index f19b28bd..82e972b8 100644
--- a/gcc/cp/pt.c
+++ b/gcc/cp/pt.c
@@ -10428,7 +10428,7 @@ unify (tree tparms, tree targs, tree parm, tree arg, int strict)
 	/* Convert the ARG to the type of PARM; the deduced non-type
 	   template argument must exactly match the types of the
 	   corresponding parameter.  */
-	arg = fold (build_nop (TREE_TYPE (parm), arg));
+	arg = fold (build_nop (tparm, arg));
       else if (uses_template_parms (tparm))
 	/* We haven't deduced the type of this parameter yet.  Try again
 	   later.  */
diff --git a/gcc/testsuite/g++.dg/template/array20.C b/gcc/testsuite/g++.dg/template/array20.C
new file mode 100644
index 00000000..2e5c1e33
--- /dev/null
+++ b/gcc/testsuite/g++.dg/template/array20.C
@@ -0,0 +1,10 @@
+// PR c++/38950
+
+template <typename T, T N> void f(T(&)[N]);
+
+int main() {
+    int x[2];
+    unsigned int y[2];
+    f(x); // works
+    f(y); // ICE
+}
