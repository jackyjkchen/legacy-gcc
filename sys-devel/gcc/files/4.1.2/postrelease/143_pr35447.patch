diff --git a/gcc/c-parser.c b/gcc/c-parser.c
index e5e85c3b..ae62c9d2 100644
--- a/gcc/c-parser.c
+++ b/gcc/c-parser.c
@@ -3185,7 +3185,13 @@ c_parser_compound_statement (c_parser *parser)
 {
   tree stmt;
   if (!c_parser_require (parser, CPP_OPEN_BRACE, "expected %<{%>"))
-    return error_mark_node;
+    {
+      /* Ensure a scope is entered and left anyway to avoid confusion
+	 if we have just prepared to enter a function body.  */
+      stmt = c_begin_compound_stmt (true);
+      c_end_compound_stmt (stmt, true);
+      return error_mark_node;
+    }
   stmt = c_begin_compound_stmt (true);
   c_parser_compound_statement_nostart (parser);
   return c_end_compound_stmt (stmt, true);
diff --git a/gcc/testsuite/gcc.dg/noncompile/pr35447-1.c b/gcc/testsuite/gcc.dg/noncompile/pr35447-1.c
new file mode 100644
index 00000000..9c31e9bb
--- /dev/null
+++ b/gcc/testsuite/gcc.dg/noncompile/pr35447-1.c
@@ -0,0 +1,7 @@
+/* ICE arising from preparing to enter a scope for a nested function
+   but never doing so.  PR 35447.  */
+
+void foo()
+{
+  ({ int i().; }); /* { dg-error "expected" } */
+} /* { dg-error "expected" } */
