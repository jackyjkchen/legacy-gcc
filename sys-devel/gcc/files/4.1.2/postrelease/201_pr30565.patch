diff --git a/gcc/lambda-code.c b/gcc/lambda-code.c
index 4047934c..c0cf2809 100644
--- a/gcc/lambda-code.c
+++ b/gcc/lambda-code.c
@@ -2580,7 +2580,8 @@ perfect_nestify (struct loops *loops,
   set_immediate_dominator (CDI_DOMINATORS, preheaderbb, 
 			   loop->single_exit->src);
   set_immediate_dominator (CDI_DOMINATORS, latchbb, bodybb);
-  set_immediate_dominator (CDI_DOMINATORS, olddest, bodybb);
+  set_immediate_dominator (CDI_DOMINATORS, olddest,
+			   recount_dominator (CDI_DOMINATORS, olddest));
   /* Create the new iv.  */
   oldivvar = VEC_index (tree, loopivs, 0);
   ivvar = create_tmp_var (TREE_TYPE (oldivvar), "perfectiv");
diff --git a/gcc/testsuite/gcc.dg/tree-ssa/loop-27.c b/gcc/testsuite/gcc.dg/tree-ssa/loop-27.c
new file mode 100644
index 00000000..802b7c2a
--- /dev/null
+++ b/gcc/testsuite/gcc.dg/tree-ssa/loop-27.c
@@ -0,0 +1,14 @@
+/* PR tree-optimization/30565  */
+
+/* { dg-do compile } */
+/* { dg-options "-O1 -ftree-pre -ftree-loop-linear" } */
+
+static double snrdef[32];
+void psycho_n1(double ltmin[2][32], int stereo)
+{
+  int i, k;
+
+  for (k = 0; k < stereo; k++)
+    for (i = 0; i < 32; i++)
+      ltmin[k][i] = snrdef[i];
+}
