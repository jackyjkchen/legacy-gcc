diff --git a/gcc/fortran/trans-array.c b/gcc/fortran/trans-array.c
index ec1be0da..921e2ee2 100644
--- a/gcc/fortran/trans-array.c
+++ b/gcc/fortran/trans-array.c
@@ -1318,7 +1318,7 @@ get_array_ctor_strlen (gfc_constructor * c, tree * len)
 
 	case EXPR_ARRAY:
 	  if (!get_array_ctor_strlen (c->expr->value.constructor, len))
-	    is_const = FALSE;
+	    is_const = false;
 	  break;
 
 	case EXPR_VARIABLE:
@@ -1327,7 +1327,15 @@ get_array_ctor_strlen (gfc_constructor * c, tree * len)
 	  break;
 
 	default:
-	  is_const = FALSE;
+	  is_const = false;
+
+	  /* Hope that whatever we have possesses a constant character
+	     length!  */
+	  if (!(*len && INTEGER_CST_P (*len)) && c->expr->ts.cl)
+	    {
+	      gfc_conv_const_charlen (c->expr->ts.cl);
+	      *len = c->expr->ts.cl->backend_decl;
+	    }
 	  /* TODO: For now we just ignore anything we don't know how to
 	     handle, and hope we can figure it out a different way.  */
 	  break;
diff --git a/gcc/testsuite/gfortran.dg/array_constructor_13.f90 b/gcc/testsuite/gfortran.dg/array_constructor_13.f90
new file mode 100644
index 00000000..bacc6fff
--- /dev/null
+++ b/gcc/testsuite/gfortran.dg/array_constructor_13.f90
@@ -0,0 +1,24 @@
+! { dg-do compile }
+! Tests patch for PR29431, which arose from PR29373.
+!
+! Contributed by Tobias Schlueter  <tobi@gcc.gnu.org>
+!
+  implicit none
+  CHARACTER(len=6), DIMENSION(2,2)  :: a
+
+! Reporters original triggered another error:
+! gfc_todo: Not Implemented: complex character array
+! constructors.
+
+  a = reshape([to_string(1.0), trim("abcdef"), &
+               to_string(7.0), trim("hijklm")], &
+               [2, 2])
+  print *, a
+
+  CONTAINS
+    FUNCTION to_string(x)
+      character*6 to_string
+      REAL, INTENT(in) :: x
+      WRITE(to_string, FMT="(F6.3)") x
+    END FUNCTION
+end
