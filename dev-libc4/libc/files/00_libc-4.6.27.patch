diff --git a/usr/include/gnu/types.h b/usr/include/gnu/types.h
index b708710..ad8dd44 100644
--- a/usr/include/gnu/types.h
+++ b/usr/include/gnu/types.h
@@ -101,10 +101,14 @@ typedef struct __fd_set {
 	__result; })
 
 #define __FD_ZERO(fdsetp) \
+do { \
+	int __d0, __d1; \
 	__asm__ __volatile__("cld ; rep ; stosl" \
-        	:"=m" (*(__fd_set *) (fdsetp)) \
-        	:"a" (0), "c" (__FDSET_LONGS), \
-		"D" ((__fd_set *) (fdsetp)) :"cx","di")
+			:"=m" (*(__kernel_fd_set *) (fdsetp)), \
+			  "=&c" (__d0), "=&D" (__d1) \
+			:"a" (0), "1" (__FDSET_LONGS), \
+			"2" ((__kernel_fd_set *) (fdsetp)) : "memory"); \
+} while (0)
 
 #endif /* __NFDBITS */
 
diff --git a/usr/include/paths.h b/usr/include/paths.h
index c14e02a..9ed1ad3 100644
--- a/usr/include/paths.h
+++ b/usr/include/paths.h
@@ -36,15 +36,11 @@
 #ifndef _PATHS_H_
 #define	_PATHS_H_
 
-#if 0
-#define	__PATH_ETC_INET	"/usr/etc/inet"
-#else
 #define	__PATH_ETC_INET	"/etc"
-#endif
 
 /* Default search path. */
-#define	_PATH_DEFPATH		"/usr/local/bin:/usr/bin:/bin:."
-#define _PATH_DEFPATH_ROOT	"/sbin:/bin:/usr/sbin:/usr/bin"
+#define	_PATH_DEFPATH	     "/usr/local/bin:/usr/bin:/bin:."
+#define _PATH_DEFPATH_ROOT   "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
 
 #define	_PATH_BSHELL	"/bin/sh"
 #define	_PATH_CONSOLE	"/dev/console"
@@ -62,7 +58,7 @@
 #define	_PATH_SENDMAIL	"/usr/sbin/sendmail"
 #define	_PATH_SHELLS	"/etc/shells"
 #define	_PATH_TTY	"/dev/tty"
-#define	_PATH_UNIX	"/vmlinux"
+#define	_PATH_UNIX	"/vmlinuz"
 #define	_PATH_VI	"/usr/bin/vi"
 
 /* Provide trailing slash, since mostly used for building pathnames. */
@@ -73,21 +69,13 @@
 
 #define _PATH_KLOG	"/proc/kmsg"
 #define _PATH_LOGCONF	__PATH_ETC_INET"/syslog.conf"
-#if 0
-#define _PATH_LOGPID	__PATH_ETC_INET"/syslog.pid"
-#else
 #define _PATH_LOGPID	"/var/run/syslog.pid"
-#endif
 #define _PATH_LOG	"/dev/log"
 #define _PATH_CONSOLE	"/dev/console"
 
-#if 0
-#define _PATH_UTMP	"/etc/utmp"
-#else
-#define _PATH_UTMP	"/var/adm/utmp"
-#endif
-#define _PATH_WTMP	"/var/adm/wtmp"
-#define _PATH_LASTLOG	"/var/adm/lastlog"
+#define _PATH_UTMP	"/var/run/utmp"
+#define _PATH_WTMP	"/var/log/wtmp"
+#define _PATH_LASTLOG	"/var/log/lastlog"
 
 #define _PATH_LOCALE	"/usr/lib/locale"
 
diff --git a/usr/include/string.h b/usr/include/string.h
index 2ef8e4e..b2c5797 100644
--- a/usr/include/string.h
+++ b/usr/include/string.h
@@ -32,12 +32,9 @@ __BEGIN_DECLS
 #define	__need_NULL
 #include <stddef.h>
 
-/* `memcpy' is a built-in function for gcc 2.x. */
-#if defined(__STDC__) && __GNUC__ < 2
 /* Copy N bytes of SRC to DEST.  */
 extern __ptr_t memcpy __P ((__ptr_t __dest, __const __ptr_t __src,
 			    size_t __n));
-#endif
 
 /* Copy N bytes of SRC to DEST, guaranteeing
    correct behavior for overlapping strings.  */
@@ -61,12 +58,9 @@ extern __ptr_t memccpy __P ((__ptr_t __dest, __const __ptr_t __src,
 /* Set N bytes of S to C.  */
 extern __ptr_t memset __P ((__ptr_t __s, int __c, size_t __n));
 
-/* `memcmp' is a built-in function for gcc 2.x. */
-#if defined(__STDC__) && __GNUC__ < 2
 /* Compare N bytes of S1 and S2.  */
 extern int memcmp __P ((__const __ptr_t __s1, __const __ptr_t __s2,
 			size_t __n));
-#endif
 
 /* Search N bytes of S for C.  */
 extern __ptr_t memchr __P ((__const __ptr_t __s, int __c, size_t __n));
diff --git a/usr/include/sys/mman.h b/usr/include/sys/mman.h
index f7499f4..36d661a 100644
--- a/usr/include/sys/mman.h
+++ b/usr/include/sys/mman.h
@@ -8,7 +8,9 @@
 #ifndef MAP_ANON
 #define MAP_ANON	MAP_ANONYMOUS	   /* idem */
 #endif
+#ifndef MAP_FILE
 #define MAP_FILE	0x00	   /* The 'normal' way: mapped from file */
+#endif
 
 __BEGIN_DECLS
 
diff --git a/usr/include/sys/uio.h b/usr/include/sys/uio.h
index 3017125..81dbe43 100644
--- a/usr/include/sys/uio.h
+++ b/usr/include/sys/uio.h
@@ -26,9 +26,11 @@ __BEGIN_DECLS
 #define	__need_size_t
 #include <stddef.h>
 
+#include <linux/uio.h>
 
 /* Structure describing a section of memory.  */
 
+#if 0
 struct iovec
 {
   /* Starting address.  */
@@ -36,6 +38,7 @@ struct iovec
   /* Length in bytes.  */
   size_t iov_len;
 };
+#endif
 
 
 /* Read data from file descriptor FD, and put the result in the
