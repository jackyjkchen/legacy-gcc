diff --git a/argp/argp-fmtstream.h b/argp/argp-fmtstream.h
index f94207a..7294656 100644
--- a/argp/argp-fmtstream.h
+++ b/argp/argp-fmtstream.h
@@ -134,11 +134,9 @@ extern void __argp_fmtstream_free (argp_fmtstream_t __fs);
 extern void argp_fmtstream_free (argp_fmtstream_t __fs);
 
 extern ssize_t __argp_fmtstream_printf (argp_fmtstream_t __fs,
-				       __const char *__fmt, ...)
-     __attribute__ ((__format__ (printf, 2, 3)));
+				       __const char *__fmt, ...);
 extern ssize_t argp_fmtstream_printf (argp_fmtstream_t __fs,
-				      __const char *__fmt, ...)
-     __attribute__ ((__format__ (printf, 2, 3)));
+				      __const char *__fmt, ...);
 
 extern int __argp_fmtstream_putc (argp_fmtstream_t __fs, int __ch);
 extern int argp_fmtstream_putc (argp_fmtstream_t __fs, int __ch);
diff --git a/argp/argp.h b/argp/argp.h
index 3a5cb01..810d8c0 100644
--- a/argp/argp.h
+++ b/argp/argp.h
@@ -507,11 +507,9 @@ extern void __argp_usage (__const struct argp_state *__state);
    by the program name and `:', to stderr, and followed by a `Try ... --help'
    message, then exit (1).  */
 extern void argp_error (__const struct argp_state *__restrict __state,
-			__const char *__restrict __fmt, ...)
-     __attribute__ ((__format__ (__printf__, 2, 3)));
+			__const char *__restrict __fmt, ...);
 extern void __argp_error (__const struct argp_state *__restrict __state,
-			  __const char *__restrict __fmt, ...)
-     __attribute__ ((__format__ (__printf__, 2, 3)));
+			  __const char *__restrict __fmt, ...);
 
 /* Similar to the standard gnu error-reporting function error(), but will
    respect the ARGP_NO_EXIT and ARGP_NO_ERRS flags in STATE, and will print
@@ -523,12 +521,10 @@ extern void __argp_error (__const struct argp_state *__restrict __state,
    parsing but don't reflect a (syntactic) problem with the input.  */
 extern void argp_failure (__const struct argp_state *__restrict __state,
 			  int __status, int __errnum,
-			  __const char *__restrict __fmt, ...)
-     __attribute__ ((__format__ (__printf__, 4, 5)));
+			  __const char *__restrict __fmt, ...);
 extern void __argp_failure (__const struct argp_state *__restrict __state,
 			    int __status, int __errnum,
-			    __const char *__restrict __fmt, ...)
-     __attribute__ ((__format__ (__printf__, 4, 5)));
+			    __const char *__restrict __fmt, ...);
 
 /* Returns true if the option OPT is a valid short option.  */
 extern int _option_is_short (__const struct argp_option *__opt) __THROW;
diff --git a/assert/assert.h b/assert/assert.h
index 7c8ae48..babd64a 100644
--- a/assert/assert.h
+++ b/assert/assert.h
@@ -67,19 +67,19 @@ __BEGIN_DECLS
 /* This prints an "Assertion failed" message and aborts.  */
 extern void __assert_fail (__const char *__assertion, __const char *__file,
 			   unsigned int __line, __const char *__function)
-     __THROW __attribute__ ((__noreturn__));
+     __THROW ;
 
 /* Likewise, but prints the error text for ERRNUM.  */
 extern void __assert_perror_fail (int __errnum, __const char *__file,
 				  unsigned int __line,
 				  __const char *__function)
-     __THROW __attribute__ ((__noreturn__));
+     __THROW ;
 
 
 /* The following is not at all used here but needed for standard
    compliance.  */
 extern void __assert (const char *__assertion, const char *__file, int __line)
-     __THROW __attribute__ ((__noreturn__));
+     __THROW ;
 
 
 __END_DECLS
diff --git a/bits/shm.h b/bits/shm.h
index 746a863..c6a431e 100644
--- a/bits/shm.h
+++ b/bits/shm.h
@@ -36,7 +36,7 @@ __BEGIN_DECLS
 
 /* Segment low boundary address multiple.  */
 #define SHMLBA		(__getpagesize ())
-extern int __getpagesize (void) __THROW __attribute__ ((__const__));
+extern int __getpagesize (void) __THROW ;
 
 
 /* Type to count number of attaches.  */
diff --git a/ctype/ctype.h b/ctype/ctype.h
index d2566f8..4d7eeb6 100644
--- a/ctype/ctype.h
+++ b/ctype/ctype.h
@@ -79,11 +79,11 @@ enum
    doesn't fit into an `unsigned char'.  But today more important is that
    the arrays are also used for multi-byte character sets.  */
 extern __const unsigned short int **__ctype_b_loc (void)
-     __attribute__ ((__const));
+     ;
 extern __const __int32_t **__ctype_tolower_loc (void)
-     __attribute__ ((__const));
+     ;
 extern __const __int32_t **__ctype_toupper_loc (void)
-     __attribute__ ((__const));
+     ;
 
 #define __isctype(c, type) \
   ((*__ctype_b_loc ())[(int) (c)] & (unsigned short int) type)
diff --git a/hurd/hurd/signal.h b/hurd/hurd/signal.h
index 238a73f..7aef745 100644
--- a/hurd/hurd/signal.h
+++ b/hurd/hurd/signal.h
@@ -123,7 +123,7 @@ extern struct hurd_sigstate *_hurd_self_sigstate (void)
      /* This declaration tells the compiler that the value is constant.
 	We assume this won't be called twice from the same stack frame
 	by different threads.  */
-     __attribute__ ((__const__));
+     ;
 
 #ifndef _HURD_SIGNAL_H_EXTERN_INLINE
 #define _HURD_SIGNAL_H_EXTERN_INLINE extern __inline
diff --git a/hurd/hurd/threadvar.h b/hurd/hurd/threadvar.h
index 5e7441f..92e9125 100644
--- a/hurd/hurd/threadvar.h
+++ b/hurd/hurd/threadvar.h
@@ -104,7 +104,7 @@ __hurd_threadvar_location (enum __hurd_threadvar_index __index) __THROW
      /* This declaration tells the compiler that the value is constant
 	given the same argument.  We assume this won't be called twice from
 	the same stack frame by different threads.  */
-     __attribute__ ((__const__));
+     ;
 
 _HURD_THREADVAR_H_EXTERN_INLINE unsigned long int *
 __hurd_threadvar_location (enum __hurd_threadvar_index __index)
diff --git a/include/alloca.h b/include/alloca.h
index 563d786..fbdfc9b 100644
--- a/include/alloca.h
+++ b/include/alloca.h
@@ -12,8 +12,8 @@ extern void *__alloca (size_t __size);
 # define __alloca(size)	__builtin_alloca (size)
 #endif /* GCC.  */
 
-extern int __libc_use_alloca (size_t size) __attribute__ ((const));
-extern int __libc_alloca_cutoff (size_t size) __attribute__ ((const));
+extern int __libc_use_alloca (size_t size) ;
+extern int __libc_alloca_cutoff (size_t size) ;
 
 #define __MAX_ALLOCA_CUTOFF	65536
 
diff --git a/include/ctype.h b/include/ctype.h
index ae38b1b..1240031 100644
--- a/include/ctype.h
+++ b/include/ctype.h
@@ -22,7 +22,7 @@ __libc_tsd_define (extern, CTYPE_B)
 __libc_tsd_define (extern, CTYPE_TOUPPER)
 __libc_tsd_define (extern, CTYPE_TOLOWER)
 
-CTYPE_EXTERN_INLINE const uint16_t ** __attribute__ ((const))
+CTYPE_EXTERN_INLINE const uint16_t ** 
 __ctype_b_loc (void)
 {
   union
@@ -36,7 +36,7 @@ __ctype_b_loc (void)
   return u.tablep;
 }
 
-CTYPE_EXTERN_INLINE const int32_t ** __attribute__ ((const))
+CTYPE_EXTERN_INLINE const int32_t ** 
 __ctype_toupper_loc (void)
 {
   union
@@ -50,7 +50,7 @@ __ctype_toupper_loc (void)
   return u.tablep;
 }
 
-CTYPE_EXTERN_INLINE const int32_t ** __attribute__ ((const))
+CTYPE_EXTERN_INLINE const int32_t ** 
 __ctype_tolower_loc (void)
 {
   union
diff --git a/include/errno.h b/include/errno.h
index fe8bca4..0b364bd 100644
--- a/include/errno.h
+++ b/include/errno.h
@@ -36,7 +36,7 @@ extern __thread int errno attribute_tls_model_ie;
 # define __set_errno(val) (errno = (val))
 
 # ifndef __ASSEMBLER__
-extern int *__errno_location (void) __THROW __attribute__ ((__const__))
+extern int *__errno_location (void) __THROW 
 #  if RTLD_PRIVATE_ERRNO
      attribute_hidden
 #  endif
diff --git a/include/rpc/rpc.h b/include/rpc/rpc.h
index e5b1685..94a73a4 100644
--- a/include/rpc/rpc.h
+++ b/include/rpc/rpc.h
@@ -38,7 +38,7 @@ struct rpc_thread_variables {
 };
 
 extern struct rpc_thread_variables *__rpc_thread_variables(void)
-     __attribute__ ((const));
+     ;
 extern void __rpc_thread_svc_cleanup (void);
 extern void __rpc_thread_clnt_cleanup (void);
 extern void __rpc_thread_key_cleanup (void);
diff --git a/include/stdio.h b/include/stdio.h
index e040380..15edf7a 100644
--- a/include/stdio.h
+++ b/include/stdio.h
@@ -7,25 +7,20 @@
 /* Now define the internal interfaces.  */
 extern int __fcloseall (void);
 extern int __snprintf (char *__restrict __s, size_t __maxlen,
-		       __const char *__restrict __format, ...)
-     __attribute__ ((__format__ (__printf__, 3, 4)));
+		       __const char *__restrict __format, ...);
 extern int __vsnprintf (char *__restrict __s, size_t __maxlen,
-			__const char *__restrict __format, _G_va_list __arg)
-     __attribute__ ((__format__ (__printf__, 3, 0)));
+			__const char *__restrict __format, _G_va_list __arg);
 extern int __vfscanf (FILE *__restrict __s,
 		      __const char *__restrict __format,
-		      _G_va_list __arg)
-     __attribute__ ((__format__ (__scanf__, 2, 0)));
+		      _G_va_list __arg);
 libc_hidden_proto (__vfscanf)
 extern int __vscanf (__const char *__restrict __format,
-		     _G_va_list __arg)
-     __attribute__ ((__format__ (__scanf__, 1, 0)));
+		     _G_va_list __arg);
 extern _IO_ssize_t __getline (char **__lineptr, size_t *__n,
 			      FILE *__stream);
 extern int __vsscanf (__const char *__restrict __s,
 		      __const char *__restrict __format,
-		      _G_va_list __arg)
-     __attribute__ ((__format__ (__scanf__, 2, 0)));
+		      _G_va_list __arg);
 
 extern int __sprintf_chk (char *, int, size_t, const char *, ...) __THROW;
 extern int __snprintf_chk (char *, size_t, int, size_t, const char *, ...)
@@ -79,15 +74,13 @@ extern int __ftrylockfile (FILE *__stream);
 extern int __getc_unlocked (FILE *__fp);
 extern wint_t __getwc_unlocked (FILE *__fp);
 
-extern int __fxprintf (FILE *__fp, const char *__fmt, ...)
-     __attribute__ ((__format__ (__printf__, 2, 3)));
+extern int __fxprintf (FILE *__fp, const char *__fmt, ...);
 
 extern __const char *__const _sys_errlist_internal[] attribute_hidden;
 extern int _sys_nerr_internal attribute_hidden;
 
 extern int __asprintf_internal (char **__restrict __ptr,
-				__const char *__restrict __fmt, ...)
-     attribute_hidden __attribute__ ((__format__ (__printf__, 2, 3)));
+				__const char *__restrict __fmt, ...);
 #  if !defined NOT_IN_libc && !defined _ISOMAC
 #    define __asprintf(ptr, fmt, args...) \
   INTUSE(__asprintf) (ptr, fmt, ##args)
diff --git a/include/string.h b/include/string.h
index c196007..05b838a 100644
--- a/include/string.h
+++ b/include/string.h
@@ -40,7 +40,7 @@ extern void *__memrchr (__const void *__s, int __c, size_t __n)
 extern void *__memchr (__const void *__s, int __c, size_t __n)
      __attribute_pure__;
 
-extern int __ffs (int __i) __attribute__ ((const));
+extern int __ffs (int __i) ;
 
 extern char *__strerror_r (int __errnum, char *__buf, size_t __buflen);
 
diff --git a/include/sys/syslog.h b/include/sys/syslog.h
index 8b0d59d..1f01de7 100644
--- a/include/sys/syslog.h
+++ b/include/sys/syslog.h
@@ -4,6 +4,5 @@ libc_hidden_proto (syslog)
 libc_hidden_proto (vsyslog)
 
 extern void __vsyslog_chk (int __pri, int __flag, __const char *__fmt,
-			   __gnuc_va_list __ap)
-     __attribute__ ((__format__ (__printf__, 3, 0)));
+			   __gnuc_va_list __ap);
 libc_hidden_proto (__vsyslog_chk)
diff --git a/include/unistd.h b/include/unistd.h
index f34d53f..f782d68 100644
--- a/include/unistd.h
+++ b/include/unistd.h
@@ -127,7 +127,7 @@ extern ssize_t __write (int __fd, __const void *__buf, size_t __n);
 libc_hidden_proto (__write)
 extern __pid_t __fork (void);
 libc_hidden_proto (__fork)
-extern int __getpagesize (void) __attribute__ ((__const__));
+extern int __getpagesize (void) ;
 libc_hidden_proto (__getpagesize)
 extern int __ftruncate (int __fd, __off_t __length);
 extern int __ftruncate64 (int __fd, __off64_t __length);
diff --git a/include/wchar.h b/include/wchar.h
index 89e9a4f..f23452f 100644
--- a/include/wchar.h
+++ b/include/wchar.h
@@ -99,28 +99,22 @@ extern wchar_t *__wcschrnul (__const wchar_t *__s, wchar_t __wc)
 
 extern int __vfwscanf (__FILE *__restrict __s,
 		       __const wchar_t *__restrict __format,
-		       __gnuc_va_list __arg)
-     /* __attribute__ ((__format__ (__wscanf__, 2, 0)) */;
+		       __gnuc_va_list __arg);
 extern int __vswprintf (wchar_t *__restrict __s, size_t __n,
 			__const wchar_t *__restrict __format,
-			__gnuc_va_list __arg)
-     /* __attribute__ ((__format__ (__wprintf__, 3, 0))) */;
+			__gnuc_va_list __arg);
 extern int __fwprintf (__FILE *__restrict __s,
-		       __const wchar_t *__restrict __format, ...)
-     /* __attribute__ ((__format__ (__wprintf__, 2, 3))) */;
+		       __const wchar_t *__restrict __format, ...);
 extern int __vfwprintf (__FILE *__restrict __s,
 			__const wchar_t *__restrict __format,
-			__gnuc_va_list __arg)
-     /* __attribute__ ((__format__ (__wprintf__, 2, 0))) */;
+			__gnuc_va_list __arg);
 extern int __vfwprintf_chk (FILE *__restrict __s, int __flag,
 			    const wchar_t *__restrict __format,
-			    __gnuc_va_list __arg)
-     /* __attribute__ ((__format__ (__wprintf__, 3, 0))) */;
+			    __gnuc_va_list __arg);
 extern int __vswprintf_chk (wchar_t *__restrict __s, size_t __n,
 			    int __flag, size_t __s_len,
 			    __const wchar_t *__restrict __format,
-			    __gnuc_va_list __arg)
-     /* __attribute__ ((__format__ (__wprintf__, 5, 0))) */;
+			    __gnuc_va_list __arg);
 libc_hidden_proto (__vfwprintf_chk)
 libc_hidden_proto (__vswprintf_chk)
 
diff --git a/inet/netinet/in.h b/inet/netinet/in.h
index 4fdc0fa..1af04d2 100644
--- a/inet/netinet/in.h
+++ b/inet/netinet/in.h
@@ -351,13 +351,13 @@ struct group_filter
    this was a short-sighted decision since on different systems the types
    may have different representations but the values are always the same.  */
 
-extern uint32_t ntohl (uint32_t __netlong) __THROW __attribute__ ((__const__));
+extern uint32_t ntohl (uint32_t __netlong) __THROW ;
 extern uint16_t ntohs (uint16_t __netshort)
-     __THROW __attribute__ ((__const__));
+     __THROW ;
 extern uint32_t htonl (uint32_t __hostlong)
-     __THROW __attribute__ ((__const__));
+     __THROW ;
 extern uint16_t htons (uint16_t __hostshort)
-     __THROW __attribute__ ((__const__));
+     __THROW ;
 
 #include <endian.h>
 
diff --git a/libio/stdio.h b/libio/stdio.h
index cc288a3..0b5253a 100644
--- a/libio/stdio.h
+++ b/libio/stdio.h
@@ -283,9 +283,11 @@ extern FILE *fdopen (int __fd, __const char *__modes) __THROW;
 #ifdef	__USE_GNU
 /* Create a new stream that refers to the given magic cookie,
    and uses the given functions for input and output.  */
+# if (__GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 8))
 extern FILE *fopencookie (void *__restrict __magic_cookie,
 			  __const char *__restrict __modes,
 			  _IO_cookie_io_functions_t __io_funcs) __THROW;
+#endif
 
 /* Create a new stream that refers to a memory buffer.  */
 extern FILE *fmemopen (void *__s, size_t __len, __const char *__modes) __THROW;
@@ -356,11 +358,11 @@ __BEGIN_NAMESPACE_C99
 /* Maximum chars of output to write in MAXLEN.  */
 extern int snprintf (char *__restrict __s, size_t __maxlen,
 		     __const char *__restrict __format, ...)
-     __THROW __attribute__ ((__format__ (__printf__, 3, 4)));
+     __THROW;
 
 extern int vsnprintf (char *__restrict __s, size_t __maxlen,
 		      __const char *__restrict __format, _G_va_list __arg)
-     __THROW __attribute__ ((__format__ (__printf__, 3, 0)));
+     __THROW;
 __END_NAMESPACE_C99
 #endif
 
@@ -369,13 +371,13 @@ __END_NAMESPACE_C99
    Store the address of the string in *PTR.  */
 extern int vasprintf (char **__restrict __ptr, __const char *__restrict __f,
 		      _G_va_list __arg)
-     __THROW __attribute__ ((__format__ (__printf__, 2, 0)));
+     __THROW;
 extern int __asprintf (char **__restrict __ptr,
 		       __const char *__restrict __fmt, ...)
-     __THROW __attribute__ ((__format__ (__printf__, 2, 3)));
+     __THROW;
 extern int asprintf (char **__restrict __ptr,
 		     __const char *__restrict __fmt, ...)
-     __THROW __attribute__ ((__format__ (__printf__, 2, 3)));
+     __THROW;
 
 /* Write formatted output to a file descriptor.
 
@@ -384,10 +386,8 @@ extern int asprintf (char **__restrict __ptr,
    or due to the implementation they are cancellation points and
    therefore not marked with __THROW.  */
 extern int vdprintf (int __fd, __const char *__restrict __fmt,
-		     _G_va_list __arg)
-     __attribute__ ((__format__ (__printf__, 2, 0)));
-extern int dprintf (int __fd, __const char *__restrict __fmt, ...)
-     __attribute__ ((__format__ (__printf__, 2, 3)));
+		     _G_va_list __arg);
+extern int dprintf (int __fd, __const char *__restrict __fmt, ...);
 #endif
 
 
@@ -415,20 +415,17 @@ __BEGIN_NAMESPACE_C99
    This function is a possible cancellation point and therefore not
    marked with __THROW.  */
 extern int vfscanf (FILE *__restrict __s, __const char *__restrict __format,
-		    _G_va_list __arg)
-     __attribute__ ((__format__ (__scanf__, 2, 0))) __wur;
+		    _G_va_list __arg) __wur;
 
 /* Read formatted input from stdin into argument list ARG.
 
    This function is a possible cancellation point and therefore not
    marked with __THROW.  */
-extern int vscanf (__const char *__restrict __format, _G_va_list __arg)
-     __attribute__ ((__format__ (__scanf__, 1, 0))) __wur;
+extern int vscanf (__const char *__restrict __format, _G_va_list __arg) __wur;
 
 /* Read formatted input from S into argument list ARG.  */
 extern int vsscanf (__const char *__restrict __s,
-		    __const char *__restrict __format, _G_va_list __arg)
-     __THROW __attribute__ ((__format__ (__scanf__, 2, 0)));
+		    __const char *__restrict __format, _G_va_list __arg) __THROW;
 __END_NAMESPACE_C99
 #endif /* Use ISO C9x.  */
 
@@ -793,11 +790,11 @@ struct obstack;			/* See <obstack.h>.  */
 /* Write formatted output to an obstack.  */
 extern int obstack_printf (struct obstack *__restrict __obstack,
 			   __const char *__restrict __format, ...)
-     __THROW __attribute__ ((__format__ (__printf__, 2, 3)));
+     __THROW;
 extern int obstack_vprintf (struct obstack *__restrict __obstack,
 			    __const char *__restrict __format,
 			    _G_va_list __args)
-     __THROW __attribute__ ((__format__ (__printf__, 2, 0)));
+     __THROW;
 #endif /* Use GNU.  */
 
 
diff --git a/math/bits/mathcalls.h b/math/bits/mathcalls.h
index 64da627..03bdeb0 100644
--- a/math/bits/mathcalls.h
+++ b/math/bits/mathcalls.h
@@ -176,13 +176,13 @@ __END_NAMESPACE_C99
 
 _Mdouble_BEGIN_NAMESPACE
 /* Smallest integral value not less than X.  */
-__MATHCALLX (ceil,, (_Mdouble_ __x), (__const__));
+__MATHCALL (ceil,, (_Mdouble_ __x));
 
 /* Absolute value of X.  */
-__MATHCALLX (fabs,, (_Mdouble_ __x), (__const__));
+__MATHCALL (fabs,, (_Mdouble_ __x));
 
 /* Largest integer not greater than X.  */
-__MATHCALLX (floor,, (_Mdouble_ __x), (__const__));
+__MATHCALL (floor,, (_Mdouble_ __x));
 
 /* Floating-point modulo remainder of X/Y.  */
 __MATHCALL (fmod,, (_Mdouble_ __x, _Mdouble_ __y));
@@ -190,19 +190,19 @@ __MATHCALL (fmod,, (_Mdouble_ __x, _Mdouble_ __y));
 
 /* Return 0 if VALUE is finite or NaN, +1 if it
    is +Infinity, -1 if it is -Infinity.  */
-__MATHDECL_1 (int,__isinf,, (_Mdouble_ __value)) __attribute__ ((__const__));
+__MATHDECL_1 (int,__isinf,, (_Mdouble_ __value)) ;
 
 /* Return nonzero if VALUE is finite and not NaN.  */
-__MATHDECL_1 (int,__finite,, (_Mdouble_ __value)) __attribute__ ((__const__));
+__MATHDECL_1 (int,__finite,, (_Mdouble_ __value)) ;
 _Mdouble_END_NAMESPACE
 
 #ifdef __USE_MISC
 /* Return 0 if VALUE is finite or NaN, +1 if it
    is +Infinity, -1 if it is -Infinity.  */
-__MATHDECL_1 (int,isinf,, (_Mdouble_ __value)) __attribute__ ((__const__));
+__MATHDECL_1 (int,isinf,, (_Mdouble_ __value)) ;
 
 /* Return nonzero if VALUE is finite and not NaN.  */
-__MATHDECL_1 (int,finite,, (_Mdouble_ __value)) __attribute__ ((__const__));
+__MATHDECL_1 (int,finite,, (_Mdouble_ __value)) ;
 
 /* Return the remainder of X/Y.  */
 __MATHCALL (drem,, (_Mdouble_ __x, _Mdouble_ __y));
@@ -215,24 +215,24 @@ __MATHCALL (significand,, (_Mdouble_ __x));
 #if defined __USE_MISC || defined __USE_ISOC99
 __BEGIN_NAMESPACE_C99
 /* Return X with its signed changed to Y's.  */
-__MATHCALLX (copysign,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
+__MATHCALL (copysign,, (_Mdouble_ __x, _Mdouble_ __y));
 __END_NAMESPACE_C99
 #endif
 
 #ifdef __USE_ISOC99
 __BEGIN_NAMESPACE_C99
 /* Return representation of NaN for double type.  */
-__MATHCALLX (nan,, (__const char *__tagb), (__const__));
+__MATHCALL (nan,, (__const char *__tagb));
 __END_NAMESPACE_C99
 #endif
 
 
 /* Return nonzero if VALUE is not a number.  */
-__MATHDECL_1 (int,__isnan,, (_Mdouble_ __value)) __attribute__ ((__const__));
+__MATHDECL_1 (int,__isnan,, (_Mdouble_ __value)) ;
 
 #if defined __USE_MISC || defined __USE_XOPEN
 /* Return nonzero if VALUE is not a number.  */
-__MATHDECL_1 (int,isnan,, (_Mdouble_ __value)) __attribute__ ((__const__));
+__MATHDECL_1 (int,isnan,, (_Mdouble_ __value)) ;
 
 /* Bessel functions.  */
 __MATHCALL (j0,, (_Mdouble_));
@@ -280,9 +280,9 @@ __BEGIN_NAMESPACE_C99
 __MATHCALL (rint,, (_Mdouble_ __x));
 
 /* Return X + epsilon if X < Y, X - epsilon if X > Y.  */
-__MATHCALLX (nextafter,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
+__MATHCALL (nextafter,, (_Mdouble_ __x, _Mdouble_ __y));
 # if defined __USE_ISOC99 && !defined __LDBL_COMPAT
-__MATHCALLX (nexttoward,, (_Mdouble_ __x, long double __y), (__const__));
+__MATHCALL (nexttoward,, (_Mdouble_ __x, long double __y));
 # endif
 
 /* Return the remainder of integer divison X / Y with infinite precision.  */
@@ -307,11 +307,11 @@ __MATHCALL (nearbyint,, (_Mdouble_ __x));
 
 /* Round X to nearest integral value, rounding halfway cases away from
    zero.  */
-__MATHCALLX (round,, (_Mdouble_ __x), (__const__));
+__MATHCALL (round,, (_Mdouble_ __x));
 
 /* Round X to the integral value in floating-point format nearest but
    not larger in magnitude.  */
-__MATHCALLX (trunc,, (_Mdouble_ __x), (__const__));
+__MATHCALL (trunc,, (_Mdouble_ __x));
 
 /* Compute remainder of X and Y and put in *QUO a value with sign of x/y
    and magnitude congruent `mod 2^n' to the magnitude of the integral
@@ -344,11 +344,11 @@ __MATHCALL (fmin,, (_Mdouble_ __x, _Mdouble_ __y));
 
 /* Classify given number.  */
 __MATHDECL_1 (int, __fpclassify,, (_Mdouble_ __value))
-     __attribute__ ((__const__));
+     ;
 
 /* Test for negative number.  */
 __MATHDECL_1 (int, __signbit,, (_Mdouble_ __value))
-     __attribute__ ((__const__));
+     ;
 
 
 /* Multiply-add function computed as a ternary operation.  */
diff --git a/math/math.h b/math/math.h
index f5bcaef..bfe0901 100644
--- a/math/math.h
+++ b/math/math.h
@@ -103,16 +103,16 @@ __BEGIN_DECLS
 
 #   ifdef __USE_ISOC99 
 extern float __nldbl_nexttowardf (float __x, long double __y)
-				  __THROW __attribute__ ((__const__));
+				  __THROW ;
 #    ifdef __REDIRECT_NTH
 extern float __REDIRECT_NTH (nexttowardf, (float __x, long double __y),
 			     __nldbl_nexttowardf)
-     __attribute__ ((__const__));
+     ;
 extern double __REDIRECT_NTH (nexttoward, (double __x, long double __y),
-			      nextafter) __attribute__ ((__const__));
+			      nextafter) ;
 extern long double __REDIRECT_NTH (nexttowardl,
 				   (long double __x, long double __y),
-				   nextafter) __attribute__ ((__const__));
+				   nextafter) ;
 #    endif
 #   endif
 
diff --git a/misc/bits/syslog.h b/misc/bits/syslog.h
index c042721..9fca2f8 100644
--- a/misc/bits/syslog.h
+++ b/misc/bits/syslog.h
@@ -22,8 +22,7 @@
 #endif
 
 
-extern void __syslog_chk (int __pri, int __flag, __const char *__fmt, ...)
-     __attribute__ ((__format__ (__printf__, 3, 4)));
+extern void __syslog_chk (int __pri, int __flag, __const char *__fmt, ...);
 
 #define syslog(pri, ...) \
   __syslog_chk (pri, __USE_FORTIFY_LEVEL - 1, __VA_ARGS__)
@@ -31,8 +30,7 @@ extern void __syslog_chk (int __pri, int __flag, __const char *__fmt, ...)
 
 #ifdef __USE_BSD
 extern void __vsyslog_chk (int __pri, int __flag, __const char *__fmt,
-			   __gnuc_va_list __ap)
-     __attribute__ ((__format__ (__printf__, 3, 0)));
+			   __gnuc_va_list __ap);
 
 # define vsyslog(pri, fmt, ap)						\
   __vsyslog_chk (pri, __USE_FORTIFY_LEVEL - 1, fmt, ap)
diff --git a/misc/err.h b/misc/err.h
index 7ff3553..eb33d84 100644
--- a/misc/err.h
+++ b/misc/err.h
@@ -32,26 +32,18 @@ __BEGIN_DECLS
 
 /* Print "program: ", FORMAT, ": ", the standard error string for errno,
    and a newline, on stderr.  */
-extern void warn (__const char *__format, ...)
-     __attribute__ ((__format__ (__printf__, 1, 2)));
-extern void vwarn (__const char *__format, __gnuc_va_list)
-     __attribute__ ((__format__ (__printf__, 1, 0)));
+extern void warn (__const char *__format, ...);
+extern void vwarn (__const char *__format, __gnuc_va_list);
 
 /* Likewise, but without ": " and the standard error string.  */
-extern void warnx (__const char *__format, ...)
-     __attribute__ ((__format__ (__printf__, 1, 2)));
-extern void vwarnx (__const char *__format, __gnuc_va_list)
-     __attribute__ ((__format__ (__printf__, 1, 0)));
+extern void warnx (__const char *__format, ...);
+extern void vwarnx (__const char *__format, __gnuc_va_list);
 
 /* Likewise, and then exit with STATUS.  */
-extern void err (int __status, __const char *__format, ...)
-     __attribute__ ((__noreturn__, __format__ (__printf__, 2, 3)));
-extern void verr (int __status, __const char *__format, __gnuc_va_list)
-     __attribute__ ((__noreturn__, __format__ (__printf__, 2, 0)));
-extern void errx (int __status, __const char *__format, ...)
-     __attribute__ ((__noreturn__, __format__ (__printf__, 2, 3)));
-extern void verrx (int __status, __const char *, __gnuc_va_list)
-     __attribute__ ((__noreturn__, __format__ (__printf__, 2, 0)));
+extern void err (int __status, __const char *__format, ...);
+extern void verr (int __status, __const char *__format, __gnuc_va_list);
+extern void errx (int __status, __const char *__format, ...);
+extern void verrx (int __status, __const char *, __gnuc_va_list);
 
 __END_DECLS
 
diff --git a/misc/error.c b/misc/error.c
index 85d1cff..534a0a2 100644
--- a/misc/error.c
+++ b/misc/error.c
@@ -60,12 +60,10 @@ unsigned int error_message_count;
 
 /* In GNU libc we want do not want to use the common name `error' directly.
    Instead make it a weak alias.  */
-extern void __error (int status, int errnum, const char *message, ...)
-     __attribute__ ((__format__ (__printf__, 3, 4)));
+extern void __error (int status, int errnum, const char *message, ...);
 extern void __error_at_line (int status, int errnum, const char *file_name,
 			     unsigned int line_number, const char *message,
-			     ...)
-     __attribute__ ((__format__ (__printf__, 5, 6)));;
+			     ...);
 # define error __error
 # define error_at_line __error_at_line
 
diff --git a/misc/error.h b/misc/error.h
index f25005b..604b5ef 100644
--- a/misc/error.h
+++ b/misc/error.h
@@ -41,12 +41,10 @@ extern "C" {
    if ERRNUM is nonzero, follow it with ": " and strerror (ERRNUM).
    If STATUS is nonzero, terminate the program with `exit (STATUS)'.  */
 
-extern void error (int __status, int __errnum, const char *__format, ...)
-     __attribute__ ((__format__ (__printf__, 3, 4)));
+extern void error (int __status, int __errnum, const char *__format, ...);
 
 extern void error_at_line (int __status, int __errnum, const char *__fname,
-			   unsigned int __lineno, const char *__format, ...)
-     __attribute__ ((__format__ (__printf__, 5, 6)));
+			   unsigned int __lineno, const char *__format, ...);
 
 /* If NULL, error will flush stdout, then print on stderr the program
    name, a colon and a space.  Otherwise, error will call this
diff --git a/misc/sys/syslog.h b/misc/sys/syslog.h
index 4ed57c2..b97be62 100644
--- a/misc/sys/syslog.h
+++ b/misc/sys/syslog.h
@@ -187,8 +187,7 @@ extern int setlogmask (int __mask) __THROW;
 
    This function is a possible cancellation point and therefore not
    marked with __THROW.  */
-extern void syslog (int __pri, __const char *__fmt, ...)
-     __attribute__ ((__format__ (__printf__, 2, 3)));
+extern void syslog (int __pri, __const char *__fmt, ...);
 
 #ifdef __USE_BSD
 /* Generate a log message using FMT and using arguments pointed to by AP.
@@ -197,8 +196,7 @@ extern void syslog (int __pri, __const char *__fmt, ...)
    cancellation point.  But due to similarity with an POSIX interface
    or due to the implementation it is a cancellation point and
    therefore not marked with __THROW.  */
-extern void vsyslog (int __pri, __const char *__fmt, __gnuc_va_list __ap)
-     __attribute__ ((__format__ (__printf__, 2, 0)));
+extern void vsyslog (int __pri, __const char *__fmt, __gnuc_va_list __ap);
 #endif
 
 
diff --git a/nptl/sysdeps/pthread/pthread.h b/nptl/sysdeps/pthread/pthread.h
index 8d4bc74..98fce7c 100644
--- a/nptl/sysdeps/pthread/pthread.h
+++ b/nptl/sysdeps/pthread/pthread.h
@@ -230,7 +230,7 @@ extern int pthread_create (pthread_t *__restrict __newthread,
 
    The registered cleanup handlers are called via exception handling
    so we cannot mark this function with __THROW.*/
-extern void pthread_exit (void *__retval) __attribute__ ((__noreturn__));
+extern void pthread_exit (void *__retval) ;
 
 /* Make calling thread wait for termination of the thread TH.  The
    exit status of the thread is stored in *THREAD_RETURN, if THREAD_RETURN
@@ -263,7 +263,7 @@ extern int pthread_detach (pthread_t __th) __THROW;
 
 
 /* Obtain the identifier of the current thread.  */
-extern pthread_t pthread_self (void) __THROW __attribute__ ((__const__));
+extern pthread_t pthread_self (void) __THROW ;
 
 /* Compare two thread identifiers.  */
 extern int pthread_equal (pthread_t __thread1, pthread_t __thread2) __THROW;
@@ -700,10 +700,7 @@ extern void __pthread_unregister_cancel_restore (__pthread_unwind_buf_t *__buf)
 
 /* Internal interface to initiate cleanup.  */
 extern void __pthread_unwind_next (__pthread_unwind_buf_t *__buf)
-     __cleanup_fct_attribute __attribute__ ((__noreturn__))
-# ifndef SHARED
-     __attribute__ ((__weak__))
-# endif
+     __cleanup_fct_attribute
      ;
 #endif
 
diff --git a/nscd/dbg_log.h b/nscd/dbg_log.h
index 6cec54c..a6b75aa 100644
--- a/nscd/dbg_log.h
+++ b/nscd/dbg_log.h
@@ -22,8 +22,7 @@
 
 extern int debug_level;
 
-extern void dbg_log (const char *str, ...)
-     __attribute__ ((__format__ (__printf__, 1, 2)));;
+extern void dbg_log (const char *str, ...);
 
 extern void set_logfile (const char *logfile);
 extern int init_logfile (void);
diff --git a/nscd/nscd.h b/nscd/nscd.h
index 5c2ff3a..a083f41 100644
--- a/nscd/nscd.h
+++ b/nscd/nscd.h
@@ -162,13 +162,13 @@ extern gid_t old_gid;
 /* Prototypes for global functions.  */
 
 /* nscd.c */
-extern void termination_handler (int signum) __attribute__ ((__noreturn__));
+extern void termination_handler (int signum) ;
 extern int nscd_open_socket (void);
 
 /* connections.c */
 extern void nscd_init (void);
 extern void close_sockets (void);
-extern void start_threads (void) __attribute__ ((__noreturn__));
+extern void start_threads (void) ;
 
 /* nscd_conf.c */
 extern int nscd_parse_file (const char *fname,
@@ -176,7 +176,7 @@ extern int nscd_parse_file (const char *fname,
 
 /* nscd_stat.c */
 extern void send_stats (int fd, struct database_dyn dbs[lastdb]);
-extern int receive_print_stats (void) __attribute__ ((__noreturn__));
+extern int receive_print_stats (void) ;
 
 /* cache.c */
 extern struct datahead *cache_search (request_type, void *key, size_t len,
diff --git a/posix/unistd.h b/posix/unistd.h
index 4e1e9df..c5aa719 100644
--- a/posix/unistd.h
+++ b/posix/unistd.h
@@ -545,7 +545,7 @@ extern int nice (int __inc) __THROW __wur;
 
 
 /* Terminate program execution with the low-order 8 bits of STATUS.  */
-extern void _exit (int __status) __attribute__ ((__noreturn__));
+extern void _exit (int __status) ;
 
 
 /* Get the `_PC_*' symbols for the NAME argument to `pathconf' and `fpathconf';
@@ -561,7 +561,7 @@ extern long int pathconf (__const char *__path, int __name)
 extern long int fpathconf (int __fd, int __name) __THROW;
 
 /* Get the value of the system variable NAME.  */
-extern long int sysconf (int __name) __THROW __attribute__ ((__const__));
+extern long int sysconf (int __name) __THROW ;
 
 #ifdef	__USE_POSIX2
 /* Get the value of the string-valued system variable NAME.  */
@@ -935,7 +935,7 @@ extern void sync (void) __THROW;
 
 /* Return the number of bytes in a page.  This is the system's page size,
    which is not necessarily the same as the hardware page size.  */
-extern int getpagesize (void)  __THROW __attribute__ ((__const__));
+extern int getpagesize (void)  __THROW ;
 
 
 /* Return the maximum number of file descriptors
diff --git a/resolv/netdb.h b/resolv/netdb.h
index 7c5c9c9..4aeaae6 100644
--- a/resolv/netdb.h
+++ b/resolv/netdb.h
@@ -58,7 +58,7 @@ __BEGIN_DECLS
 #define h_errno (*__h_errno_location ())
 
 /* Function to get address of global `h_errno' variable.  */
-extern int *__h_errno_location (void) __THROW __attribute__ ((__const__));
+extern int *__h_errno_location (void) __THROW ;
 
 
 /* Possible values left in `h_errno'.  */
diff --git a/resolv/resolv.h b/resolv/resolv.h
index d7cda11..2d0f938 100644
--- a/resolv/resolv.h
+++ b/resolv/resolv.h
@@ -234,7 +234,7 @@ struct res_sym {
 
 /* Things involving an internal (static) resolver context. */
 __BEGIN_DECLS
-extern struct __res_state *__res_state(void) __attribute__ ((__const__));
+extern struct __res_state *__res_state(void) ;
 __END_DECLS
 #define _res (*__res_state())
 
diff --git a/setjmp/setjmp.h b/setjmp/setjmp.h
index f0babc0..8699340 100644
--- a/setjmp/setjmp.h
+++ b/setjmp/setjmp.h
@@ -78,7 +78,7 @@ __BEGIN_NAMESPACE_STD
 /* Jump to the environment saved in ENV, making the
    `setjmp' call there return VAL, or 1 if VAL is 0.  */
 extern void longjmp (struct __jmp_buf_tag __env[1], int __val)
-     __THROW __attribute__ ((__noreturn__));
+     __THROW ;
 
 __END_NAMESPACE_STD
 
@@ -87,7 +87,7 @@ __END_NAMESPACE_STD
    the signal mask.  But it is how ENV was saved that determines whether
    `longjmp' restores the mask; `_longjmp' is just an alias.  */
 extern void _longjmp (struct __jmp_buf_tag __env[1], int __val)
-     __THROW __attribute__ ((__noreturn__));
+     __THROW ;
 #endif
 
 
@@ -106,7 +106,7 @@ typedef struct __jmp_buf_tag sigjmp_buf[1];
    Restore the signal mask if that sigsetjmp call saved it.
    This is just an alias `longjmp'.  */
 extern void siglongjmp (sigjmp_buf __env, int __val)
-     __THROW __attribute__ ((__noreturn__));
+     __THROW ;
 #endif /* Use POSIX.  */
 
 __END_DECLS
diff --git a/stdlib/stdlib.h b/stdlib/stdlib.h
index fd81cf9..3707f43 100644
--- a/stdlib/stdlib.h
+++ b/stdlib/stdlib.h
@@ -625,7 +625,7 @@ extern int posix_memalign (void **__memptr, size_t __alignment, size_t __size)
 
 __BEGIN_NAMESPACE_STD
 /* Abort execution and generate a core-dump.  */
-extern void abort (void) __THROW __attribute__ ((__noreturn__));
+extern void abort (void) __THROW ;
 
 
 /* Register a function to be called when `exit' is called.  */
@@ -643,14 +643,14 @@ __BEGIN_NAMESPACE_STD
 /* Call all functions registered with `atexit' and `on_exit',
    in the reverse of the order in which they were registered
    perform stdio cleanup, and terminate program execution with STATUS.  */
-extern void exit (int __status) __THROW __attribute__ ((__noreturn__));
+extern void exit (int __status) __THROW ;
 __END_NAMESPACE_STD
 
 #ifdef __USE_ISOC99
 __BEGIN_NAMESPACE_C99
 /* Terminate the program with STATUS without calling any of the
    functions registered with `atexit' or `on_exit'.  */
-extern void _Exit (int __status) __THROW __attribute__ ((__noreturn__));
+extern void _Exit (int __status) __THROW ;
 __END_NAMESPACE_C99
 #endif
 
@@ -782,13 +782,13 @@ extern void qsort (void *__base, size_t __nmemb, size_t __size,
 
 
 /* Return the absolute value of X.  */
-extern int abs (int __x) __THROW __attribute__ ((__const__)) __wur;
-extern long int labs (long int __x) __THROW __attribute__ ((__const__)) __wur;
+extern int abs (int __x) __THROW  __wur;
+extern long int labs (long int __x) __THROW  __wur;
 __END_NAMESPACE_STD
 
 #ifdef __USE_ISOC99
 __extension__ extern long long int llabs (long long int __x)
-     __THROW __attribute__ ((__const__)) __wur;
+     __THROW  __wur;
 #endif
 
 
@@ -797,16 +797,16 @@ __BEGIN_NAMESPACE_STD
    of the value of NUMER over DENOM. */
 /* GCC may have built-ins for these someday.  */
 extern div_t div (int __numer, int __denom)
-     __THROW __attribute__ ((__const__)) __wur;
+     __THROW  __wur;
 extern ldiv_t ldiv (long int __numer, long int __denom)
-     __THROW __attribute__ ((__const__)) __wur;
+     __THROW  __wur;
 __END_NAMESPACE_STD
 
 #ifdef __USE_ISOC99
 __BEGIN_NAMESPACE_C99
 __extension__ extern lldiv_t lldiv (long long int __numer,
 				    long long int __denom)
-     __THROW __attribute__ ((__const__)) __wur;
+     __THROW  __wur;
 __END_NAMESPACE_C99
 #endif
 
diff --git a/string/string.h b/string/string.h
index 97933b0..a25f419 100644
--- a/string/string.h
+++ b/string/string.h
@@ -309,15 +309,15 @@ extern char *rindex (__const char *__s, int __c)
 
 /* Return the position of the first bit set in I, or 0 if none are set.
    The least-significant bit is position 1, the most-significant 32.  */
-extern int ffs (int __i) __THROW __attribute__ ((__const__));
+extern int ffs (int __i) __THROW ;
 
 /* The following two functions are non-standard but necessary for non-32 bit
    platforms.  */
 # ifdef	__USE_GNU
-extern int ffsl (long int __l) __THROW __attribute__ ((__const__));
+extern int ffsl (long int __l) __THROW ;
 #  ifdef __GNUC__
 __extension__ extern int ffsll (long long int __ll)
-     __THROW __attribute__ ((__const__));
+     __THROW ;
 #  endif
 # endif
 
diff --git a/string/strings.h b/string/strings.h
index 3ba2b04..02a68f0 100644
--- a/string/strings.h
+++ b/string/strings.h
@@ -42,7 +42,7 @@ extern void bzero (void *__s, size_t __n) __THROW;
 
 /* Return the position of the first bit set in I, or 0 if none are set.
    The least-significant bit is position 1, the most-significant 32.  */
-extern int ffs (int __i) __THROW __attribute__ ((const));
+extern int ffs (int __i) __THROW ;
 
 /* Find the first occurrence of C in S (same as strchr).  */
 extern char *index (__const char *__s, int __c) __THROW __attribute_pure__;
diff --git a/sunrpc/rpc/rpc.h b/sunrpc/rpc/rpc.h
index 38e4385..9e7b8a7 100644
--- a/sunrpc/rpc/rpc.h
+++ b/sunrpc/rpc/rpc.h
@@ -70,11 +70,11 @@
 __BEGIN_DECLS
 
 /* Global variables, protected for multi-threaded applications.  */
-extern fd_set *__rpc_thread_svc_fdset (void) __attribute__ ((__const__));
+extern fd_set *__rpc_thread_svc_fdset (void) ;
 #define svc_fdset (*__rpc_thread_svc_fdset ())
 
 extern struct rpc_createerr *__rpc_thread_createerr (void)
-     __attribute__ ((__const__));
+     ;
 #define get_rpc_createerr() (*__rpc_thread_createerr ())
 /* The people who "engineered" RPC should bee punished for naming the
    data structure and the variable the same.  We cannot always define the
@@ -86,10 +86,10 @@ extern struct rpc_createerr *__rpc_thread_createerr (void)
 #endif
 
 extern struct pollfd **__rpc_thread_svc_pollfd (void)
-     __attribute__ ((__const__));
+     ;
 #define svc_pollfd (*__rpc_thread_svc_pollfd ())
 
-extern int *__rpc_thread_svc_max_pollfd (void) __attribute__ ((__const__));
+extern int *__rpc_thread_svc_max_pollfd (void) ;
 #define svc_max_pollfd (*__rpc_thread_svc_max_pollfd ())
 
 __END_DECLS
diff --git a/sysdeps/generic/inttypes.h b/sysdeps/generic/inttypes.h
index 87f532f..6ee1891 100644
--- a/sysdeps/generic/inttypes.h
+++ b/sysdeps/generic/inttypes.h
@@ -295,11 +295,11 @@ typedef struct
 
 
 /* Compute absolute value of N.  */
-extern intmax_t imaxabs (intmax_t __n) __THROW __attribute__ ((__const__));
+extern intmax_t imaxabs (intmax_t __n) __THROW ;
 
 /* Return the `imaxdiv_t' representation of the value of NUMER over DENOM. */
 extern imaxdiv_t imaxdiv (intmax_t __numer, intmax_t __denom)
-      __THROW __attribute__ ((__const__));
+      __THROW ;
 
 /* Like `strtol' but convert to `intmax_t'.  */
 extern intmax_t strtoimax (__const char *__restrict __nptr,
diff --git a/sysdeps/generic/ldsodefs.h b/sysdeps/generic/ldsodefs.h
index eee6141..2f04c51 100644
--- a/sysdeps/generic/ldsodefs.h
+++ b/sysdeps/generic/ldsodefs.h
@@ -422,7 +422,7 @@ struct rtld_global
   EXTERN struct r_search_path_elem *_dl_all_dirs;
 
 #ifdef _LIBC_REENTRANT
-  EXTERN void **(*_dl_error_catch_tsd) (void) __attribute__ ((const));
+  EXTERN void **(*_dl_error_catch_tsd) (void) ;
 #endif
 
   /* Structure describing the dynamic linker itself.  We need to
@@ -647,8 +647,7 @@ struct rtld_global_ro
      call the function instead of going through the PLT.  The result
      is that we can avoid exporting the functions and we do not jump
      PLT relocations in libc.so.  */
-  void (*_dl_debug_printf) (const char *, ...)
-       __attribute__ ((__format__ (__printf__, 1, 2)));
+  void (*_dl_debug_printf) (const char *, ...);
   int (internal_function *_dl_catch_error) (const char **, const char **,
 					    bool *, void (*) (void *), void *);
   void (internal_function *_dl_signal_error) (int, const char *, const char *,
@@ -698,7 +697,7 @@ extern const struct rtld_global_ro _rtld_global_ro
 #ifdef IS_IN_rtld
 /* This is the initial value of GL(dl_error_catch_tsd).
    A non-TLS libpthread will change it.  */
-extern void **_dl_initial_error_catch_tsd (void) __attribute__ ((const))
+extern void **_dl_initial_error_catch_tsd (void) 
      attribute_hidden;
 #endif
 
@@ -748,19 +747,17 @@ extern int _dl_sysdep_open_zero_fill (void); /* dl-sysdep.c */
    interpreted as for a `printf' call.  All the lines start with a
    tag showing the PID.  */
 extern void _dl_debug_printf (const char *fmt, ...)
-     __attribute__ ((__format__ (__printf__, 1, 2))) attribute_hidden;
+     attribute_hidden;
 
 /* Write message on the debug file descriptor.  The parameters are
    interpreted as for a `printf' call.  All the lines buf the first
    start with a tag showing the PID.  */
-extern void _dl_debug_printf_c (const char *fmt, ...)
-     __attribute__ ((__format__ (__printf__, 1, 2)));
+extern void _dl_debug_printf_c (const char *fmt, ...);
 
 
 /* Write a message on the specified descriptor FD.  The parameters are
    interpreted as for a `printf' call.  */
 extern void _dl_dprintf (int fd, const char *fmt, ...)
-     __attribute__ ((__format__ (__printf__, 2, 3)))
      attribute_hidden;
 
 /* Write a message on the specified descriptor standard output.  The
diff --git a/sysdeps/gnu/bits/shm.h b/sysdeps/gnu/bits/shm.h
index cbda9ce..2ba5572 100644
--- a/sysdeps/gnu/bits/shm.h
+++ b/sysdeps/gnu/bits/shm.h
@@ -41,7 +41,7 @@ __BEGIN_DECLS
 
 /* Segment low boundary address multiple.  */
 #define SHMLBA		(__getpagesize ())
-extern int __getpagesize (void) __THROW __attribute__ ((__const__));
+extern int __getpagesize (void) __THROW ;
 
 
 /* Type to count number of attaches.  */
diff --git a/sysdeps/mach/hurd/bits/errno.h b/sysdeps/mach/hurd/bits/errno.h
index a7d57ad..1b9d993 100644
--- a/sysdeps/mach/hurd/bits/errno.h
+++ b/sysdeps/mach/hurd/bits/errno.h
@@ -309,7 +309,7 @@ typedef enum __error_t_codes error_t;
 
 /* Return the current thread's location for `errno'.
    The syntax of this function allows redeclarations like `int errno'.  */
-extern int *__errno_location (void) __THROW __attribute__ ((__const__));
+extern int *__errno_location (void) __THROW ;
 
 #define errno			(*__errno_location ())
 
diff --git a/sysdeps/powerpc/powerpc32/dl-machine.h b/sysdeps/powerpc/powerpc32/dl-machine.h
index 496fa71..3d6231f 100644
--- a/sysdeps/powerpc/powerpc32/dl-machine.h
+++ b/sysdeps/powerpc/powerpc32/dl-machine.h
@@ -37,7 +37,7 @@ elf_machine_matches_host (const Elf32_Ehdr *ehdr)
 }
 
 /* Return the value of the GOT pointer.  */
-static inline Elf32_Addr * __attribute__ ((const))
+static inline Elf32_Addr * 
 ppc_got (void)
 {
   Elf32_Addr *got;
@@ -56,14 +56,14 @@ ppc_got (void)
 
 /* Return the link-time address of _DYNAMIC, stored as
    the first value in the GOT. */
-static inline Elf32_Addr __attribute__ ((const))
+static inline Elf32_Addr 
 elf_machine_dynamic (void)
 {
   return *ppc_got ();
 }
 
 /* Return the run-time load address of the shared object.  */
-static inline Elf32_Addr __attribute__ ((const))
+static inline Elf32_Addr 
 elf_machine_load_address (void)
 {
   Elf32_Addr *branchaddr;
diff --git a/sysdeps/powerpc/powerpc64/dl-machine.h b/sysdeps/powerpc/powerpc64/dl-machine.h
index cec271b..f8aafad 100644
--- a/sysdeps/powerpc/powerpc64/dl-machine.h
+++ b/sysdeps/powerpc/powerpc64/dl-machine.h
@@ -72,7 +72,7 @@ elf_host_tolerates_class (const Elf64_Ehdr *ehdr)
 /* Return the run-time load address of the shared object, assuming it
    was originally linked at zero.  */
 static inline Elf64_Addr
-elf_machine_load_address (void) __attribute__ ((const));
+elf_machine_load_address (void) ;
 
 static inline Elf64_Addr
 elf_machine_load_address (void)
diff --git a/sysdeps/unix/sysv/linux/alpha/bits/errno.h b/sysdeps/unix/sysv/linux/alpha/bits/errno.h
index 8b2f152..62cb88d 100644
--- a/sysdeps/unix/sysv/linux/alpha/bits/errno.h
+++ b/sysdeps/unix/sysv/linux/alpha/bits/errno.h
@@ -39,7 +39,7 @@
 
 # ifndef __ASSEMBLER__
 /* Function to get address of global `errno' variable.  */
-extern int *__errno_location (void) __THROW __attribute__ ((__const__));
+extern int *__errno_location (void) __THROW ;
 
 #  if !defined _LIBC || defined _LIBC_REENTRANT
 /* When using threads, errno is a per-thread value.  */
diff --git a/sysdeps/unix/sysv/linux/alpha/bits/shm.h b/sysdeps/unix/sysv/linux/alpha/bits/shm.h
index 35226c1..cadaf15 100644
--- a/sysdeps/unix/sysv/linux/alpha/bits/shm.h
+++ b/sysdeps/unix/sysv/linux/alpha/bits/shm.h
@@ -40,7 +40,7 @@ __BEGIN_DECLS
 
 /* Segment low boundary address multiple.  */
 #define SHMLBA		(__getpagesize ())
-extern int __getpagesize (void) __THROW __attribute__ ((__const__));
+extern int __getpagesize (void) __THROW ;
 
 
 /* Type to count number of attaches.  */
diff --git a/sysdeps/unix/sysv/linux/alpha/sys/io.h b/sysdeps/unix/sysv/linux/alpha/sys/io.h
index 4334c63..3e20c80 100644
--- a/sysdeps/unix/sysv/linux/alpha/sys/io.h
+++ b/sysdeps/unix/sysv/linux/alpha/sys/io.h
@@ -40,16 +40,16 @@ extern int iopl (int __level) __THROW;
 
 /* Return the physical address of the DENSE I/O memory or NULL if none
    is available (e.g. on a jensen).  */
-extern unsigned long int _bus_base (void) __THROW __attribute__ ((const));
-extern unsigned long int bus_base (void) __THROW __attribute__ ((const));
+extern unsigned long int _bus_base (void) __THROW ;
+extern unsigned long int bus_base (void) __THROW ;
 
 /* Return the physical address of the SPARSE I/O memory.  */
-extern unsigned long _bus_base_sparse (void) __THROW __attribute__ ((const));
-extern unsigned long bus_base_sparse (void) __THROW __attribute__ ((const));
+extern unsigned long _bus_base_sparse (void) __THROW ;
+extern unsigned long bus_base_sparse (void) __THROW ;
 
 /* Return the HAE shift used by the SPARSE I/O memory.  */
-extern int _hae_shift (void) __THROW __attribute__ ((const));
-extern int hae_shift (void) __THROW __attribute__ ((const));
+extern int _hae_shift (void) __THROW ;
+extern int hae_shift (void) __THROW ;
 
 /* Previous three are deprecated in favour of the following, which
    knows about multiple PCI "hoses".  Provide the PCI bus and dfn
@@ -67,7 +67,7 @@ enum __pciconfig_iobase_which
 extern long pciconfig_iobase(enum __pciconfig_iobase_which __which,
 			     unsigned long int __bus,
 			     unsigned long int __dfn)
-     __THROW __attribute__ ((const));
+     __THROW ;
 
 /* Access PCI space protected from machine checks.  */
 extern int pciconfig_read (unsigned long int __bus,
diff --git a/sysdeps/unix/sysv/linux/bits/errno.h b/sysdeps/unix/sysv/linux/bits/errno.h
index 4de8cbb..5410c8e 100644
--- a/sysdeps/unix/sysv/linux/bits/errno.h
+++ b/sysdeps/unix/sysv/linux/bits/errno.h
@@ -40,7 +40,7 @@
 
 # ifndef __ASSEMBLER__
 /* Function to get address of global `errno' variable.  */
-extern int *__errno_location (void) __THROW __attribute__ ((__const__));
+extern int *__errno_location (void) __THROW ;
 
 #  if !defined _LIBC || defined _LIBC_REENTRANT
 /* When using threads, errno is a per-thread value.  */
diff --git a/sysdeps/unix/sysv/linux/bits/shm.h b/sysdeps/unix/sysv/linux/bits/shm.h
index 318d601..2c528c0 100644
--- a/sysdeps/unix/sysv/linux/bits/shm.h
+++ b/sysdeps/unix/sysv/linux/bits/shm.h
@@ -39,7 +39,7 @@ __BEGIN_DECLS
 
 /* Segment low boundary address multiple.  */
 #define SHMLBA		(__getpagesize ())
-extern int __getpagesize (void) __THROW __attribute__ ((__const__));
+extern int __getpagesize (void) __THROW ;
 
 
 /* Type to count number of attaches.  */
diff --git a/sysdeps/unix/sysv/linux/powerpc/bits/shm.h b/sysdeps/unix/sysv/linux/powerpc/bits/shm.h
index 62560c0..454fb03 100644
--- a/sysdeps/unix/sysv/linux/powerpc/bits/shm.h
+++ b/sysdeps/unix/sysv/linux/powerpc/bits/shm.h
@@ -40,7 +40,7 @@ __BEGIN_DECLS
 
 /* Segment low boundary address multiple.  */
 #define SHMLBA		(__getpagesize ())
-extern int __getpagesize (void) __THROW __attribute__ ((__const__));
+extern int __getpagesize (void) __THROW ;
 
 
 /* Type to count number of attaches.  */
diff --git a/sysdeps/unix/sysv/linux/s390/bits/shm.h b/sysdeps/unix/sysv/linux/s390/bits/shm.h
index d88ed36..4dc1df5 100644
--- a/sysdeps/unix/sysv/linux/s390/bits/shm.h
+++ b/sysdeps/unix/sysv/linux/s390/bits/shm.h
@@ -40,7 +40,7 @@ __BEGIN_DECLS
 
 /* Segment low boundary address multiple.  */
 #define SHMLBA		(__getpagesize ())
-extern int __getpagesize (void) __THROW __attribute__ ((__const__));
+extern int __getpagesize (void) __THROW ;
 
 
 /* Type to count number of attaches.  */
diff --git a/sysdeps/unix/sysv/linux/sparc/bits/errno.h b/sysdeps/unix/sysv/linux/sparc/bits/errno.h
index 02e200c..4967a87 100644
--- a/sysdeps/unix/sysv/linux/sparc/bits/errno.h
+++ b/sysdeps/unix/sysv/linux/sparc/bits/errno.h
@@ -39,7 +39,7 @@
 
 # ifndef __ASSEMBLER__
 /* Function to get address of global `errno' variable.  */
-extern int *__errno_location (void) __THROW __attribute__ ((__const__));
+extern int *__errno_location (void) __THROW ;
 
 #  if !defined _LIBC || defined _LIBC_REENTRANT
 /* When using threads, errno is a per-thread value.  */
diff --git a/sysdeps/unix/sysv/linux/sparc/bits/shm.h b/sysdeps/unix/sysv/linux/sparc/bits/shm.h
index 03decb1..50830d3 100644
--- a/sysdeps/unix/sysv/linux/sparc/bits/shm.h
+++ b/sysdeps/unix/sysv/linux/sparc/bits/shm.h
@@ -41,7 +41,7 @@ __BEGIN_DECLS
 
 /* Segment low boundary address multiple.  */
 #define SHMLBA		(__getpagesize ())
-extern int __getpagesize (void) __THROW __attribute__ ((__const__));
+extern int __getpagesize (void) __THROW ;
 
 
 /* Type to count number of attaches.  */
diff --git a/sysdeps/unix/sysv/linux/x86_64/bits/shm.h b/sysdeps/unix/sysv/linux/x86_64/bits/shm.h
index 3d8c05d..cef536f 100644
--- a/sysdeps/unix/sysv/linux/x86_64/bits/shm.h
+++ b/sysdeps/unix/sysv/linux/x86_64/bits/shm.h
@@ -40,7 +40,7 @@ __BEGIN_DECLS
 
 /* Segment low boundary address multiple.  */
 #define SHMLBA		(__getpagesize ())
-extern int __getpagesize (void) __THROW __attribute__ ((__const__));
+extern int __getpagesize (void) __THROW ;
 
 
 /* Type to count number of attaches.  */
diff --git a/sysdeps/unix/sysv/linux/x86_64/sys/epoll.h b/sysdeps/unix/sysv/linux/x86_64/sys/epoll.h
index 02672d3..4c005e8 100644
--- a/sysdeps/unix/sysv/linux/x86_64/sys/epoll.h
+++ b/sysdeps/unix/sysv/linux/x86_64/sys/epoll.h
@@ -70,7 +70,7 @@ struct epoll_event
 {
   uint32_t events;	/* Epoll events */
   epoll_data_t data;	/* User data variable */
-} __attribute__ ((__packed__));
+};
 
 
 __BEGIN_DECLS
diff --git a/time/time.h b/time/time.h
index 6c8f79d..950f661 100644
--- a/time/time.h
+++ b/time/time.h
@@ -188,7 +188,7 @@ extern time_t time (time_t *__timer) __THROW;
 
 /* Return the difference between TIME1 and TIME0.  */
 extern double difftime (time_t __time1, time_t __time0)
-     __THROW __attribute__ ((__const__));
+     __THROW ;
 
 /* Return the `time_t' representation of TP and normalize TP.  */
 extern time_t mktime (struct tm *__tp) __THROW;
@@ -315,7 +315,7 @@ extern time_t timegm (struct tm *__tp) __THROW;
 extern time_t timelocal (struct tm *__tp) __THROW;
 
 /* Return the number of days in YEAR.  */
-extern int dysize (int __year) __THROW  __attribute__ ((__const__));
+extern int dysize (int __year) __THROW  ;
 # endif
 
 
diff --git a/wcsmbs/bits/wchar2.h b/wcsmbs/bits/wchar2.h
index 00216ec..8ce25eb 100644
--- a/wcsmbs/bits/wchar2.h
+++ b/wcsmbs/bits/wchar2.h
@@ -196,7 +196,7 @@ __NTH (wcsncat (wchar_t *__dest, __const wchar_t *__src, size_t __n))
 extern int __swprintf_chk (wchar_t *__restrict __s, size_t __n,
 			   int __flag, size_t __s_len,
 			   __const wchar_t *__restrict __format, ...)
-     __THROW /* __attribute__ ((__format__ (__wprintf__, 5, 6))) */;
+     __THROW;
 
 /* XXX We might want to have support in gcc for swprintf.  */
 #define swprintf(s, n, ...) \
@@ -209,7 +209,7 @@ extern int __vswprintf_chk (wchar_t *__restrict __s, size_t __n,
 			    int __flag, size_t __s_len,
 			    __const wchar_t *__restrict __format,
 			    __gnuc_va_list __arg)
-     __THROW /* __attribute__ ((__format__ (__wprintf__, 5, 0))) */;
+     __THROW;
 
 #define vswprintf(s, n, fmt, ap) \
   (__bos (s) != (size_t) -1 || __USE_FORTIFY_LEVEL > 1			      \
diff --git a/wcsmbs/wchar.h b/wcsmbs/wchar.h
index f54abfa..2fe08ab 100644
--- a/wcsmbs/wchar.h
+++ b/wcsmbs/wchar.h
@@ -619,18 +619,16 @@ extern int fwide (__FILE *__fp, int __mode) __THROW;
    This function is a possible cancellation point and therefore not
    marked with __THROW.  */
 extern int fwprintf (__FILE *__restrict __stream,
-		     __const wchar_t *__restrict __format, ...)
-     /* __attribute__ ((__format__ (__wprintf__, 2, 3))) */;
+		     __const wchar_t *__restrict __format, ...);
 /* Write formatted output to stdout.
 
    This function is a possible cancellation point and therefore not
    marked with __THROW.  */
-extern int wprintf (__const wchar_t *__restrict __format, ...)
-     /* __attribute__ ((__format__ (__wprintf__, 1, 2))) */;
+extern int wprintf (__const wchar_t *__restrict __format, ...);
 /* Write formatted output of at most N characters to S.  */
 extern int swprintf (wchar_t *__restrict __s, size_t __n,
 		     __const wchar_t *__restrict __format, ...)
-     __THROW /* __attribute__ ((__format__ (__wprintf__, 3, 4))) */;
+     __THROW;
 
 /* Write formatted output to S from argument list ARG.
 
@@ -638,21 +636,19 @@ extern int swprintf (wchar_t *__restrict __s, size_t __n,
    marked with __THROW.  */
 extern int vfwprintf (__FILE *__restrict __s,
 		      __const wchar_t *__restrict __format,
-		      __gnuc_va_list __arg)
-     /* __attribute__ ((__format__ (__wprintf__, 2, 0))) */;
+		      __gnuc_va_list __arg);
 /* Write formatted output to stdout from argument list ARG.
 
    This function is a possible cancellation point and therefore not
    marked with __THROW.  */
 extern int vwprintf (__const wchar_t *__restrict __format,
-		     __gnuc_va_list __arg)
-     /* __attribute__ ((__format__ (__wprintf__, 1, 0))) */;
+		     __gnuc_va_list __arg);
 /* Write formatted output of at most N character to S from argument
    list ARG.  */
 extern int vswprintf (wchar_t *__restrict __s, size_t __n,
 		      __const wchar_t *__restrict __format,
 		      __gnuc_va_list __arg)
-     __THROW /* __attribute__ ((__format__ (__wprintf__, 3, 0))) */;
+     __THROW;
 
 
 /* Read formatted input from STREAM.
@@ -660,18 +656,16 @@ extern int vswprintf (wchar_t *__restrict __s, size_t __n,
    This function is a possible cancellation point and therefore not
    marked with __THROW.  */
 extern int fwscanf (__FILE *__restrict __stream,
-		    __const wchar_t *__restrict __format, ...)
-     /* __attribute__ ((__format__ (__wscanf__, 2, 3))) */;
+		    __const wchar_t *__restrict __format, ...);
 /* Read formatted input from stdin.
 
    This function is a possible cancellation point and therefore not
    marked with __THROW.  */
-extern int wscanf (__const wchar_t *__restrict __format, ...)
-     /* __attribute__ ((__format__ (__wscanf__, 1, 2))) */;
+extern int wscanf (__const wchar_t *__restrict __format, ...);
 /* Read formatted input from S.  */
 extern int swscanf (__const wchar_t *__restrict __s,
 		    __const wchar_t *__restrict __format, ...)
-     __THROW /* __attribute__ ((__format__ (__wscanf__, 2, 3))) */;
+     __THROW;
 
 __END_NAMESPACE_C99
 #endif /* Use ISO C99 and Unix98. */
@@ -685,20 +679,18 @@ __BEGIN_NAMESPACE_C99
    marked with __THROW.  */
 extern int vfwscanf (__FILE *__restrict __s,
 		     __const wchar_t *__restrict __format,
-		     __gnuc_va_list __arg)
-     /* __attribute__ ((__format__ (__wscanf__, 2, 0))) */;
+		     __gnuc_va_list __arg);
 /* Read formatted input from stdin into argument list ARG.
 
    This function is a possible cancellation point and therefore not
    marked with __THROW.  */
 extern int vwscanf (__const wchar_t *__restrict __format,
-		    __gnuc_va_list __arg)
-     /* __attribute__ ((__format__ (__wscanf__, 1, 0))) */;
+		    __gnuc_va_list __arg);
 /* Read formatted input from S into argument list ARG.  */
 extern int vswscanf (__const wchar_t *__restrict __s,
 		     __const wchar_t *__restrict __format,
 		     __gnuc_va_list __arg)
-     __THROW /* __attribute__ ((__format__ (__wscanf__, 2, 0))) */;
+     __THROW;
 
 __END_NAMESPACE_C99
 #endif /* Use ISO C99. */
