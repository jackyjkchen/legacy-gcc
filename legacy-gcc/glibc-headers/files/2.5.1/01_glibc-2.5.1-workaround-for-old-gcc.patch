diff --git a/bits/shm.h b/bits/shm.h
index 746a863..c6a431e 100644
--- a/bits/shm.h
+++ b/bits/shm.h
@@ -36,7 +36,7 @@ __BEGIN_DECLS
 
 /* Segment low boundary address multiple.  */
 #define SHMLBA		(__getpagesize ())
-extern int __getpagesize (void) __THROW __attribute__ ((__const__));
+extern int __getpagesize (void) __THROW ;
 
 
 /* Type to count number of attaches.  */
diff --git a/ctype/ctype.h b/ctype/ctype.h
index e085453..24ed9db 100644
--- a/ctype/ctype.h
+++ b/ctype/ctype.h
@@ -79,11 +79,11 @@ enum
    doesn't fit into an `unsigned char'.  But today more important is that
    the arrays are also used for multi-byte character sets.  */
 extern __const unsigned short int **__ctype_b_loc (void)
-     __attribute__ ((__const));
+     ;
 extern __const __int32_t **__ctype_tolower_loc (void)
-     __attribute__ ((__const));
+     ;
 extern __const __int32_t **__ctype_toupper_loc (void)
-     __attribute__ ((__const));
+     ;
 
 #define __isctype(c, type) \
   ((*__ctype_b_loc ())[(int) (c)] & (unsigned short int) type)
diff --git a/hurd/hurd/signal.h b/hurd/hurd/signal.h
index 238a73f..7aef745 100644
--- a/hurd/hurd/signal.h
+++ b/hurd/hurd/signal.h
@@ -123,7 +123,7 @@ extern struct hurd_sigstate *_hurd_self_sigstate (void)
      /* This declaration tells the compiler that the value is constant.
 	We assume this won't be called twice from the same stack frame
 	by different threads.  */
-     __attribute__ ((__const__));
+     ;
 
 #ifndef _HURD_SIGNAL_H_EXTERN_INLINE
 #define _HURD_SIGNAL_H_EXTERN_INLINE extern __inline
diff --git a/hurd/hurd/threadvar.h b/hurd/hurd/threadvar.h
index 5e7441f..92e9125 100644
--- a/hurd/hurd/threadvar.h
+++ b/hurd/hurd/threadvar.h
@@ -104,7 +104,7 @@ __hurd_threadvar_location (enum __hurd_threadvar_index __index) __THROW
      /* This declaration tells the compiler that the value is constant
 	given the same argument.  We assume this won't be called twice from
 	the same stack frame by different threads.  */
-     __attribute__ ((__const__));
+     ;
 
 _HURD_THREADVAR_H_EXTERN_INLINE unsigned long int *
 __hurd_threadvar_location (enum __hurd_threadvar_index __index)
diff --git a/include/errno.h b/include/errno.h
index fe8bca4..0b364bd 100644
--- a/include/errno.h
+++ b/include/errno.h
@@ -36,7 +36,7 @@ extern __thread int errno attribute_tls_model_ie;
 # define __set_errno(val) (errno = (val))
 
 # ifndef __ASSEMBLER__
-extern int *__errno_location (void) __THROW __attribute__ ((__const__))
+extern int *__errno_location (void) __THROW 
 #  if RTLD_PRIVATE_ERRNO
      attribute_hidden
 #  endif
diff --git a/include/unistd.h b/include/unistd.h
index f34d53f..f782d68 100644
--- a/include/unistd.h
+++ b/include/unistd.h
@@ -127,7 +127,7 @@ extern ssize_t __write (int __fd, __const void *__buf, size_t __n);
 libc_hidden_proto (__write)
 extern __pid_t __fork (void);
 libc_hidden_proto (__fork)
-extern int __getpagesize (void) __attribute__ ((__const__));
+extern int __getpagesize (void) ;
 libc_hidden_proto (__getpagesize)
 extern int __ftruncate (int __fd, __off_t __length);
 extern int __ftruncate64 (int __fd, __off64_t __length);
diff --git a/inet/netinet/in.h b/inet/netinet/in.h
index 4fdc0fa..1af04d2 100644
--- a/inet/netinet/in.h
+++ b/inet/netinet/in.h
@@ -351,13 +351,13 @@ struct group_filter
    this was a short-sighted decision since on different systems the types
    may have different representations but the values are always the same.  */
 
-extern uint32_t ntohl (uint32_t __netlong) __THROW __attribute__ ((__const__));
+extern uint32_t ntohl (uint32_t __netlong) __THROW ;
 extern uint16_t ntohs (uint16_t __netshort)
-     __THROW __attribute__ ((__const__));
+     __THROW ;
 extern uint32_t htonl (uint32_t __hostlong)
-     __THROW __attribute__ ((__const__));
+     __THROW ;
 extern uint16_t htons (uint16_t __hostshort)
-     __THROW __attribute__ ((__const__));
+     __THROW ;
 
 #include <endian.h>
 
diff --git a/math/bits/mathcalls.h b/math/bits/mathcalls.h
index 64da627..d6f3fed 100644
--- a/math/bits/mathcalls.h
+++ b/math/bits/mathcalls.h
@@ -190,19 +190,19 @@ __MATHCALL (fmod,, (_Mdouble_ __x, _Mdouble_ __y));
 
 /* Return 0 if VALUE is finite or NaN, +1 if it
    is +Infinity, -1 if it is -Infinity.  */
-__MATHDECL_1 (int,__isinf,, (_Mdouble_ __value)) __attribute__ ((__const__));
+__MATHDECL_1 (int,__isinf,, (_Mdouble_ __value)) ;
 
 /* Return nonzero if VALUE is finite and not NaN.  */
-__MATHDECL_1 (int,__finite,, (_Mdouble_ __value)) __attribute__ ((__const__));
+__MATHDECL_1 (int,__finite,, (_Mdouble_ __value)) ;
 _Mdouble_END_NAMESPACE
 
 #ifdef __USE_MISC
 /* Return 0 if VALUE is finite or NaN, +1 if it
    is +Infinity, -1 if it is -Infinity.  */
-__MATHDECL_1 (int,isinf,, (_Mdouble_ __value)) __attribute__ ((__const__));
+__MATHDECL_1 (int,isinf,, (_Mdouble_ __value)) ;
 
 /* Return nonzero if VALUE is finite and not NaN.  */
-__MATHDECL_1 (int,finite,, (_Mdouble_ __value)) __attribute__ ((__const__));
+__MATHDECL_1 (int,finite,, (_Mdouble_ __value)) ;
 
 /* Return the remainder of X/Y.  */
 __MATHCALL (drem,, (_Mdouble_ __x, _Mdouble_ __y));
@@ -228,11 +228,11 @@ __END_NAMESPACE_C99
 
 
 /* Return nonzero if VALUE is not a number.  */
-__MATHDECL_1 (int,__isnan,, (_Mdouble_ __value)) __attribute__ ((__const__));
+__MATHDECL_1 (int,__isnan,, (_Mdouble_ __value)) ;
 
 #if defined __USE_MISC || defined __USE_XOPEN
 /* Return nonzero if VALUE is not a number.  */
-__MATHDECL_1 (int,isnan,, (_Mdouble_ __value)) __attribute__ ((__const__));
+__MATHDECL_1 (int,isnan,, (_Mdouble_ __value)) ;
 
 /* Bessel functions.  */
 __MATHCALL (j0,, (_Mdouble_));
@@ -344,11 +344,11 @@ __MATHCALL (fmin,, (_Mdouble_ __x, _Mdouble_ __y));
 
 /* Classify given number.  */
 __MATHDECL_1 (int, __fpclassify,, (_Mdouble_ __value))
-     __attribute__ ((__const__));
+     ;
 
 /* Test for negative number.  */
 __MATHDECL_1 (int, __signbit,, (_Mdouble_ __value))
-     __attribute__ ((__const__));
+     ;
 
 
 /* Multiply-add function computed as a ternary operation.  */
diff --git a/math/math.h b/math/math.h
index c50b2e7..ef9df29 100644
--- a/math/math.h
+++ b/math/math.h
@@ -103,16 +103,16 @@ __BEGIN_DECLS
 
 #   ifdef __USE_ISOC99 
 extern float __nldbl_nexttowardf (float __x, long double __y)
-				  __THROW __attribute__ ((__const__));
+				  __THROW ;
 #    ifdef __REDIRECT_NTH
 extern float __REDIRECT_NTH (nexttowardf, (float __x, long double __y),
 			     __nldbl_nexttowardf)
-     __attribute__ ((__const__));
+     ;
 extern double __REDIRECT_NTH (nexttoward, (double __x, long double __y),
-			      nextafter) __attribute__ ((__const__));
+			      nextafter) ;
 extern long double __REDIRECT_NTH (nexttowardl,
 				   (long double __x, long double __y),
-				   nextafter) __attribute__ ((__const__));
+				   nextafter) ;
 #    endif
 #   endif
 
diff --git a/nptl/sysdeps/pthread/pthread.h b/nptl/sysdeps/pthread/pthread.h
index 8d4bc74..f148f47 100644
--- a/nptl/sysdeps/pthread/pthread.h
+++ b/nptl/sysdeps/pthread/pthread.h
@@ -263,7 +263,7 @@ extern int pthread_detach (pthread_t __th) __THROW;
 
 
 /* Obtain the identifier of the current thread.  */
-extern pthread_t pthread_self (void) __THROW __attribute__ ((__const__));
+extern pthread_t pthread_self (void) __THROW ;
 
 /* Compare two thread identifiers.  */
 extern int pthread_equal (pthread_t __thread1, pthread_t __thread2) __THROW;
diff --git a/posix/unistd.h b/posix/unistd.h
index 4e1e9df..f3d7f39 100644
--- a/posix/unistd.h
+++ b/posix/unistd.h
@@ -561,7 +561,7 @@ extern long int pathconf (__const char *__path, int __name)
 extern long int fpathconf (int __fd, int __name) __THROW;
 
 /* Get the value of the system variable NAME.  */
-extern long int sysconf (int __name) __THROW __attribute__ ((__const__));
+extern long int sysconf (int __name) __THROW ;
 
 #ifdef	__USE_POSIX2
 /* Get the value of the string-valued system variable NAME.  */
@@ -935,7 +935,7 @@ extern void sync (void) __THROW;
 
 /* Return the number of bytes in a page.  This is the system's page size,
    which is not necessarily the same as the hardware page size.  */
-extern int getpagesize (void)  __THROW __attribute__ ((__const__));
+extern int getpagesize (void)  __THROW ;
 
 
 /* Return the maximum number of file descriptors
diff --git a/resolv/netdb.h b/resolv/netdb.h
index 7c5c9c9..4aeaae6 100644
--- a/resolv/netdb.h
+++ b/resolv/netdb.h
@@ -58,7 +58,7 @@ __BEGIN_DECLS
 #define h_errno (*__h_errno_location ())
 
 /* Function to get address of global `h_errno' variable.  */
-extern int *__h_errno_location (void) __THROW __attribute__ ((__const__));
+extern int *__h_errno_location (void) __THROW ;
 
 
 /* Possible values left in `h_errno'.  */
diff --git a/resolv/resolv.h b/resolv/resolv.h
index d7cda11..2d0f938 100644
--- a/resolv/resolv.h
+++ b/resolv/resolv.h
@@ -234,7 +234,7 @@ struct res_sym {
 
 /* Things involving an internal (static) resolver context. */
 __BEGIN_DECLS
-extern struct __res_state *__res_state(void) __attribute__ ((__const__));
+extern struct __res_state *__res_state(void) ;
 __END_DECLS
 #define _res (*__res_state())
 
diff --git a/stdlib/stdlib.h b/stdlib/stdlib.h
index fd81cf9..2d4cc3e 100644
--- a/stdlib/stdlib.h
+++ b/stdlib/stdlib.h
@@ -782,13 +782,13 @@ extern void qsort (void *__base, size_t __nmemb, size_t __size,
 
 
 /* Return the absolute value of X.  */
-extern int abs (int __x) __THROW __attribute__ ((__const__)) __wur;
-extern long int labs (long int __x) __THROW __attribute__ ((__const__)) __wur;
+extern int abs (int __x) __THROW  __wur;
+extern long int labs (long int __x) __THROW  __wur;
 __END_NAMESPACE_STD
 
 #ifdef __USE_ISOC99
 __extension__ extern long long int llabs (long long int __x)
-     __THROW __attribute__ ((__const__)) __wur;
+     __THROW  __wur;
 #endif
 
 
@@ -797,16 +797,16 @@ __BEGIN_NAMESPACE_STD
    of the value of NUMER over DENOM. */
 /* GCC may have built-ins for these someday.  */
 extern div_t div (int __numer, int __denom)
-     __THROW __attribute__ ((__const__)) __wur;
+     __THROW  __wur;
 extern ldiv_t ldiv (long int __numer, long int __denom)
-     __THROW __attribute__ ((__const__)) __wur;
+     __THROW  __wur;
 __END_NAMESPACE_STD
 
 #ifdef __USE_ISOC99
 __BEGIN_NAMESPACE_C99
 __extension__ extern lldiv_t lldiv (long long int __numer,
 				    long long int __denom)
-     __THROW __attribute__ ((__const__)) __wur;
+     __THROW  __wur;
 __END_NAMESPACE_C99
 #endif
 
diff --git a/string/string.h b/string/string.h
index 1adf925..c8d4485 100644
--- a/string/string.h
+++ b/string/string.h
@@ -309,15 +309,15 @@ extern char *rindex (__const char *__s, int __c)
 
 /* Return the position of the first bit set in I, or 0 if none are set.
    The least-significant bit is position 1, the most-significant 32.  */
-extern int ffs (int __i) __THROW __attribute__ ((__const__));
+extern int ffs (int __i) __THROW ;
 
 /* The following two functions are non-standard but necessary for non-32 bit
    platforms.  */
 # ifdef	__USE_GNU
-extern int ffsl (long int __l) __THROW __attribute__ ((__const__));
+extern int ffsl (long int __l) __THROW ;
 #  ifdef __GNUC__
 __extension__ extern int ffsll (long long int __ll)
-     __THROW __attribute__ ((__const__));
+     __THROW ;
 #  endif
 # endif
 
diff --git a/sunrpc/rpc/rpc.h b/sunrpc/rpc/rpc.h
index 38e4385..9e7b8a7 100644
--- a/sunrpc/rpc/rpc.h
+++ b/sunrpc/rpc/rpc.h
@@ -70,11 +70,11 @@
 __BEGIN_DECLS
 
 /* Global variables, protected for multi-threaded applications.  */
-extern fd_set *__rpc_thread_svc_fdset (void) __attribute__ ((__const__));
+extern fd_set *__rpc_thread_svc_fdset (void) ;
 #define svc_fdset (*__rpc_thread_svc_fdset ())
 
 extern struct rpc_createerr *__rpc_thread_createerr (void)
-     __attribute__ ((__const__));
+     ;
 #define get_rpc_createerr() (*__rpc_thread_createerr ())
 /* The people who "engineered" RPC should bee punished for naming the
    data structure and the variable the same.  We cannot always define the
@@ -86,10 +86,10 @@ extern struct rpc_createerr *__rpc_thread_createerr (void)
 #endif
 
 extern struct pollfd **__rpc_thread_svc_pollfd (void)
-     __attribute__ ((__const__));
+     ;
 #define svc_pollfd (*__rpc_thread_svc_pollfd ())
 
-extern int *__rpc_thread_svc_max_pollfd (void) __attribute__ ((__const__));
+extern int *__rpc_thread_svc_max_pollfd (void) ;
 #define svc_max_pollfd (*__rpc_thread_svc_max_pollfd ())
 
 __END_DECLS
diff --git a/sysdeps/generic/inttypes.h b/sysdeps/generic/inttypes.h
index 87f532f..6ee1891 100644
--- a/sysdeps/generic/inttypes.h
+++ b/sysdeps/generic/inttypes.h
@@ -295,11 +295,11 @@ typedef struct
 
 
 /* Compute absolute value of N.  */
-extern intmax_t imaxabs (intmax_t __n) __THROW __attribute__ ((__const__));
+extern intmax_t imaxabs (intmax_t __n) __THROW ;
 
 /* Return the `imaxdiv_t' representation of the value of NUMER over DENOM. */
 extern imaxdiv_t imaxdiv (intmax_t __numer, intmax_t __denom)
-      __THROW __attribute__ ((__const__));
+      __THROW ;
 
 /* Like `strtol' but convert to `intmax_t'.  */
 extern intmax_t strtoimax (__const char *__restrict __nptr,
diff --git a/sysdeps/gnu/bits/shm.h b/sysdeps/gnu/bits/shm.h
index cbda9ce..2ba5572 100644
--- a/sysdeps/gnu/bits/shm.h
+++ b/sysdeps/gnu/bits/shm.h
@@ -41,7 +41,7 @@ __BEGIN_DECLS
 
 /* Segment low boundary address multiple.  */
 #define SHMLBA		(__getpagesize ())
-extern int __getpagesize (void) __THROW __attribute__ ((__const__));
+extern int __getpagesize (void) __THROW ;
 
 
 /* Type to count number of attaches.  */
diff --git a/sysdeps/mach/hurd/bits/errno.h b/sysdeps/mach/hurd/bits/errno.h
index a7d57ad..1b9d993 100644
--- a/sysdeps/mach/hurd/bits/errno.h
+++ b/sysdeps/mach/hurd/bits/errno.h
@@ -309,7 +309,7 @@ typedef enum __error_t_codes error_t;
 
 /* Return the current thread's location for `errno'.
    The syntax of this function allows redeclarations like `int errno'.  */
-extern int *__errno_location (void) __THROW __attribute__ ((__const__));
+extern int *__errno_location (void) __THROW ;
 
 #define errno			(*__errno_location ())
 
diff --git a/sysdeps/unix/sysv/linux/alpha/bits/errno.h b/sysdeps/unix/sysv/linux/alpha/bits/errno.h
index 8b2f152..62cb88d 100644
--- a/sysdeps/unix/sysv/linux/alpha/bits/errno.h
+++ b/sysdeps/unix/sysv/linux/alpha/bits/errno.h
@@ -39,7 +39,7 @@
 
 # ifndef __ASSEMBLER__
 /* Function to get address of global `errno' variable.  */
-extern int *__errno_location (void) __THROW __attribute__ ((__const__));
+extern int *__errno_location (void) __THROW ;
 
 #  if !defined _LIBC || defined _LIBC_REENTRANT
 /* When using threads, errno is a per-thread value.  */
diff --git a/sysdeps/unix/sysv/linux/alpha/bits/shm.h b/sysdeps/unix/sysv/linux/alpha/bits/shm.h
index 35226c1..cadaf15 100644
--- a/sysdeps/unix/sysv/linux/alpha/bits/shm.h
+++ b/sysdeps/unix/sysv/linux/alpha/bits/shm.h
@@ -40,7 +40,7 @@ __BEGIN_DECLS
 
 /* Segment low boundary address multiple.  */
 #define SHMLBA		(__getpagesize ())
-extern int __getpagesize (void) __THROW __attribute__ ((__const__));
+extern int __getpagesize (void) __THROW ;
 
 
 /* Type to count number of attaches.  */
diff --git a/sysdeps/unix/sysv/linux/bits/errno.h b/sysdeps/unix/sysv/linux/bits/errno.h
index 4de8cbb..5410c8e 100644
--- a/sysdeps/unix/sysv/linux/bits/errno.h
+++ b/sysdeps/unix/sysv/linux/bits/errno.h
@@ -40,7 +40,7 @@
 
 # ifndef __ASSEMBLER__
 /* Function to get address of global `errno' variable.  */
-extern int *__errno_location (void) __THROW __attribute__ ((__const__));
+extern int *__errno_location (void) __THROW ;
 
 #  if !defined _LIBC || defined _LIBC_REENTRANT
 /* When using threads, errno is a per-thread value.  */
diff --git a/sysdeps/unix/sysv/linux/bits/shm.h b/sysdeps/unix/sysv/linux/bits/shm.h
index 318d601..2c528c0 100644
--- a/sysdeps/unix/sysv/linux/bits/shm.h
+++ b/sysdeps/unix/sysv/linux/bits/shm.h
@@ -39,7 +39,7 @@ __BEGIN_DECLS
 
 /* Segment low boundary address multiple.  */
 #define SHMLBA		(__getpagesize ())
-extern int __getpagesize (void) __THROW __attribute__ ((__const__));
+extern int __getpagesize (void) __THROW ;
 
 
 /* Type to count number of attaches.  */
diff --git a/sysdeps/unix/sysv/linux/powerpc/bits/shm.h b/sysdeps/unix/sysv/linux/powerpc/bits/shm.h
index 62560c0..454fb03 100644
--- a/sysdeps/unix/sysv/linux/powerpc/bits/shm.h
+++ b/sysdeps/unix/sysv/linux/powerpc/bits/shm.h
@@ -40,7 +40,7 @@ __BEGIN_DECLS
 
 /* Segment low boundary address multiple.  */
 #define SHMLBA		(__getpagesize ())
-extern int __getpagesize (void) __THROW __attribute__ ((__const__));
+extern int __getpagesize (void) __THROW ;
 
 
 /* Type to count number of attaches.  */
diff --git a/sysdeps/unix/sysv/linux/s390/bits/shm.h b/sysdeps/unix/sysv/linux/s390/bits/shm.h
index d88ed36..4dc1df5 100644
--- a/sysdeps/unix/sysv/linux/s390/bits/shm.h
+++ b/sysdeps/unix/sysv/linux/s390/bits/shm.h
@@ -40,7 +40,7 @@ __BEGIN_DECLS
 
 /* Segment low boundary address multiple.  */
 #define SHMLBA		(__getpagesize ())
-extern int __getpagesize (void) __THROW __attribute__ ((__const__));
+extern int __getpagesize (void) __THROW ;
 
 
 /* Type to count number of attaches.  */
diff --git a/sysdeps/unix/sysv/linux/sparc/bits/errno.h b/sysdeps/unix/sysv/linux/sparc/bits/errno.h
index 02e200c..4967a87 100644
--- a/sysdeps/unix/sysv/linux/sparc/bits/errno.h
+++ b/sysdeps/unix/sysv/linux/sparc/bits/errno.h
@@ -39,7 +39,7 @@
 
 # ifndef __ASSEMBLER__
 /* Function to get address of global `errno' variable.  */
-extern int *__errno_location (void) __THROW __attribute__ ((__const__));
+extern int *__errno_location (void) __THROW ;
 
 #  if !defined _LIBC || defined _LIBC_REENTRANT
 /* When using threads, errno is a per-thread value.  */
diff --git a/sysdeps/unix/sysv/linux/sparc/bits/shm.h b/sysdeps/unix/sysv/linux/sparc/bits/shm.h
index 03decb1..50830d3 100644
--- a/sysdeps/unix/sysv/linux/sparc/bits/shm.h
+++ b/sysdeps/unix/sysv/linux/sparc/bits/shm.h
@@ -41,7 +41,7 @@ __BEGIN_DECLS
 
 /* Segment low boundary address multiple.  */
 #define SHMLBA		(__getpagesize ())
-extern int __getpagesize (void) __THROW __attribute__ ((__const__));
+extern int __getpagesize (void) __THROW ;
 
 
 /* Type to count number of attaches.  */
diff --git a/sysdeps/unix/sysv/linux/x86_64/bits/shm.h b/sysdeps/unix/sysv/linux/x86_64/bits/shm.h
index 3d8c05d..cef536f 100644
--- a/sysdeps/unix/sysv/linux/x86_64/bits/shm.h
+++ b/sysdeps/unix/sysv/linux/x86_64/bits/shm.h
@@ -40,7 +40,7 @@ __BEGIN_DECLS
 
 /* Segment low boundary address multiple.  */
 #define SHMLBA		(__getpagesize ())
-extern int __getpagesize (void) __THROW __attribute__ ((__const__));
+extern int __getpagesize (void) __THROW ;
 
 
 /* Type to count number of attaches.  */
diff --git a/time/time.h b/time/time.h
index 6c8f79d..950f661 100644
--- a/time/time.h
+++ b/time/time.h
@@ -188,7 +188,7 @@ extern time_t time (time_t *__timer) __THROW;
 
 /* Return the difference between TIME1 and TIME0.  */
 extern double difftime (time_t __time1, time_t __time0)
-     __THROW __attribute__ ((__const__));
+     __THROW ;
 
 /* Return the `time_t' representation of TP and normalize TP.  */
 extern time_t mktime (struct tm *__tp) __THROW;
@@ -315,7 +315,7 @@ extern time_t timegm (struct tm *__tp) __THROW;
 extern time_t timelocal (struct tm *__tp) __THROW;
 
 /* Return the number of days in YEAR.  */
-extern int dysize (int __year) __THROW  __attribute__ ((__const__));
+extern int dysize (int __year) __THROW  ;
 # endif
 
 
